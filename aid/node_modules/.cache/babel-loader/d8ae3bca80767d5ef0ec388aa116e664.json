{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\web\\\\aid\\\\src\\\\routes\\\\extensions\\\\map\\\\googlemap\\\\mapOverlay\\\\Components\\\\MapOverlay.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport { GoogleMap, OverlayView, withGoogleMap } from \"react-google-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = {\n  mapContainer: {\n    height: 500\n  },\n  overlayView: {\n    background: '#fff',\n    border: '1px solid #ccc',\n    padding: 15\n  }\n};\nfunction getPixelPositionOffset(width, height) {\n  return {\n    x: -(width / 2),\n    y: -(height / 2)\n  };\n}\nconst OverlayViewExampleGoogleMap = withGoogleMap(_c = props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n  defaultZoom: 15,\n  defaultCenter: {\n    lat: 47.646935,\n    lng: -122.303763\n  },\n  children: /*#__PURE__*/_jsxDEV(OverlayView, {\n    position: {\n      lat: 47.646935,\n      lng: -122.303763\n    }\n    /*\r\n     * An alternative to specifying position is specifying bounds.\r\n     * bounds can either be an instance of google.maps.LatLngBounds\r\n     * or an object in the following format:\r\n     * bounds={{\r\n     *    ne: { lat: 62.400471, lng: -150.005608 },\r\n     *    sw: { lat: 62.281819, lng: -150.287132 }\r\n     * }}\r\n     */\n    /*\r\n     * 1. Specify the pane the OverlayView will be rendered to. For\r\n     *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\r\n     *    Defaults to `OverlayView.OVERLAY_LAYER`.\r\n     */,\n    mapPaneName: OverlayView.OVERLAY_MOUSE_TARGET\n    /*\r\n     * 2. Tweak the OverlayView's pixel position. In this case, we're\r\n     *    centering the content.\r\n     */,\n    getPixelPositionOffset: getPixelPositionOffset\n    /*\r\n     * 3. Create OverlayView content using standard React components.\r\n     */,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gx-map-content\",\n      style: STYLES.overlayView,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"OverlayView\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"raised\",\n        color: \"primary\",\n        onClick: props.onClick,\n        children: [\"I have been clicked \", props.count, \" time\", props.count === 1 ? `` : `s`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this));\n\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\n_c2 = OverlayViewExampleGoogleMap;\nexport default class MapOverlay extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(OverlayViewExampleGoogleMap, {\n      loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this),\n      containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `550px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 27\n      }, this),\n      mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this),\n      count: this.state.count,\n      onClick: this.handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"OverlayViewExampleGoogleMap$withGoogleMap\");\n$RefreshReg$(_c2, \"OverlayViewExampleGoogleMap\");","map":{"version":3,"names":["React","Component","Button","GoogleMap","OverlayView","withGoogleMap","jsxDEV","_jsxDEV","STYLES","mapContainer","height","overlayView","background","border","padding","getPixelPositionOffset","width","x","y","OverlayViewExampleGoogleMap","_c","props","defaultZoom","defaultCenter","lat","lng","children","position","mapPaneName","OVERLAY_MOUSE_TARGET","className","style","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","count","_c2","MapOverlay","constructor","args","state","handleClick","bind","setState","render","loadingElement","containerElement","mapElement","$RefreshReg$"],"sources":["C:/wamp64/www/web/aid/src/routes/extensions/map/googlemap/mapOverlay/Components/MapOverlay.js"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button} from \"antd\";\r\nimport {GoogleMap, OverlayView, withGoogleMap} from \"react-google-maps\";\r\n\r\nconst STYLES = {\r\n  mapContainer: {\r\n    height: 500,\r\n  },\r\n  overlayView: {\r\n    background: '#fff',\r\n    border: '1px solid #ccc',\r\n    padding: 15,\r\n  },\r\n};\r\n\r\nfunction getPixelPositionOffset(width, height) {\r\n  return {x: -(width / 2), y: -(height / 2)};\r\n}\r\n\r\nconst OverlayViewExampleGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={15}\r\n    defaultCenter={{lat: 47.646935, lng: -122.303763}}\r\n  >\r\n    <OverlayView\r\n      position={{lat: 47.646935, lng: -122.303763}}\r\n      /*\r\n       * An alternative to specifying position is specifying bounds.\r\n       * bounds can either be an instance of google.maps.LatLngBounds\r\n       * or an object in the following format:\r\n       * bounds={{\r\n       *    ne: { lat: 62.400471, lng: -150.005608 },\r\n       *    sw: { lat: 62.281819, lng: -150.287132 }\r\n       * }}\r\n       */\r\n      /*\r\n       * 1. Specify the pane the OverlayView will be rendered to. For\r\n       *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\r\n       *    Defaults to `OverlayView.OVERLAY_LAYER`.\r\n       */\r\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n      /*\r\n       * 2. Tweak the OverlayView's pixel position. In this case, we're\r\n       *    centering the content.\r\n       */\r\n      getPixelPositionOffset={getPixelPositionOffset}\r\n      /*\r\n       * 3. Create OverlayView content using standard React components.\r\n       */\r\n    >\r\n      <div className=\"gx-map-content\" style={STYLES.overlayView}>\r\n        <h1>OverlayView</h1>\r\n        <Button variant=\"raised\" color=\"primary\" onClick={props.onClick}>\r\n          I have been clicked {props.count} time{props.count === 1 ? `` : `s`}\r\n        </Button>\r\n      </div>\r\n    </OverlayView>\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nexport default class MapOverlay extends Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n\r\n  handleClick = this.handleClick.bind(this);\r\n\r\n  handleClick() {\r\n    this.setState({count: this.state.count + 1});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <OverlayViewExampleGoogleMap\r\n        loadingElement={<div style={{height: `100%`}}/>}\r\n        containerElement={<div style={{height: `550px`}}/>}\r\n        mapElement={<div style={{height: `100%`}}/>}\r\n        count={this.state.count}\r\n        onClick={this.handleClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}