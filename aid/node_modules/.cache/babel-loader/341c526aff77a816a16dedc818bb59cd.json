{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\web\\\\aid\\\\src\\\\routes\\\\inBuiltApps\\\\FirebaseCRUD\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Button, Drawer } from \"antd\";\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport ContactList from \"./ContactList\";\nimport AppModuleHeader from \"components/AppModuleHeader/index\";\nimport InfoView from \"components/InfoView/index\";\nimport AddContact from \"./AddContact\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport { onAddContact, onDeleteContact, onGetAllContact, onUpdateContact } from \"../../../appRedux/actions/Contact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet contactId = 723812738;\nconst filterOptions = [{\n  id: 1,\n  name: 'All contacts',\n  icon: 'all-contacts'\n}, {\n  id: 2,\n  name: 'Frequently contacted',\n  icon: 'frequent'\n}, {\n  id: 3,\n  name: 'Starred contacts',\n  icon: 'star'\n}];\nclass FirebaseCRUD extends Component {\n  constructor() {\n    super();\n    this.ContactSideBar = user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gx-module-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gx-module-side-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gx-module-logo\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon icon-contacts gx-mr-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                id: \"chat.contacts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gx-module-side-content\",\n          children: /*#__PURE__*/_jsxDEV(CustomScrollbars, {\n            className: \"gx-module-side-scroll\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gx-module-add-task\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"gx-btn-block ant-btn\",\n                type: \"primary\",\n                \"aria-label\": \"add\",\n                onClick: this.onAddContact,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon icon-add gx-mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add New Contact\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gx-module-side-nav\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"gx-module-nav\",\n                children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"gx-nav-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `gx-link ${option.id === this.state.selectedSectionId ? 'active' : ''}`,\n                    onClick: this.onFilterOptionSelect.bind(this, option),\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `icon icon-${option.icon}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: option.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 19\n                  }, this)\n                }, option.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 44\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }, this);\n    };\n    this.addFavourite = (id, data) => {\n      let contact = data;\n      contact.starred = !data.starred;\n      this.props.onUpdateContact(id, contact);\n    };\n    this.onAddContact = () => {\n      this.setState({\n        addContactState: true\n      });\n    };\n    this.onContactClose = () => {\n      this.setState({\n        addContactState: false\n      });\n    };\n    this.onFilterOptionSelect = option => {\n      switch (option.name) {\n        case 'All contacts':\n          {\n            this.setState({\n              selectedSectionId: option.id,\n              filterOption: option.name,\n              contactList: this.state.allContact\n            });\n            break;\n          }\n        case 'Frequently contacted':\n          {\n            this.setState({\n              selectedSectionId: option.id,\n              filterOption: option.name,\n              contactList: _.filter(this.state.allContact, (contact, key) => contact.frequently)\n            });\n            break;\n          }\n        case 'Starred contacts':\n          {\n            this.setState({\n              selectedSectionId: option.id,\n              filterOption: option.name,\n              contactList: _.filter(this.state.allContact, contact => contact.starred)\n            });\n            break;\n          }\n        default:\n          break;\n      }\n    };\n    this.onSaveContact = (id, data) => {\n      if (id) {\n        this.props.onUpdateContact(id, data);\n      } else {\n        this.props.onAddContact(data);\n      }\n    };\n    this.onDeleteContact = data => {\n      this.props.onDeleteContact(data);\n    };\n    this.filterContact = userName => {\n      const {\n        filterOption\n      } = this.state;\n      if (userName === '') {\n        this.setState({\n          contactList: this.state.allContact\n        });\n      } else {\n        const filterContact = _.filter(this.state.allContact, contact => contact.name.toLowerCase().indexOf(userName.toLowerCase()) > -1);\n        if (filterOption === 'All contacts') {\n          this.setState({\n            contactList: filterContact\n          });\n        } else if (filterOption === 'Frequently contacted') {\n          this.setState({\n            contactList: filterContact.filter(contact => contact.frequently)\n          });\n        } else if (filterOption === 'Starred contacts') {\n          this.setState({\n            contactList: filterContact.filter(contact => contact.starred)\n          });\n        }\n      }\n    };\n    this.handleRequestClose = () => {\n      this.setState({\n        showMessage: false\n      });\n    };\n    this.state = {\n      noContentFoundMessage: 'No Contact found in selected folder',\n      alertMessage: '',\n      showMessage: false,\n      selectedSectionId: 1,\n      drawerState: false,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert.johnson@example.com',\n        avatar: \"https://via.placeholder.com/150\"\n      },\n      searchUser: '',\n      filterOption: 'All contacts',\n      allContact: [],\n      contactList: [],\n      selectedContact: null,\n      addContactState: false\n    };\n  }\n  componentWillMount() {\n    this.props.onGetAllContact();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.contactList) {\n      this.setState({\n        allContact: nextProps.contactList,\n        contactList: nextProps.contactList\n      });\n    }\n  }\n  updateContactUser(evt) {\n    this.setState({\n      searchUser: evt.target.value\n    });\n    this.filterContact(evt.target.value);\n  }\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n  render() {\n    const {\n      user,\n      contactList,\n      addContactState,\n      drawerState,\n      noContentFoundMessage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gx-main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gx-app-module\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gx-d-block gx-d-lg-none\",\n          children: /*#__PURE__*/_jsxDEV(Drawer, {\n            placement: \"left\",\n            closable: false,\n            visible: drawerState,\n            onClose: this.onToggleDrawer.bind(this),\n            children: this.ContactSideBar()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gx-module-sidenav gx-d-none gx-d-lg-flex\",\n          children: this.ContactSideBar(user)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gx-module-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gx-module-box-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gx-drawer-btn gx-d-flex gx-d-lg-none\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon icon-menu gx-icon-btn\",\n                \"aria-label\": \"Menu\",\n                onClick: this.onToggleDrawer.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AppModuleHeader, {\n              placeholder: \"Search contact\",\n              notification: false,\n              apps: false,\n              user: this.state.user,\n              onChange: this.updateContactUser.bind(this),\n              value: this.state.searchUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gx-module-box-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gx-module-box-topbar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomScrollbars, {\n              className: \"gx-module-content-scroll\",\n              children: contactList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gx-h-100 gx-d-flex gx-align-items-center gx-justify-content-center\",\n                children: noContentFoundMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(ContactList, {\n                contactList: contactList,\n                addFavourite: this.addFavourite,\n                onDeleteContact: this.onDeleteContact.bind(this),\n                onSaveContact: this.onSaveContact.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddContact, {\n        open: addContactState,\n        contact: {\n          'id': contactId++,\n          'name': '',\n          'thumb': '',\n          'email': '',\n          'phone': '',\n          'designation': '',\n          'starred': false,\n          'frequently': false\n        },\n        onSaveContact: this.onSaveContact,\n        onContactClose: this.onContactClose,\n        onDeleteContact: this.onDeleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = ({\n  contact\n}) => {\n  const {\n    contactList,\n    selectedContact\n  } = contact;\n  return {\n    contactList,\n    selectedContact\n  };\n};\nexport default connect(mapStateToProps, {\n  onGetAllContact,\n  onAddContact,\n  onUpdateContact,\n  onDeleteContact\n})(FirebaseCRUD);","map":{"version":3,"names":["React","Component","Button","Drawer","CustomScrollbars","ContactList","AppModuleHeader","InfoView","AddContact","IntlMessages","connect","_","onAddContact","onDeleteContact","onGetAllContact","onUpdateContact","jsxDEV","_jsxDEV","contactId","filterOptions","id","name","icon","FirebaseCRUD","constructor","ContactSideBar","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","map","option","state","selectedSectionId","onFilterOptionSelect","bind","addFavourite","data","contact","starred","props","setState","addContactState","onContactClose","filterOption","contactList","allContact","filter","key","frequently","onSaveContact","filterContact","userName","toLowerCase","indexOf","handleRequestClose","showMessage","noContentFoundMessage","alertMessage","drawerState","email","avatar","searchUser","selectedContact","componentWillMount","componentWillReceiveProps","nextProps","updateContactUser","evt","target","value","onToggleDrawer","render","placement","closable","visible","onClose","placeholder","notification","apps","onChange","length","open","mapStateToProps"],"sources":["C:/wamp64/www/web/aid/src/routes/inBuiltApps/FirebaseCRUD/index.js"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Drawer} from \"antd\";\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\n\r\nimport ContactList from \"./ContactList\";\r\nimport AppModuleHeader from \"components/AppModuleHeader/index\";\r\nimport InfoView from \"components/InfoView/index\";\r\nimport AddContact from \"./AddContact\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport {connect} from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport {onAddContact, onDeleteContact, onGetAllContact, onUpdateContact} from \"../../../appRedux/actions/Contact\";\r\n\r\nlet contactId = 723812738;\r\n\r\nconst filterOptions = [\r\n  {\r\n    id: 1,\r\n    name: 'All contacts',\r\n    icon: 'all-contacts'\r\n  }, {\r\n    id: 2,\r\n    name: 'Frequently contacted',\r\n    icon: 'frequent'\r\n\r\n  }, {\r\n\r\n    id: 3,\r\n    name: 'Starred contacts',\r\n    icon: 'star'\r\n  }\r\n];\r\n\r\nclass FirebaseCRUD extends Component {\r\n\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      noContentFoundMessage: 'No Contact found in selected folder',\r\n      alertMessage: '',\r\n      showMessage: false,\r\n      selectedSectionId: 1,\r\n      drawerState: false,\r\n      user: {\r\n        name: 'Robert Johnson',\r\n        email: 'robert.johnson@example.com',\r\n        avatar: \"https://via.placeholder.com/150\"\r\n      },\r\n      searchUser: '',\r\n      filterOption: 'All contacts',\r\n      allContact: [],\r\n      contactList: [],\r\n      selectedContact: null,\r\n      addContactState: false,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.onGetAllContact();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.contactList) {\r\n      this.setState({\r\n        allContact: nextProps.contactList,\r\n        contactList: nextProps.contactList,\r\n      })\r\n    }\r\n  }\r\n\r\n  ContactSideBar = (user) => {\r\n    return <div className=\"gx-module-side\">\r\n      <div className=\"gx-module-side-header\">\r\n        <div className=\"gx-module-logo\">\r\n          <i className=\"icon icon-contacts gx-mr-4\"/>\r\n          <span><IntlMessages id=\"chat.contacts\"/></span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"gx-module-side-content\">\r\n        <CustomScrollbars className=\"gx-module-side-scroll\">\r\n          <div className=\"gx-module-add-task\">\r\n            <Button className=\"gx-btn-block ant-btn\" type=\"primary\" aria-label=\"add\"\r\n                    onClick={this.onAddContact}>\r\n              <i className=\"icon icon-add gx-mr-2\"/>\r\n              <span>Add New Contact</span>\r\n            </Button>\r\n          </div>\r\n          <div className=\"gx-module-side-nav\">\r\n            <ul className=\"gx-module-nav\">\r\n              {filterOptions.map(option => <li key={option.id} className=\"gx-nav-item\">\r\n                  <span\r\n                    className={`gx-link ${option.id === this.state.selectedSectionId ? 'active' : ''}`} onClick={\r\n                    this.onFilterOptionSelect.bind(this, option)\r\n                  }>\r\n                    <i className={`icon icon-${option.icon}`}/>\r\n                    <span>{option.name}</span>\r\n                  </span>\r\n                </li>\r\n              )}\r\n\r\n            </ul>\r\n          </div>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n\r\n  };\r\n\r\n  addFavourite = (id, data) => {\r\n    let contact = data;\r\n    contact.starred = !data.starred;\r\n    this.props.onUpdateContact(id, contact);\r\n  };\r\n\r\n  onAddContact = () => {\r\n    this.setState({addContactState: true});\r\n  };\r\n  onContactClose = () => {\r\n    this.setState({addContactState: false});\r\n  };\r\n  onFilterOptionSelect = (option) => {\r\n    switch (option.name) {\r\n      case 'All contacts': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          contactList: this.state.allContact\r\n        });\r\n        break;\r\n      }\r\n      case 'Frequently contacted': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          contactList: _.filter(this.state.allContact, (contact, key) => contact.frequently)\r\n        });\r\n        break;\r\n      }\r\n      case 'Starred contacts': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          contactList: _.filter(this.state.allContact, (contact) => contact.starred)\r\n        });\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n  };\r\n  onSaveContact = (id, data) => {\r\n    if (id) {\r\n      this.props.onUpdateContact(id, data);\r\n    } else {\r\n      this.props.onAddContact(data);\r\n    }\r\n  };\r\n  onDeleteContact = (data) => {\r\n    this.props.onDeleteContact(data);\r\n  };\r\n  filterContact = (userName) => {\r\n    const {filterOption} = this.state;\r\n    if (userName === '') {\r\n      this.setState({contactList: this.state.allContact});\r\n    } else {\r\n      const filterContact = _.filter(this.state.allContact, (contact) =>\r\n        contact.name.toLowerCase().indexOf(userName.toLowerCase()) > -1);\r\n      if (filterOption === 'All contacts') {\r\n        this.setState({contactList: filterContact});\r\n      } else if (filterOption === 'Frequently contacted') {\r\n        this.setState({contactList: filterContact.filter((contact) => contact.frequently)});\r\n\r\n      } else if (filterOption === 'Starred contacts') {\r\n        this.setState({contactList: filterContact.filter((contact) => contact.starred)});\r\n      }\r\n    }\r\n  };\r\n  handleRequestClose = () => {\r\n    this.setState({\r\n      showMessage: false,\r\n    });\r\n  };\r\n\r\n  updateContactUser(evt) {\r\n    this.setState({\r\n      searchUser: evt.target.value,\r\n    });\r\n    this.filterContact(evt.target.value)\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {user, contactList, addContactState, drawerState, noContentFoundMessage} = this.state;\r\n    return (\r\n      <div className=\"gx-main-content\">\r\n        <div className=\"gx-app-module\">\r\n\r\n          <div className=\"gx-d-block gx-d-lg-none\">\r\n            <Drawer\r\n              placement=\"left\"\r\n              closable={false}\r\n              visible={drawerState}\r\n              onClose={this.onToggleDrawer.bind(this)}>\r\n              {this.ContactSideBar()}\r\n            </Drawer>\r\n          </div>\r\n          <div className=\"gx-module-sidenav gx-d-none gx-d-lg-flex\">\r\n            {this.ContactSideBar(user)}\r\n          </div>\r\n\r\n          <div className=\"gx-module-box\">\r\n            <div className=\"gx-module-box-header\">\r\n              <span className=\"gx-drawer-btn gx-d-flex gx-d-lg-none\">\r\n                  <i className=\"icon icon-menu gx-icon-btn\" aria-label=\"Menu\"\r\n                     onClick={this.onToggleDrawer.bind(this)}/>\r\n              </span>\r\n\r\n              <AppModuleHeader placeholder=\"Search contact\" notification={false} apps={false}\r\n                               user={this.state.user}\r\n                               onChange={this.updateContactUser.bind(this)}\r\n                               value={this.state.searchUser}/>\r\n            </div>\r\n            <div className=\"gx-module-box-content\">\r\n\r\n              <div className=\"gx-module-box-topbar\">\r\n\r\n              </div>\r\n              <CustomScrollbars className=\"gx-module-content-scroll\">\r\n                {contactList.length === 0 ?\r\n                  <div className=\"gx-h-100 gx-d-flex gx-align-items-center gx-justify-content-center\">\r\n                    {noContentFoundMessage}\r\n                  </div>\r\n                  : <ContactList contactList={contactList}\r\n                                 addFavourite={this.addFavourite}\r\n                                 onDeleteContact={this.onDeleteContact.bind(this)}\r\n                                 onSaveContact={this.onSaveContact.bind(this)}/>\r\n                }\r\n\r\n\r\n              </CustomScrollbars>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <AddContact open={addContactState} contact={{\r\n          'id': contactId++,\r\n          'name': '',\r\n          'thumb': '',\r\n          'email': '',\r\n          'phone': '',\r\n          'designation': '',\r\n          'starred': false,\r\n          'frequently': false,\r\n        }} onSaveContact={this.onSaveContact}\r\n                    onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>\r\n        <InfoView/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({contact}) => {\r\n  const {contactList, selectedContact} = contact;\r\n  return {contactList, selectedContact}\r\n};\r\nexport default connect(mapStateToProps, {\r\n  onGetAllContact,\r\n  onAddContact,\r\n  onUpdateContact,\r\n  onDeleteContact\r\n})(FirebaseCRUD);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}