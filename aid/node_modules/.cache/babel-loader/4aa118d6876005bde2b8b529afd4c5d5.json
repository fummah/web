{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _DeleteOutlined = _interopRequireDefault(require(\"@ant-design/icons/DeleteOutlined\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _checkbox = _interopRequireDefault(require(\"../checkbox\"));\nvar _LocaleReceiver = _interopRequireDefault(require(\"../locale-provider/LocaleReceiver\"));\nvar _default2 = _interopRequireDefault(require(\"../locale/default\"));\nvar _transButton = _interopRequireDefault(require(\"../_util/transButton\"));\nvar ListItem = function ListItem(props) {\n  var renderedText = props.renderedText,\n    renderedEl = props.renderedEl,\n    item = props.item,\n    checked = props.checked,\n    disabled = props.disabled,\n    prefixCls = props.prefixCls,\n    onClick = props.onClick,\n    onRemove = props.onRemove,\n    showRemove = props.showRemove;\n  var className = (0, _classnames[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-content-item\"), true), \"\".concat(prefixCls, \"-content-item-disabled\"), disabled || item.disabled), \"\".concat(prefixCls, \"-content-item-checked\"), checked));\n  var title;\n  if (typeof renderedText === 'string' || typeof renderedText === 'number') {\n    title = String(renderedText);\n  }\n  return /*#__PURE__*/React.createElement(_LocaleReceiver[\"default\"], {\n    componentName: \"Transfer\",\n    defaultLocale: _default2[\"default\"].Transfer\n  }, function (contextLocale) {\n    var liProps = {\n      className: className,\n      title: title\n    };\n    var labelNode = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-content-item-text\")\n    }, renderedEl);\n    // Show remove\n    if (showRemove) {\n      return /*#__PURE__*/React.createElement(\"li\", (0, _extends2[\"default\"])({}, liProps), labelNode, /*#__PURE__*/React.createElement(_transButton[\"default\"], {\n        disabled: disabled || item.disabled,\n        className: \"\".concat(prefixCls, \"-content-item-remove\"),\n        \"aria-label\": contextLocale.remove,\n        onClick: function onClick() {\n          onRemove === null || onRemove === void 0 ? void 0 : onRemove(item);\n        }\n      }, /*#__PURE__*/React.createElement(_DeleteOutlined[\"default\"], null)));\n    }\n    // Default click to select\n    liProps.onClick = disabled || item.disabled ? undefined : function () {\n      return onClick(item);\n    };\n    return /*#__PURE__*/React.createElement(\"li\", (0, _extends2[\"default\"])({}, liProps), /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n      className: \"\".concat(prefixCls, \"-checkbox\"),\n      checked: checked,\n      disabled: disabled || item.disabled\n    }), labelNode);\n  });\n};\nvar _default = exports[\"default\"] = /*#__PURE__*/React.memo(ListItem);","map":null,"metadata":{},"sourceType":"script"}