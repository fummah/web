{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\web\\\\aid\\\\src\\\\routes\\\\components\\\\dataDisplay\\\\Calendar\\\\NoticeCalendar.js\";\nimport React from \"react\";\nimport { Badge, Calendar, Card } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getListData = value => {\n  let listData;\n  switch (value.date()) {\n    case 8:\n      listData = [{\n        type: 'warning',\n        content: 'This is warning event.'\n      }, {\n        type: 'success',\n        content: 'This is usual event.'\n      }];\n      break;\n    case 10:\n      listData = [{\n        type: 'warning',\n        content: 'This is warning event.'\n      }, {\n        type: 'success',\n        content: 'This is usual event.'\n      }, {\n        type: 'error',\n        content: 'This is error event.'\n      }];\n      break;\n    case 15:\n      listData = [{\n        type: 'warning',\n        content: 'This is warning event'\n      }, {\n        type: 'success',\n        content: 'This is very long usual event。。....'\n      }, {\n        type: 'error',\n        content: 'This is error event 1.'\n      }, {\n        type: 'error',\n        content: 'This is error event 2.'\n      }, {\n        type: 'error',\n        content: 'This is error event 3.'\n      }, {\n        type: 'error',\n        content: 'This is error event 4.'\n      }];\n      break;\n    default:\n  }\n  return listData || [];\n};\nconst NoticeCalendar = () => {\n  function dateCellRender(value) {\n    const listData = getListData(value);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"events gx-text-left\",\n      children: listData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          className: \"gx-text-left\",\n          status: item.type,\n          text: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, item.content, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n  const getMonthData = value => {\n    if (value.month() === 8) {\n      return 1394;\n    }\n  };\n  const monthCellRender = value => {\n    const num = getMonthData(value);\n    return num ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-month\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Backlog number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this) : null;\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"gx-card\",\n    title: \"Notice Calendar\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      className: \"gx-com-calendar\",\n      dateCellRender: dateCellRender,\n      monthCellRender: monthCellRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_c = NoticeCalendar;\nexport default NoticeCalendar;\nvar _c;\n$RefreshReg$(_c, \"NoticeCalendar\");","map":{"version":3,"names":["React","Badge","Calendar","Card","jsxDEV","_jsxDEV","getListData","value","listData","date","type","content","NoticeCalendar","dateCellRender","className","children","map","item","status","text","fileName","_jsxFileName","lineNumber","columnNumber","getMonthData","month","monthCellRender","num","title","_c","$RefreshReg$"],"sources":["C:/wamp64/www/web/aid/src/routes/components/dataDisplay/Calendar/NoticeCalendar.js"],"sourcesContent":["import React from \"react\";\r\nimport {Badge, Calendar, Card} from \"antd\";\r\n\r\nconst getListData = (value) => {\r\n  let listData;\r\n  switch (value.date()) {\r\n    case 8:\r\n      listData = [\r\n        {type: 'warning', content: 'This is warning event.'},\r\n        {type: 'success', content: 'This is usual event.'},\r\n      ];\r\n      break;\r\n    case 10:\r\n      listData = [\r\n        {type: 'warning', content: 'This is warning event.'},\r\n        {type: 'success', content: 'This is usual event.'},\r\n        {type: 'error', content: 'This is error event.'},\r\n      ];\r\n      break;\r\n    case 15:\r\n      listData = [\r\n        {type: 'warning', content: 'This is warning event'},\r\n        {type: 'success', content: 'This is very long usual event。。....'},\r\n        {type: 'error', content: 'This is error event 1.'},\r\n        {type: 'error', content: 'This is error event 2.'},\r\n        {type: 'error', content: 'This is error event 3.'},\r\n        {type: 'error', content: 'This is error event 4.'},\r\n      ];\r\n      break;\r\n    default:\r\n  }\r\n  return listData || [];\r\n};\r\n\r\nconst NoticeCalendar = () => {\r\n  function dateCellRender(value) {\r\n    const listData = getListData(value);\r\n    return (\r\n      <ul className=\"events gx-text-left\">\r\n        {\r\n          listData.map(item => (\r\n            <li key={item.content}>\r\n              <Badge className=\"gx-text-left\" status={item.type} text={item.content}/>\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  const getMonthData = (value) => {\r\n    if (value.month() === 8) {\r\n      return 1394;\r\n    }\r\n  };\r\n\r\n  const monthCellRender = (value) => {\r\n    const num = getMonthData(value);\r\n    return num ? (\r\n      <div className=\"notes-month\">\r\n        <section>{num}</section>\r\n        <span>Backlog number</span>\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Notice Calendar\">\r\n      <Calendar className=\"gx-com-calendar\" dateCellRender={dateCellRender} monthCellRender={monthCellRender}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NoticeCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}