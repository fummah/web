{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\web\\\\aid\\\\src\\\\routes\\\\lists\\\\Users\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Button, Checkbox, Drawer, message } from \"antd\";\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport userList from \"./data/userList\";\nimport UsersList from \"components/lists/UsersList\";\nimport AppModuleHeader from \"components/AppModuleHeader/index\";\nimport AddUser from \"components/contact/AddUser\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet contactId = 723812738;\nconst filterOptions = [{\n  id: 1,\n  name: 'All contacts',\n  icon: 'all-contacts'\n}, {\n  id: 2,\n  name: 'Frequently contacted',\n  icon: 'frequent'\n}, {\n  id: 3,\n  name: 'Starred contacts',\n  icon: 'star'\n}];\nclass Users extends Component {\n  constructor() {\n    super();\n    this.ContactSideBar = user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gx-module-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gx-module-side-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gx-module-logo\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon icon-contacts gx-mr-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                id: \"chat.contacts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gx-module-side-content\",\n          children: /*#__PURE__*/_jsxDEV(CustomScrollbars, {\n            className: \"gx-module-side-scroll\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gx-module-add-task\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"gx-btn-block ant-btn\",\n                type: \"primary\",\n                \"aria-label\": \"add\",\n                onClick: this.onAddUser,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon icon-add gx-mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add New Contact\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gx-module-side-nav\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"gx-module-nav\",\n                children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"gx-nav-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `gx-link ${option.id === this.state.selectedSectionId ? 'active' : ''}`,\n                    onClick: this.onFilterOptionSelect.bind(this, option),\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `icon icon-${option.icon}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: option.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 19\n                  }, this)\n                }, option.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 44\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }, this);\n    };\n    this.addFavourite = data => {\n      this.setState({\n        alertMessage: data.starred ? 'Contact removed as star' : 'Contact marked as star',\n        showMessage: true,\n        userList: this.state.userList.map(contact => contact.id === data.id ? {\n          ...contact,\n          starred: !data.starred\n        } : contact),\n        allContact: this.state.allContact.map(contact => contact.id === data.id ? {\n          ...contact,\n          starred: !data.starred\n        } : contact)\n      });\n    };\n    this.onContactSelect = data => {\n      data.selected = !data.selected;\n      let selectedContacts = 0;\n      const userList = this.state.userList.map(contact => {\n        if (contact.selected) {\n          selectedContacts++;\n        }\n        if (contact.id === data.id) {\n          if (contact.selected) {\n            selectedContacts++;\n          }\n          return data;\n        } else {\n          return contact;\n        }\n      });\n      this.setState({\n        selectedContacts: selectedContacts,\n        userList: userList\n      });\n    };\n    this.onAddUser = () => {\n      this.setState({\n        AddUserState: true\n      });\n    };\n    this.onContactClose = () => {\n      this.setState({\n        AddUserState: false\n      });\n    };\n    this.onFilterOptionSelect = option => {\n      switch (option.name) {\n        case 'All contacts':\n          {\n            this.setState({\n              selectedSectionId: option.id,\n              filterOption: option.name,\n              userList: this.state.allContact\n            });\n            break;\n          }\n        case 'Frequently contacted':\n          {\n            this.setState({\n              selectedSectionId: option.id,\n              filterOption: option.name,\n              userList: this.state.allContact.filter(contact => contact.frequently)\n            });\n            break;\n          }\n        case 'Starred contacts':\n          {\n            this.setState({\n              selectedSectionId: option.id,\n              filterOption: option.name,\n              userList: this.state.allContact.filter(contact => contact.starred)\n            });\n            break;\n          }\n        default:\n          break;\n      }\n    };\n    this.onSaveContact = data => {\n      let isNew = true;\n      const userList = this.state.allContact.map(contact => {\n        if (contact.id === data.id) {\n          isNew = false;\n          return data;\n        } else {\n          return contact;\n        }\n      });\n      if (isNew) {\n        userList.push(data);\n      }\n      this.setState({\n        alertMessage: isNew ? 'Contact Added Successfully' : 'Contact Updated Successfully',\n        showMessage: true,\n        userList: userList,\n        allContact: userList\n      });\n      // this.onFilterOptionSelect(this.state.filterOption);\n    };\n    this.onDeleteContact = data => {\n      this.setState({\n        alertMessage: 'Contact Deleted Successfully',\n        showMessage: true,\n        allContact: this.state.allContact.filter(contact => contact.id !== data.id),\n        userList: this.state.allContact.filter(contact => contact.id !== data.id)\n      });\n    };\n    this.onDeleteSelectedContact = () => {\n      const contacts = this.state.allContact.filter(contact => !contact.selected);\n      this.setState({\n        alertMessage: 'Contact Deleted Successfully',\n        showMessage: true,\n        allContact: contacts,\n        userList: contacts,\n        selectedContacts: 0\n      });\n    };\n    this.filterContact = userName => {\n      const {\n        filterOption\n      } = this.state;\n      if (userName === '') {\n        this.setState({\n          userList: this.state.allContact\n        });\n      } else {\n        const filterContact = this.state.allContact.filter(contact => contact.name.toLowerCase().indexOf(userName.toLowerCase()) > -1);\n        if (filterOption === 'All contacts') {\n          this.setState({\n            userList: filterContact\n          });\n        } else if (filterOption === 'Frequently contacted') {\n          this.setState({\n            userList: filterContact.filter(contact => contact.frequently)\n          });\n        } else if (filterOption === 'Starred contacts') {\n          this.setState({\n            userList: filterContact.filter(contact => contact.starred)\n          });\n        }\n      }\n    };\n    this.handleRequestClose = () => {\n      this.setState({\n        showMessage: false\n      });\n    };\n    this.getAllContact = () => {\n      let userList = this.state.allContact.map(contact => contact ? {\n        ...contact,\n        selected: true\n      } : contact);\n      this.setState({\n        selectedContacts: userList.length,\n        allContact: userList,\n        userList: userList\n      });\n    };\n    this.getUnselectedAllContact = () => {\n      let userList = this.state.allContact.map(contact => contact ? {\n        ...contact,\n        selected: false\n      } : contact);\n      this.setState({\n        selectedContacts: 0,\n        allContact: userList,\n        userList: userList\n      });\n    };\n    this.state = {\n      noContentFoundMessage: 'No Contact found in selected folder',\n      alertMessage: '',\n      showMessage: false,\n      selectedSectionId: 1,\n      drawerState: false,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert.johnson@example.com',\n        avatar: \"https://via.placeholder.com/150\"\n      },\n      searchUser: '',\n      filterOption: 'All contacts',\n      allContact: userList,\n      userList: userList,\n      selectedContact: null,\n      selectedContacts: 0,\n      AddUserState: false\n    };\n  }\n  onAllContactSelect() {\n    const selectAll = this.state.selectedContacts < this.state.userList.length;\n    if (selectAll) {\n      this.getAllContact();\n    } else {\n      this.getUnselectedAllContact();\n    }\n  }\n  updateContactUser(evt) {\n    this.setState({\n      searchUser: evt.target.value\n    });\n    this.filterContact(evt.target.value);\n  }\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n  render() {\n    const {\n      user,\n      userList,\n      AddUserState,\n      drawerState,\n      selectedContacts,\n      alertMessage,\n      showMessage,\n      noContentFoundMessage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gx-main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gx-app-module\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gx-d-block gx-d-lg-none\",\n          children: /*#__PURE__*/_jsxDEV(Drawer, {\n            placement: \"left\",\n            closable: false,\n            visible: drawerState,\n            onClose: this.onToggleDrawer.bind(this),\n            children: this.ContactSideBar()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gx-module-sidenav gx-d-none gx-d-lg-flex\",\n          children: this.ContactSideBar(user)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gx-module-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gx-module-box-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gx-drawer-btn gx-d-flex gx-d-lg-none\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon icon-menu gx-icon-btn\",\n                \"aria-label\": \"Menu\",\n                onClick: this.onToggleDrawer.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AppModuleHeader, {\n              placeholder: \"Search contact\",\n              notification: false,\n              apps: false,\n              user: this.state.user,\n              onChange: this.updateContactUser.bind(this),\n              value: this.state.searchUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gx-module-box-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gx-module-box-topbar\",\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                color: \"primary\",\n                className: \"gx-icon-btn\",\n                indeterminate: selectedContacts > 0 && selectedContacts < userList.length,\n                checked: selectedContacts > 0,\n                onChange: this.onAllContactSelect.bind(this),\n                value: \"SelectMail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), selectedContacts > 0 && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"gx-icon-btn icon icon-trash\",\n                onClick: this.onDeleteSelectedContact.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomScrollbars, {\n              className: \"gx-module-content-scroll\",\n              children: userList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gx-h-100 gx-d-flex gx-align-items-center gx-justify-content-center\",\n                children: noContentFoundMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(UsersList, {\n                userList: userList,\n                addFavourite: this.addFavourite.bind(this),\n                onContactSelect: this.onContactSelect.bind(this),\n                onDeleteContact: this.onDeleteContact.bind(this),\n                onSaveContact: this.onSaveContact.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddUser, {\n        open: AddUserState,\n        contact: {\n          'id': contactId++,\n          'name': '',\n          'thumb': '',\n          'email': '',\n          'phone': '',\n          'designation': '',\n          'selected': false,\n          'starred': false,\n          'frequently': false\n        },\n        onSaveContact: this.onSaveContact,\n        onContactClose: this.onContactClose,\n        onDeleteContact: this.onDeleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), showMessage && message.info( /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"message-id\",\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 38\n      }, this), 3, this.handleRequestClose)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Users;","map":{"version":3,"names":["React","Component","Button","Checkbox","Drawer","message","CustomScrollbars","userList","UsersList","AppModuleHeader","AddUser","IntlMessages","jsxDEV","_jsxDEV","contactId","filterOptions","id","name","icon","Users","constructor","ContactSideBar","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","onAddUser","map","option","state","selectedSectionId","onFilterOptionSelect","bind","addFavourite","data","setState","alertMessage","starred","showMessage","contact","allContact","onContactSelect","selected","selectedContacts","AddUserState","onContactClose","filterOption","filter","frequently","onSaveContact","isNew","push","onDeleteContact","onDeleteSelectedContact","contacts","filterContact","userName","toLowerCase","indexOf","handleRequestClose","getAllContact","length","getUnselectedAllContact","noContentFoundMessage","drawerState","email","avatar","searchUser","selectedContact","onAllContactSelect","selectAll","updateContactUser","evt","target","value","onToggleDrawer","render","placement","closable","visible","onClose","placeholder","notification","apps","onChange","color","indeterminate","checked","open","info"],"sources":["C:/wamp64/www/web/aid/src/routes/lists/Users/index.js"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Checkbox, Drawer, message} from \"antd\";\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\n\r\nimport userList from \"./data/userList\";\r\nimport UsersList from \"components/lists/UsersList\";\r\nimport AppModuleHeader from \"components/AppModuleHeader/index\";\r\nimport AddUser from \"components/contact/AddUser\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\n\r\nlet contactId = 723812738;\r\n\r\nconst filterOptions = [\r\n  {\r\n    id: 1,\r\n    name: 'All contacts',\r\n    icon: 'all-contacts'\r\n  }, {\r\n    id: 2,\r\n    name: 'Frequently contacted',\r\n    icon: 'frequent'\r\n\r\n  }, {\r\n\r\n    id: 3,\r\n    name: 'Starred contacts',\r\n    icon: 'star'\r\n  }\r\n];\r\n\r\nclass Users extends Component {\r\n\r\n  ContactSideBar = (user) => {\r\n    return <div className=\"gx-module-side\">\r\n      <div className=\"gx-module-side-header\">\r\n        <div className=\"gx-module-logo\">\r\n          <i className=\"icon icon-contacts gx-mr-4\"/>\r\n          <span><IntlMessages id=\"chat.contacts\"/></span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"gx-module-side-content\">\r\n        <CustomScrollbars className=\"gx-module-side-scroll\">\r\n          <div className=\"gx-module-add-task\">\r\n            <Button className=\"gx-btn-block ant-btn\" type=\"primary\" aria-label=\"add\"\r\n                    onClick={this.onAddUser}>\r\n              <i className=\"icon icon-add gx-mr-2\"/>\r\n              <span>Add New Contact</span>\r\n            </Button>\r\n          </div>\r\n          <div className=\"gx-module-side-nav\">\r\n            <ul className=\"gx-module-nav\">\r\n              {filterOptions.map(option => <li key={option.id} className=\"gx-nav-item\">\r\n                  <span\r\n                    className={`gx-link ${option.id === this.state.selectedSectionId ? 'active' : ''}`} onClick={\r\n                    this.onFilterOptionSelect.bind(this, option)\r\n                  }>\r\n                    <i className={`icon icon-${option.icon}`}/>\r\n                    <span>{option.name}</span>\r\n                  </span>\r\n                </li>\r\n              )}\r\n\r\n            </ul>\r\n          </div>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n\r\n  };\r\n\r\n  addFavourite = (data) => {\r\n    this.setState({\r\n      alertMessage: data.starred ? 'Contact removed as star' : 'Contact marked as star',\r\n      showMessage: true,\r\n      userList: this.state.userList.map((contact) => contact.id === data.id ? {\r\n        ...contact,\r\n        starred: !data.starred\r\n      } : contact),\r\n      allContact: this.state.allContact.map((contact) => contact.id === data.id ? {\r\n        ...contact,\r\n        starred: !data.starred\r\n      } : contact)\r\n    })\r\n  };\r\n  onContactSelect = (data) => {\r\n    data.selected = !data.selected;\r\n    let selectedContacts = 0;\r\n    const userList = this.state.userList.map(contact => {\r\n        if (contact.selected) {\r\n          selectedContacts++;\r\n        }\r\n        if (contact.id === data.id) {\r\n          if (contact.selected) {\r\n            selectedContacts++;\r\n          }\r\n          return data;\r\n        } else {\r\n          return contact;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      selectedContacts: selectedContacts,\r\n      userList: userList\r\n    });\r\n\r\n  };\r\n\r\n\r\n  onAddUser = () => {\r\n    this.setState({AddUserState: true});\r\n  };\r\n  onContactClose = () => {\r\n    this.setState({AddUserState: false});\r\n  };\r\n  onFilterOptionSelect = (option) => {\r\n    switch (option.name) {\r\n      case 'All contacts': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          userList: this.state.allContact\r\n        });\r\n        break;\r\n      }\r\n      case 'Frequently contacted': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          userList: this.state.allContact.filter((contact) => contact.frequently)\r\n        });\r\n        break;\r\n      }\r\n      case 'Starred contacts': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          userList: this.state.allContact.filter((contact) => contact.starred)\r\n        });\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n  };\r\n  onSaveContact = (data) => {\r\n    let isNew = true;\r\n    const userList = this.state.allContact.map((contact) => {\r\n      if (contact.id === data.id) {\r\n        isNew = false;\r\n        return data\r\n      } else {\r\n        return contact\r\n      }\r\n    });\r\n    if (isNew) {\r\n      userList.push(data);\r\n    }\r\n    this.setState({\r\n      alertMessage: isNew ? 'Contact Added Successfully' : 'Contact Updated Successfully',\r\n      showMessage: true,\r\n      userList: userList,\r\n      allContact: userList\r\n    });\r\n    // this.onFilterOptionSelect(this.state.filterOption);\r\n  };\r\n  onDeleteContact = (data) => {\r\n    this.setState({\r\n      alertMessage: 'Contact Deleted Successfully',\r\n      showMessage: true,\r\n      allContact: this.state.allContact.filter((contact) => contact.id !== data.id),\r\n      userList: this.state.allContact.filter((contact) => contact.id !== data.id)\r\n    })\r\n  };\r\n  onDeleteSelectedContact = () => {\r\n    const contacts = this.state.allContact.filter((contact) => !contact.selected);\r\n    this.setState({\r\n      alertMessage: 'Contact Deleted Successfully',\r\n      showMessage: true,\r\n      allContact: contacts,\r\n      userList: contacts,\r\n      selectedContacts: 0\r\n    })\r\n  };\r\n  filterContact = (userName) => {\r\n    const {filterOption} = this.state;\r\n    if (userName === '') {\r\n      this.setState({userList: this.state.allContact});\r\n    } else {\r\n      const filterContact = this.state.allContact.filter((contact) =>\r\n        contact.name.toLowerCase().indexOf(userName.toLowerCase()) > -1);\r\n      if (filterOption === 'All contacts') {\r\n        this.setState({userList: filterContact});\r\n      } else if (filterOption === 'Frequently contacted') {\r\n        this.setState({userList: filterContact.filter((contact) => contact.frequently)});\r\n\r\n      } else if (filterOption === 'Starred contacts') {\r\n        this.setState({userList: filterContact.filter((contact) => contact.starred)});\r\n      }\r\n    }\r\n  };\r\n  handleRequestClose = () => {\r\n    this.setState({\r\n      showMessage: false,\r\n    });\r\n  };\r\n  getAllContact = () => {\r\n    let userList = this.state.allContact.map((contact) => contact ? {\r\n      ...contact,\r\n      selected: true\r\n    } : contact);\r\n    this.setState({\r\n      selectedContacts: userList.length,\r\n      allContact: userList,\r\n      userList: userList\r\n    });\r\n  };\r\n  getUnselectedAllContact = () => {\r\n    let userList = this.state.allContact.map((contact) => contact ? {\r\n      ...contact,\r\n      selected: false\r\n    } : contact);\r\n    this.setState({\r\n      selectedContacts: 0,\r\n      allContact: userList,\r\n      userList: userList\r\n    });\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      noContentFoundMessage: 'No Contact found in selected folder',\r\n      alertMessage: '',\r\n      showMessage: false,\r\n      selectedSectionId: 1,\r\n      drawerState: false,\r\n      user: {\r\n        name: 'Robert Johnson',\r\n        email: 'robert.johnson@example.com',\r\n        avatar: \"https://via.placeholder.com/150\"\r\n      },\r\n      searchUser: '',\r\n      filterOption: 'All contacts',\r\n      allContact: userList,\r\n      userList: userList,\r\n      selectedContact: null,\r\n      selectedContacts: 0,\r\n      AddUserState: false,\r\n    }\r\n  }\r\n\r\n  onAllContactSelect() {\r\n    const selectAll = this.state.selectedContacts < this.state.userList.length;\r\n    if (selectAll) {\r\n      this.getAllContact();\r\n    } else {\r\n      this.getUnselectedAllContact();\r\n    }\r\n  }\r\n\r\n  updateContactUser(evt) {\r\n    this.setState({\r\n      searchUser: evt.target.value,\r\n    });\r\n    this.filterContact(evt.target.value)\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {user, userList, AddUserState, drawerState, selectedContacts, alertMessage, showMessage, noContentFoundMessage} = this.state;\r\n    return (\r\n      <div className=\"gx-main-content\">\r\n        <div className=\"gx-app-module\">\r\n\r\n          <div className=\"gx-d-block gx-d-lg-none\">\r\n            <Drawer\r\n              placement=\"left\"\r\n              closable={false}\r\n              visible={drawerState}\r\n              onClose={this.onToggleDrawer.bind(this)}>\r\n              {this.ContactSideBar()}\r\n            </Drawer>\r\n          </div>\r\n          <div className=\"gx-module-sidenav gx-d-none gx-d-lg-flex\">\r\n            {this.ContactSideBar(user)}\r\n          </div>\r\n\r\n          <div className=\"gx-module-box\">\r\n            <div className=\"gx-module-box-header\">\r\n              <span className=\"gx-drawer-btn gx-d-flex gx-d-lg-none\">\r\n                  <i className=\"icon icon-menu gx-icon-btn\" aria-label=\"Menu\"\r\n                     onClick={this.onToggleDrawer.bind(this)}/>\r\n              </span>\r\n\r\n              <AppModuleHeader placeholder=\"Search contact\" notification={false} apps={false}\r\n                               user={this.state.user}\r\n                               onChange={this.updateContactUser.bind(this)}\r\n                               value={this.state.searchUser}/>\r\n            </div>\r\n            <div className=\"gx-module-box-content\">\r\n\r\n              <div className=\"gx-module-box-topbar\">\r\n                <Checkbox color=\"primary\" className=\"gx-icon-btn\"\r\n                          indeterminate={selectedContacts > 0 && selectedContacts < userList.length}\r\n                          checked={selectedContacts > 0}\r\n                          onChange={this.onAllContactSelect.bind(this)}\r\n                          value=\"SelectMail\"/>\r\n\r\n\r\n                {selectedContacts > 0 &&\r\n                <i className=\"gx-icon-btn icon icon-trash\" onClick={this.onDeleteSelectedContact.bind(this)}/>}\r\n\r\n              </div>\r\n              <CustomScrollbars className=\"gx-module-content-scroll\">\r\n                {userList.length === 0 ?\r\n                  <div className=\"gx-h-100 gx-d-flex gx-align-items-center gx-justify-content-center\">\r\n                    {noContentFoundMessage}\r\n                  </div>\r\n                  : <UsersList userList={userList}\r\n                                 addFavourite={this.addFavourite.bind(this)}\r\n                                 onContactSelect={this.onContactSelect.bind(this)}\r\n                                 onDeleteContact={this.onDeleteContact.bind(this)}\r\n                                 onSaveContact={this.onSaveContact.bind(this)}/>\r\n                }\r\n\r\n\r\n              </CustomScrollbars>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <AddUser open={AddUserState} contact={{\r\n          'id': contactId++,\r\n          'name': '',\r\n          'thumb': '',\r\n          'email': '',\r\n          'phone': '',\r\n          'designation': '',\r\n          'selected': false,\r\n          'starred': false,\r\n          'frequently': false,\r\n        }} onSaveContact={this.onSaveContact}\r\n                    onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>\r\n\r\n        {showMessage && message.info(<span id=\"message-id\">{alertMessage}</span>, 3, this.handleRequestClose)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}