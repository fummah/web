{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\aid_f\\\\source\\\\src\\\\routes\\\\components\\\\dataDisplay\\\\Tree\\\\Searchable.js\";\nimport React from \"react\";\nimport { Card, Input, Tree } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = Tree.TreeNode;\nconst Search = Input.Search;\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n  const children = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({\n      title: key,\n      key\n    });\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\ngenerateData(z);\nconst dataList = [];\nconst generateList = data => {\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i];\n    const key = node.key;\n    dataList.push({\n      key,\n      title: key\n    });\n    if (node.children) {\n      generateList(node.children, node.key);\n    }\n  }\n};\ngenerateList(gData);\nconst getParentKey = (key, tree) => {\n  let parentKey;\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    if (node.children) {\n      if (node.children.some(item => item.key === key)) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n  return parentKey;\n};\nclass Searchable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true\n    };\n    this.onExpand = expandedKeys => {\n      this.setState({\n        expandedKeys,\n        autoExpandParent: false\n      });\n    };\n    this.onChange = e => {\n      const value = e.target.value;\n      const expandedKeys = dataList.map(item => {\n        if (item.key.indexOf(value) > -1) {\n          return getParentKey(item.key, gData);\n        }\n        return null;\n      }).filter((item, i, self) => item && self.indexOf(item) === i);\n      this.setState({\n        expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      });\n    };\n  }\n  render() {\n    const {\n      searchValue,\n      expandedKeys,\n      autoExpandParent\n    } = this.state;\n    const loop = data => data.map(item => {\n      const index = item.key.indexOf(searchValue);\n      const beforeStr = item.key.substr(0, index);\n      const afterStr = item.key.substr(index + searchValue.length);\n      const title = index > -1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [beforeStr, /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#f50'\n          },\n          children: searchValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), afterStr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this);\n      if (item.children) {\n        return /*#__PURE__*/_jsxDEV(TreeNode, {\n          title: title,\n          children: loop(item.children)\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(TreeNode, {\n        title: title\n      }, item.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Searchable\",\n      className: \"gx-card\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        style: {\n          marginBottom: 8\n        },\n        placeholder: \"Search\",\n        onChange: this.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tree, {\n        onExpand: this.onExpand,\n        expandedKeys: expandedKeys,\n        autoExpandParent: autoExpandParent,\n        children: loop(gData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Searchable;","map":{"version":3,"names":["React","Card","Input","Tree","jsxDEV","_jsxDEV","TreeNode","Search","x","y","z","gData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","dataList","generateList","data","length","node","getParentKey","tree","parentKey","some","item","Searchable","Component","constructor","args","state","expandedKeys","searchValue","autoExpandParent","onExpand","setState","onChange","e","value","target","map","indexOf","filter","self","render","loop","beforeStr","substr","afterStr","style","color","fileName","_jsxFileName","lineNumber","columnNumber","className","marginBottom","placeholder"],"sources":["C:/wamp64/www/aid_f/source/src/routes/components/dataDisplay/Tree/Searchable.js"],"sourcesContent":["import React from \"react\";\r\nimport {Card, Input, Tree} from \"antd\";\r\n\r\nconst TreeNode = Tree.TreeNode;\r\nconst Search = Input.Search;\r\n\r\nconst x = 3;\r\nconst y = 2;\r\nconst z = 1;\r\nconst gData = [];\r\n\r\nconst generateData = (_level, _preKey, _tns) => {\r\n  const preKey = _preKey || '0';\r\n  const tns = _tns || gData;\r\n\r\n  const children = [];\r\n  for (let i = 0; i < x; i++) {\r\n    const key = `${preKey}-${i}`;\r\n    tns.push({title: key, key});\r\n    if (i < y) {\r\n      children.push(key);\r\n    }\r\n  }\r\n  if (_level < 0) {\r\n    return tns;\r\n  }\r\n  const level = _level - 1;\r\n  children.forEach((key, index) => {\r\n    tns[index].children = [];\r\n    return generateData(level, key, tns[index].children);\r\n  });\r\n};\r\ngenerateData(z);\r\n\r\nconst dataList = [];\r\nconst generateList = (data) => {\r\n  for (let i = 0; i < data.length; i++) {\r\n    const node = data[i];\r\n    const key = node.key;\r\n    dataList.push({key, title: key});\r\n    if (node.children) {\r\n      generateList(node.children, node.key);\r\n    }\r\n  }\r\n};\r\ngenerateList(gData);\r\n\r\nconst getParentKey = (key, tree) => {\r\n  let parentKey;\r\n  for (let i = 0; i < tree.length; i++) {\r\n    const node = tree[i];\r\n    if (node.children) {\r\n      if (node.children.some(item => item.key === key)) {\r\n        parentKey = node.key;\r\n      } else if (getParentKey(key, node.children)) {\r\n        parentKey = getParentKey(key, node.children);\r\n      }\r\n    }\r\n  }\r\n  return parentKey;\r\n};\r\n\r\nclass Searchable extends React.Component {\r\n  state = {\r\n    expandedKeys: [],\r\n    searchValue: '',\r\n    autoExpandParent: true,\r\n  };\r\n  onExpand = (expandedKeys) => {\r\n    this.setState({\r\n      expandedKeys,\r\n      autoExpandParent: false,\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    const value = e.target.value;\r\n    const expandedKeys = dataList.map((item) => {\r\n      if (item.key.indexOf(value) > -1) {\r\n        return getParentKey(item.key, gData);\r\n      }\r\n      return null;\r\n    }).filter((item, i, self) => item && self.indexOf(item) === i);\r\n    this.setState({\r\n      expandedKeys,\r\n      searchValue: value,\r\n      autoExpandParent: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {searchValue, expandedKeys, autoExpandParent} = this.state;\r\n    const loop = data => data.map((item) => {\r\n      const index = item.key.indexOf(searchValue);\r\n      const beforeStr = item.key.substr(0, index);\r\n      const afterStr = item.key.substr(index + searchValue.length);\r\n      const title = index > -1 ? (\r\n        <span>\r\n          {beforeStr}\r\n          <span style={{color: '#f50'}}>{searchValue}</span>\r\n          {afterStr}\r\n        </span>\r\n      ) : <span>{item.key}</span>;\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode key={item.key} title={title}>\r\n            {loop(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      return <TreeNode key={item.key} title={title}/>;\r\n    });\r\n    return (\r\n      <Card title=\"Searchable\" className=\"gx-card\">\r\n        <Search style={{marginBottom: 8}} placeholder=\"Search\" onChange={this.onChange}/>\r\n        <Tree\r\n          onExpand={this.onExpand}\r\n          expandedKeys={expandedKeys}\r\n          autoExpandParent={autoExpandParent}\r\n        >\r\n          {loop(gData)}\r\n        </Tree>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}