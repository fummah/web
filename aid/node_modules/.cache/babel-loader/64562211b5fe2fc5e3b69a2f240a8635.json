{"ast":null,"code":"import createSagaMiddleware from \"redux-saga\";\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport rootSaga from \"../sagas/index\";\nimport createRootReducer from '../reducers';\nconst createBrowserHistory = require('history').createBrowserHistory;\nexport const history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [thunk, sagaMiddleware, routeMiddleware];\nexport default function configureStore(preloadedState) {\n  const store = createStore(createRootReducer(history),\n  // root reducer with router state\n  preloadedState, compose(applyMiddleware(routerMiddleware(history),\n  // for dispatching history actions\n  ...middlewares)));\n  sagaMiddleware.run(rootSaga);\n  return store;\n}","map":{"version":3,"names":["createSagaMiddleware","applyMiddleware","compose","createStore","routerMiddleware","thunk","rootSaga","createRootReducer","createBrowserHistory","require","history","routeMiddleware","sagaMiddleware","middlewares","configureStore","preloadedState","store","run"],"sources":["C:/wamp64/www/web/aid/src/appRedux/store/index.js"],"sourcesContent":["import createSagaMiddleware from \"redux-saga\";\r\nimport {applyMiddleware, compose, createStore} from 'redux'\r\nimport {routerMiddleware} from 'connected-react-router'\r\nimport thunk from 'redux-thunk';\r\nimport rootSaga from \"../sagas/index\";\r\nimport createRootReducer from '../reducers'\r\n\r\nconst createBrowserHistory = require('history').createBrowserHistory;\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [thunk,sagaMiddleware, routeMiddleware];\r\n\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const store = createStore(\r\n    createRootReducer(history), // root reducer with router state\r\n    preloadedState,\r\n    compose(\r\n      applyMiddleware(\r\n        routerMiddleware(history), // for dispatching history actions\r\n        ...middlewares\r\n      ),\r\n    ),\r\n  );\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n}\r\n"],"mappings":"AAAA,OAAOA,oBAAoB,MAAM,YAAY;AAC7C,SAAQC,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAO,OAAO;AAC3D,SAAQC,gBAAgB,QAAO,wBAAwB;AACvD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,iBAAiB,MAAM,aAAa;AAE3C,MAAMC,oBAAoB,GAAGC,OAAO,CAAC,SAAS,CAAC,CAACD,oBAAoB;AAGpE,OAAO,MAAME,OAAO,GAAGF,oBAAoB,CAAC,CAAC;AAE7C,MAAMG,eAAe,GAAGP,gBAAgB,CAACM,OAAO,CAAC;AACjD,MAAME,cAAc,GAAGZ,oBAAoB,CAAC,CAAC;AAE7C,MAAMa,WAAW,GAAG,CAACR,KAAK,EAACO,cAAc,EAAED,eAAe,CAAC;AAG3D,eAAe,SAASG,cAAcA,CAACC,cAAc,EAAE;EACrD,MAAMC,KAAK,GAAGb,WAAW,CACvBI,iBAAiB,CAACG,OAAO,CAAC;EAAE;EAC5BK,cAAc,EACdb,OAAO,CACLD,eAAe,CACbG,gBAAgB,CAACM,OAAO,CAAC;EAAE;EAC3B,GAAGG,WACL,CACF,CACF,CAAC;EAEDD,cAAc,CAACK,GAAG,CAACX,QAAQ,CAAC;EAC5B,OAAOU,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module"}