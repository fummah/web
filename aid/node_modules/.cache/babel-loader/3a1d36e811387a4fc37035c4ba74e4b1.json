{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\web\\\\aid\\\\src\\\\routes\\\\components\\\\dataEntry\\\\Form\\\\DynamicRules.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Checkbox, Form, Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 6\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 14\n    }\n  }\n};\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\nconst DynamicRules = () => {\n  _s();\n  const [form] = Form.useForm();\n  const [checkNick, setCheckNick] = useState(false);\n  useEffect(() => {\n    form.validateFields(['nickname']);\n  }, [checkNick, form]);\n  const onCheckboxChange = e => {\n    setCheckNick(e.target.checked);\n  };\n  const onCheck = async () => {\n    try {\n      const values = await form.validateFields();\n      console.log('Success:', values);\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"gx-card\",\n    title: \"DYNAMIC RULES\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      name: \"dynamic_rule\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        ...formItemLayout,\n        name: \"username\",\n        label: \"Name\",\n        rules: [{\n          required: true,\n          message: 'Please input your name'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Please input your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        ...formItemLayout,\n        name: \"nickname\",\n        label: \"Nickname\",\n        rules: [{\n          required: checkNick,\n          message: 'Please input your nickname'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Please input your nickname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        ...formTailLayout,\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: checkNick,\n          onChange: onCheckboxChange,\n          children: \"Nickname is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        ...formTailLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: onCheck,\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicRules, \"g8NVQvz0YHeMB2qLPM57IEfv+DU=\", false, function () {\n  return [Form.useForm];\n});\n_c = DynamicRules;\nexport default DynamicRules;\nvar _c;\n$RefreshReg$(_c, \"DynamicRules\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","Checkbox","Form","Input","jsxDEV","_jsxDEV","formItemLayout","labelCol","xs","span","sm","wrapperCol","formTailLayout","offset","DynamicRules","_s","form","useForm","checkNick","setCheckNick","validateFields","onCheckboxChange","e","target","checked","onCheck","values","console","log","errorInfo","className","title","children","name","Item","label","rules","required","message","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","onClick","_c","$RefreshReg$"],"sources":["C:/wamp64/www/web/aid/src/routes/components/dataEntry/Form/DynamicRules.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Checkbox, Form, Input} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 14 },\r\n  },\r\n};\r\nconst formTailLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n    offset: 4,\r\n  },\r\n};\r\n\r\nconst DynamicRules = () => {\r\n  const [form] = Form.useForm();\r\n  const [checkNick, setCheckNick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    form.validateFields(['nickname']);\r\n  }, [checkNick, form]);\r\n\r\n  const onCheckboxChange = e => {\r\n    setCheckNick(e.target.checked);\r\n  };\r\n\r\n  const onCheck = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log('Success:', values);\r\n    } catch (errorInfo) {\r\n      console.log('Failed:', errorInfo);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"DYNAMIC RULES\">\r\n      <Form form={form} name=\"dynamic_rule\">\r\n        <Form.Item\r\n          {...formItemLayout}\r\n          name=\"username\"\r\n          label=\"Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your name',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Please input your name\"/>\r\n        </Form.Item>\r\n        <Form.Item\r\n          {...formItemLayout}\r\n          name=\"nickname\"\r\n          label=\"Nickname\"\r\n          rules={[\r\n            {\r\n              required: checkNick,\r\n              message: 'Please input your nickname',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Please input your nickname\"/>\r\n        </Form.Item>\r\n        <Form.Item {...formTailLayout}>\r\n          <Checkbox checked={checkNick} onChange={onCheckboxChange}>\r\n            Nickname is required\r\n          </Checkbox>\r\n        </Form.Item>\r\n        <Form.Item {...formTailLayout}>\r\n          <Button type=\"primary\" onClick={onCheck}>\r\n            Check\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport default DynamicRules;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}