{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nvar _excluded = [\"searchClient\", \"queryLanguages\", \"attributesForPrediction\", \"nbHits\", \"renderDebounceTime\", \"searchDebounceTime\"];\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport React, { useState, useEffect, useMemo, useContext } from 'react';\nimport { instantSearchContext } from 'react-instantsearch-core';\nimport { createConcurrentSafePromise } from \"../lib/createConcurrentSafePromise.js\";\nimport { debounce } from \"../lib/debounce.js\";\nfunction hasReactHooks() {\n  // >= 16.8.0\n  var _React$version$split$ = React.version.split('.').map(Number),\n    _React$version$split$2 = _slicedToArray(_React$version$split$, 2),\n    major = _React$version$split$2[0],\n    minor = _React$version$split$2[1];\n  return major >= 17 || major === 16 && minor >= 8;\n}\nexport default function useAnswers(_ref) {\n  var searchClient = _ref.searchClient,\n    queryLanguages = _ref.queryLanguages,\n    attributesForPrediction = _ref.attributesForPrediction,\n    nbHits = _ref.nbHits,\n    _ref$renderDebounceTi = _ref.renderDebounceTime,\n    renderDebounceTime = _ref$renderDebounceTi === void 0 ? 100 : _ref$renderDebounceTi,\n    _ref$searchDebounceTi = _ref.searchDebounceTime,\n    searchDebounceTime = _ref$searchDebounceTi === void 0 ? 100 : _ref$searchDebounceTi,\n    extraParameters = _objectWithoutProperties(_ref, _excluded);\n  if (!hasReactHooks()) {\n    throw new Error(\"`Answers` component and `useAnswers` hook require all React packages to be 16.8.0 or higher.\");\n  }\n  var context = useContext(instantSearchContext);\n  var _useState = useState(context.store.getState().widgets.query),\n    _useState2 = _slicedToArray(_useState, 2),\n    query = _useState2[0],\n    setQuery = _useState2[1];\n  var _useState3 = useState(context.mainTargetedIndex),\n    _useState4 = _slicedToArray(_useState3, 2),\n    index = _useState4[0],\n    setIndex = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hits = _useState8[0],\n    setHits = _useState8[1];\n  var runConcurrentSafePromise = useMemo(function () {\n    return createConcurrentSafePromise();\n  }, []);\n  var searchIndex = useMemo(function () {\n    return searchClient.initIndex(index);\n  }, [searchClient, index]);\n  if (!searchIndex.findAnswers) {\n    throw new Error('`Answers` component and `useAnswers` hook require `algoliasearch` to be 4.8.0 or higher.');\n  }\n  var debouncedSearch = useMemo(function () {\n    return debounce(searchIndex.findAnswers, searchDebounceTime);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchIndex]);\n  useEffect(function () {\n    setIndex(context.mainTargetedIndex);\n    return context.store.subscribe(function () {\n      var _context$store$getSta = context.store.getState(),\n        widgets = _context$store$getSta.widgets;\n      setQuery(widgets.query);\n    });\n  }, [context]);\n  var setDebouncedResult = useMemo(function () {\n    return debounce(function (result) {\n      setIsLoading(false);\n      setHits(result.hits);\n    }, renderDebounceTime);\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [setIsLoading, setHits]);\n  var fetchAnswers = function fetchAnswers() {\n    if (!query) {\n      setIsLoading(false);\n      setHits([]);\n      return;\n    }\n    setIsLoading(true);\n    runConcurrentSafePromise(debouncedSearch(query, queryLanguages, _objectSpread(_objectSpread({}, extraParameters), {}, {\n      nbHits: nbHits,\n      attributesForPrediction: attributesForPrediction\n    }))).then(function (result) {\n      if (!result) {\n        // It's undefined when it's debounced.\n        return;\n      }\n      setDebouncedResult(result);\n    });\n  };\n  useEffect(function () {\n    fetchAnswers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n  return {\n    hits: hits,\n    isLoading: isLoading\n  };\n}","map":null,"metadata":{},"sourceType":"module"}