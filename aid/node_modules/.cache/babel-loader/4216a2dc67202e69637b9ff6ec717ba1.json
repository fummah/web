{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\aid_f\\\\source\\\\src\\\\routes\\\\extensions\\\\map\\\\googlemap\\\\streetView\\\\Components\\\\StreetViewPanoramaEx.js\";\nimport React, { Component } from \"react\";\nimport { GoogleMap, OverlayView, StreetViewPanorama, withGoogleMap } from \"react-google-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst coordinates = {\n  lat: 49.2853171,\n  lng: -123.1119202\n};\nconst STYLES = {\n  overlayView: {\n    background: `red`,\n    color: `white`,\n    padding: 5,\n    borderRadius: `50%`\n  }\n};\nfunction getPixelPositionOffset(width, height) {\n  return {\n    x: -(width / 2),\n    y: -(height / 2)\n  };\n}\nconst StreetViewPanoramaExampleGoogleMap = withGoogleMap(_c = props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n  defaultZoom: 8,\n  defaultCenter: coordinates,\n  children: /*#__PURE__*/_jsxDEV(StreetViewPanorama, {\n    defaultPosition: coordinates,\n    visible: true,\n    children: /*#__PURE__*/_jsxDEV(OverlayView, {\n      position: {\n        lat: 49.28590291211115,\n        lng: -123.11248166065218\n      },\n      mapPaneName: OverlayView.OVERLAY_LAYER,\n      getPixelPositionOffset: getPixelPositionOffset,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: STYLES.overlayView,\n        children: \"OverlayView\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this));\n\n/**\r\n * You can pass in an `containerElement` to render `StreetViewPanorama` in its own containers\r\n * At this point the `GoogleMap` wrapper and `withGoogleMap` HOC become optional,\r\n * so you can either render a map and StreetView at the same time,\r\n * or just the StreetView on its own\r\n *    <StreetViewPanorama\r\n *      containerElement={<div styles={{ width: `100%`, height: `100%` }} />}\r\n *      defaultPosition={coordinates}\r\n *      visible\r\n *    />\r\n */\n\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\n_c2 = StreetViewPanoramaExampleGoogleMap;\nexport default class StreetViewPanoramaExample extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(StreetViewPanoramaExampleGoogleMap, {\n      loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this),\n      containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `550px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }, this),\n      mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"StreetViewPanoramaExampleGoogleMap$withGoogleMap\");\n$RefreshReg$(_c2, \"StreetViewPanoramaExampleGoogleMap\");","map":{"version":3,"names":["React","Component","GoogleMap","OverlayView","StreetViewPanorama","withGoogleMap","jsxDEV","_jsxDEV","coordinates","lat","lng","STYLES","overlayView","background","color","padding","borderRadius","getPixelPositionOffset","width","height","x","y","StreetViewPanoramaExampleGoogleMap","_c","props","defaultZoom","defaultCenter","children","defaultPosition","visible","position","mapPaneName","OVERLAY_LAYER","style","fileName","_jsxFileName","lineNumber","columnNumber","_c2","StreetViewPanoramaExample","render","loadingElement","containerElement","mapElement","$RefreshReg$"],"sources":["C:/wamp64/www/aid_f/source/src/routes/extensions/map/googlemap/streetView/Components/StreetViewPanoramaEx.js"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {GoogleMap, OverlayView, StreetViewPanorama, withGoogleMap} from \"react-google-maps\";\r\n\r\nconst coordinates = {lat: 49.2853171, lng: -123.1119202};\r\n\r\nconst STYLES = {\r\n  overlayView: {\r\n    background: `red`,\r\n    color: `white`,\r\n    padding: 5,\r\n    borderRadius: `50%`,\r\n  },\r\n};\r\n\r\nfunction getPixelPositionOffset(width, height) {\r\n  return {x: -(width / 2), y: -(height / 2)};\r\n}\r\n\r\nconst StreetViewPanoramaExampleGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={8}\r\n    defaultCenter={coordinates}\r\n  >\r\n    <StreetViewPanorama\r\n      defaultPosition={coordinates}\r\n      visible\r\n    >\r\n      <OverlayView\r\n        position={{lat: 49.28590291211115, lng: -123.11248166065218}}\r\n        mapPaneName={OverlayView.OVERLAY_LAYER}\r\n        getPixelPositionOffset={getPixelPositionOffset}\r\n      >\r\n        <div style={STYLES.overlayView}>\r\n          OverlayView\r\n        </div>\r\n      </OverlayView>\r\n    </StreetViewPanorama>\r\n  </GoogleMap>\r\n));\r\n\r\n/**\r\n * You can pass in an `containerElement` to render `StreetViewPanorama` in its own containers\r\n * At this point the `GoogleMap` wrapper and `withGoogleMap` HOC become optional,\r\n * so you can either render a map and StreetView at the same time,\r\n * or just the StreetView on its own\r\n *    <StreetViewPanorama\r\n *      containerElement={<div styles={{ width: `100%`, height: `100%` }} />}\r\n *      defaultPosition={coordinates}\r\n *      visible\r\n *    />\r\n */\r\n\r\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nexport default class StreetViewPanoramaExample extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <StreetViewPanoramaExampleGoogleMap\r\n        loadingElement={<div style={{height: `100%`}}/>}\r\n        containerElement={<div style={{height: `550px`}}/>}\r\n        mapElement={<div style={{height: `100%`}}/>}\r\n      />\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,SAAS,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,aAAa,QAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5F,MAAMC,WAAW,GAAG;EAACC,GAAG,EAAE,UAAU;EAAEC,GAAG,EAAE,CAAC;AAAW,CAAC;AAExD,MAAMC,MAAM,GAAG;EACbC,WAAW,EAAE;IACXC,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,OAAO;IACdC,OAAO,EAAE,CAAC;IACVC,YAAY,EAAE;EAChB;AACF,CAAC;AAED,SAASC,sBAAsBA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC7C,OAAO;IAACC,CAAC,EAAE,EAAEF,KAAK,GAAG,CAAC,CAAC;IAAEG,CAAC,EAAE,EAAEF,MAAM,GAAG,CAAC;EAAC,CAAC;AAC5C;AAEA,MAAMG,kCAAkC,GAAGjB,aAAa,CAAAkB,EAAA,GAACC,KAAK,iBAC5DjB,OAAA,CAACL,SAAS;EACRuB,WAAW,EAAE,CAAE;EACfC,aAAa,EAAElB,WAAY;EAAAmB,QAAA,eAE3BpB,OAAA,CAACH,kBAAkB;IACjBwB,eAAe,EAAEpB,WAAY;IAC7BqB,OAAO;IAAAF,QAAA,eAEPpB,OAAA,CAACJ,WAAW;MACV2B,QAAQ,EAAE;QAACrB,GAAG,EAAE,iBAAiB;QAAEC,GAAG,EAAE,CAAC;MAAkB,CAAE;MAC7DqB,WAAW,EAAE5B,WAAW,CAAC6B,aAAc;MACvCf,sBAAsB,EAAEA,sBAAuB;MAAAU,QAAA,eAE/CpB,OAAA;QAAK0B,KAAK,EAAEtB,MAAM,CAACC,WAAY;QAAAe,QAAA,EAAC;MAEhC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACZ,CACZ,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFAC,GAAA,GAlCMhB,kCAAkC;AAqCxC,eAAe,MAAMiB,yBAAyB,SAAStC,SAAS,CAAC;EAE/DuC,MAAMA,CAAA,EAAG;IACP,oBACEjC,OAAA,CAACe,kCAAkC;MACjCmB,cAAc,eAAElC,OAAA;QAAK0B,KAAK,EAAE;UAACd,MAAM,EAAE;QAAM;MAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAE;MAChDK,gBAAgB,eAAEnC,OAAA;QAAK0B,KAAK,EAAE;UAACd,MAAM,EAAE;QAAO;MAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAE;MACnDM,UAAU,eAAEpC,OAAA;QAAK0B,KAAK,EAAE;UAACd,MAAM,EAAE;QAAM;MAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAEN;AACF;AAAC,IAAAd,EAAA,EAAAe,GAAA;AAAAM,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAN,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}