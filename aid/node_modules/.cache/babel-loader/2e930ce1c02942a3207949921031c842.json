{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\web\\\\aid\\\\src\\\\routes\\\\components\\\\dataEntry\\\\Upload\\\\DragDrop.js\";\nimport React from \"react\";\nimport { Card, message, Upload } from \"antd\";\nimport InboxOutlined from \"@ant-design/icons/lib/icons/InboxOutlined\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dragger = Upload.Dragger;\nconst props = {\n  name: 'file',\n  multiple: true,\n  action: '//jsonplaceholder.typicode.com/posts/',\n  onChange(info) {\n    const status = info.file.status;\n    if (status !== 'uploading') {}\n    if (status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  }\n};\nconst DragDrop = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"gx-card\",\n    title: \"DragDrop\",\n    children: /*#__PURE__*/_jsxDEV(Dragger, {\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-text\",\n        children: \"Click or drag file to this area to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-hint\",\n        children: \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_c = DragDrop;\nexport default DragDrop;\nvar _c;\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"names":["React","Card","message","Upload","InboxOutlined","jsxDEV","_jsxDEV","Dragger","props","name","multiple","action","onChange","info","status","file","success","error","DragDrop","className","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/wamp64/www/web/aid/src/routes/components/dataEntry/Upload/DragDrop.js"],"sourcesContent":["import React from \"react\";\r\nimport {Card, message, Upload} from \"antd\";\r\nimport InboxOutlined from \"@ant-design/icons/lib/icons/InboxOutlined\";\r\n\r\nconst Dragger = Upload.Dragger;\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  onChange(info) {\r\n    const status = info.file.status;\r\n    if (status !== 'uploading') {\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nconst DragDrop = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"DragDrop\">\r\n        <Dragger {...props}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n          <p className=\"ant-upload-hint\">Support for a single or bulk upload. Strictly prohibit from uploading company\r\n            data or other band files</p>\r\n        </Dragger>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default DragDrop;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,EAAEC,OAAO,EAAEC,MAAM,QAAO,MAAM;AAC1C,OAAOC,aAAa,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,OAAO,GAAGJ,MAAM,CAACI,OAAO;AAE9B,MAAMC,KAAK,GAAG;EACZC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,uCAAuC;EAC/CC,QAAQA,CAACC,IAAI,EAAE;IACb,MAAMC,MAAM,GAAGD,IAAI,CAACE,IAAI,CAACD,MAAM;IAC/B,IAAIA,MAAM,KAAK,WAAW,EAAE,CAC5B;IACA,IAAIA,MAAM,KAAK,MAAM,EAAE;MACrBZ,OAAO,CAACc,OAAO,CAAC,GAAGH,IAAI,CAACE,IAAI,CAACN,IAAI,8BAA8B,CAAC;IAClE,CAAC,MAAM,IAAIK,MAAM,KAAK,OAAO,EAAE;MAC7BZ,OAAO,CAACe,KAAK,CAAC,GAAGJ,IAAI,CAACE,IAAI,CAACN,IAAI,sBAAsB,CAAC;IACxD;EACF;AACF,CAAC;AAED,MAAMS,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBACEZ,OAAA,CAACL,IAAI;IAACkB,SAAS,EAAC,SAAS;IAACC,KAAK,EAAC,UAAU;IAAAC,QAAA,eACxCf,OAAA,CAACC,OAAO;MAAA,GAAKC,KAAK;MAAAa,QAAA,gBAChBf,OAAA;QAAGa,SAAS,EAAC,sBAAsB;QAAAE,QAAA,eACjCf,OAAA,CAACF,aAAa;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACJnB,OAAA;QAAGa,SAAS,EAAC,iBAAiB;QAAAE,QAAA,EAAC;MAAyC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC5EnB,OAAA;QAAGa,SAAS,EAAC,iBAAiB;QAAAE,QAAA,EAAC;MACL;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEX,CAAC;AACFC,EAAA,GAdKR,QAAQ;AAgBd,eAAeA,QAAQ;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}