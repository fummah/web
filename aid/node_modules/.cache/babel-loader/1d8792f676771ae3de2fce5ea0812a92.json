{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\web\\\\aid\\\\src\\\\routes\\\\components\\\\table\\\\Data\\\\CustomSelection.js\";\nimport React from \"react\";\nimport { Card, Table } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name'\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nconst data = [];\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`\n  });\n}\nclass CustomSelection extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedRowKeys: [] // Check here to configure the CRM column\n    };\n    this.onSelectChange = selectedRowKeys => {\n      this.setState({\n        selectedRowKeys\n      });\n    };\n  }\n  render() {\n    const {\n      selectedRowKeys\n    } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n      hideDefaultSelections: true,\n      selections: [{\n        key: 'all-data',\n        text: 'Select All Data',\n        onSelect: () => {\n          this.setState({\n            selectedRowKeys: [...Array(46).keys()] // 0...45\n          });\n        }\n      }, {\n        key: 'odd',\n        text: 'Select Odd Row',\n        onSelect: changableRowKeys => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return false;\n            }\n            return true;\n          });\n          this.setState({\n            selectedRowKeys: newSelectedRowKeys\n          });\n        }\n      }, {\n        key: 'even',\n        text: 'Select Even Row',\n        onSelect: changableRowKeys => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return true;\n            }\n            return false;\n          });\n          this.setState({\n            selectedRowKeys: newSelectedRowKeys\n          });\n        }\n      }],\n      onSelection: this.onSelection\n    };\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Custom Selection\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"gx-table-responsive\",\n        rowSelection: rowSelection,\n        columns: columns,\n        dataSource: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default CustomSelection;","map":{"version":3,"names":["React","Card","Table","jsxDEV","_jsxDEV","columns","title","dataIndex","data","i","push","key","name","age","address","CustomSelection","Component","constructor","args","state","selectedRowKeys","onSelectChange","setState","render","rowSelection","onChange","hideDefaultSelections","selections","text","onSelect","Array","keys","changableRowKeys","newSelectedRowKeys","filter","index","onSelection","children","className","dataSource","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/wamp64/www/web/aid/src/routes/components/table/Data/CustomSelection.js"],"sourcesContent":["import React from \"react\";\r\nimport {Card, Table} from \"antd\";\r\n\r\nconst columns = [{\r\n  title: 'Name',\r\n  dataIndex: 'name',\r\n}, {\r\n  title: 'Age',\r\n  dataIndex: 'age',\r\n}, {\r\n  title: 'Address',\r\n  dataIndex: 'address',\r\n}];\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 46; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edward King ${i}`,\r\n    age: 32,\r\n    address: `London, Park Lane no. ${i}`,\r\n  });\r\n}\r\n\r\nclass CustomSelection extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n  };\r\n  onSelectChange = (selectedRowKeys) => {\r\n    this.setState({selectedRowKeys});\r\n  };\r\n\r\n  render() {\r\n    const {selectedRowKeys} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n      hideDefaultSelections: true,\r\n      selections: [{\r\n        key: 'all-data',\r\n        text: 'Select All Data',\r\n        onSelect: () => {\r\n          this.setState({\r\n            selectedRowKeys: [...Array(46).keys()], // 0...45\r\n          });\r\n        },\r\n      }, {\r\n        key: 'odd',\r\n        text: 'Select Odd Row',\r\n        onSelect: (changableRowKeys) => {\r\n          let newSelectedRowKeys = [];\r\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n            if (index % 2 !== 0) {\r\n              return false;\r\n            }\r\n            return true;\r\n          });\r\n          this.setState({selectedRowKeys: newSelectedRowKeys});\r\n        },\r\n      }, {\r\n        key: 'even',\r\n        text: 'Select Even Row',\r\n        onSelect: (changableRowKeys) => {\r\n          let newSelectedRowKeys = [];\r\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n            if (index % 2 !== 0) {\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n          this.setState({selectedRowKeys: newSelectedRowKeys});\r\n        },\r\n      }],\r\n      onSelection: this.onSelection,\r\n    };\r\n    return (\r\n      <Card title=\"Custom Selection\">\r\n        <Table className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={data}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomSelection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}