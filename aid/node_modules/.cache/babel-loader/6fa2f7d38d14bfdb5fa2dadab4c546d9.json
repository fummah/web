{"ast":null,"code":"import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createClassNames } from \"../core/utils.js\";\nvar cx = createClassNames('ToggleRefinement');\nvar ToggleRefinement = function ToggleRefinement(_ref) {\n  var currentRefinement = _ref.currentRefinement,\n    label = _ref.label,\n    canRefine = _ref.canRefine,\n    refine = _ref.refine,\n    className = _ref.className;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(cx('', !canRefine && '-noRefinement'), className)\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: cx('label')\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: cx('checkbox'),\n    type: \"checkbox\",\n    checked: currentRefinement,\n    onChange: function onChange(event) {\n      return refine(event.target.checked);\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: cx('labelText')\n  }, label)));\n};\nToggleRefinement.propTypes = {\n  currentRefinement: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  canRefine: PropTypes.bool.isRequired,\n  refine: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\nToggleRefinement.defaultProps = {\n  className: ''\n};\nexport default ToggleRefinement;","map":null,"metadata":{},"sourceType":"module"}