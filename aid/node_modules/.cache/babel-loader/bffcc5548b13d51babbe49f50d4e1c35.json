{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _rcResizeObserver = _interopRequireDefault(require(\"rc-resize-observer\"));\nvar _ref = require(\"rc-util/lib/ref\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _configProvider = require(\"../config-provider\");\nvar _useBreakpoint = _interopRequireDefault(require(\"../grid/hooks/useBreakpoint\"));\nvar _responsiveObserve = require(\"../_util/responsiveObserve\");\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\nvar _SizeContext = _interopRequireDefault(require(\"./SizeContext\"));\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar InternalAvatar = function InternalAvatar(props, ref) {\n  var groupSize = React.useContext(_SizeContext[\"default\"]);\n  var _React$useState = React.useState(1),\n    _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n    scale = _React$useState2[0],\n    setScale = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = (0, _slicedToArray2[\"default\"])(_React$useState3, 2),\n    mounted = _React$useState4[0],\n    setMounted = _React$useState4[1];\n  var _React$useState5 = React.useState(true),\n    _React$useState6 = (0, _slicedToArray2[\"default\"])(_React$useState5, 2),\n    isImgExist = _React$useState6[0],\n    setIsImgExist = _React$useState6[1];\n  var avatarNodeRef = React.useRef(null);\n  var avatarChildrenRef = React.useRef(null);\n  var avatarNodeMergeRef = (0, _ref.composeRef)(ref, avatarNodeRef);\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var setScaleParam = function setScaleParam() {\n    if (!avatarChildrenRef.current || !avatarNodeRef.current) {\n      return;\n    }\n    var childrenWidth = avatarChildrenRef.current.offsetWidth; // offsetWidth avoid affecting be transform scale\n    var nodeWidth = avatarNodeRef.current.offsetWidth;\n    // denominator is 0 is no meaning\n    if (childrenWidth !== 0 && nodeWidth !== 0) {\n      var _props$gap = props.gap,\n        gap = _props$gap === void 0 ? 4 : _props$gap;\n      if (gap * 2 < nodeWidth) {\n        setScale(nodeWidth - gap * 2 < childrenWidth ? (nodeWidth - gap * 2) / childrenWidth : 1);\n      }\n    }\n  };\n  React.useEffect(function () {\n    setMounted(true);\n  }, []);\n  React.useEffect(function () {\n    setIsImgExist(true);\n    setScale(1);\n  }, [props.src]);\n  React.useEffect(function () {\n    setScaleParam();\n  }, [props.gap]);\n  var handleImgLoadError = function handleImgLoadError() {\n    var onError = props.onError;\n    var errorFlag = onError ? onError() : undefined;\n    if (errorFlag !== false) {\n      setIsImgExist(false);\n    }\n  };\n  var customizePrefixCls = props.prefixCls,\n    _props$shape = props.shape,\n    shape = _props$shape === void 0 ? 'circle' : _props$shape,\n    _props$size = props.size,\n    customSize = _props$size === void 0 ? 'default' : _props$size,\n    src = props.src,\n    srcSet = props.srcSet,\n    icon = props.icon,\n    className = props.className,\n    alt = props.alt,\n    draggable = props.draggable,\n    children = props.children,\n    crossOrigin = props.crossOrigin,\n    others = __rest(props, [\"prefixCls\", \"shape\", \"size\", \"src\", \"srcSet\", \"icon\", \"className\", \"alt\", \"draggable\", \"children\", \"crossOrigin\"]);\n  var size = customSize === 'default' ? groupSize : customSize;\n  var needResponsive = Object.keys((0, _typeof2[\"default\"])(size) === 'object' ? size || {} : {}).some(function (key) {\n    return ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'].includes(key);\n  });\n  var screens = (0, _useBreakpoint[\"default\"])(needResponsive);\n  var responsiveSizeStyle = React.useMemo(function () {\n    if ((0, _typeof2[\"default\"])(size) !== 'object') {\n      return {};\n    }\n    var currentBreakpoint = _responsiveObserve.responsiveArray.find(function (screen) {\n      return screens[screen];\n    });\n    var currentSize = size[currentBreakpoint];\n    return currentSize ? {\n      width: currentSize,\n      height: currentSize,\n      lineHeight: \"\".concat(currentSize, \"px\"),\n      fontSize: icon ? currentSize / 2 : 18\n    } : {};\n  }, [screens, size]);\n  process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!(typeof icon === 'string' && icon.length > 2), 'Avatar', \"`icon` is using ReactNode instead of string naming in v4. Please check `\".concat(icon, \"` at https://ant.design/components/icon\")) : void 0;\n  var prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  var sizeCls = (0, _classnames[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-lg\"), size === 'large'), \"\".concat(prefixCls, \"-sm\"), size === 'small'));\n  var hasImageElement = /*#__PURE__*/React.isValidElement(src);\n  var classString = (0, _classnames[\"default\"])(prefixCls, sizeCls, (0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-\").concat(shape), !!shape), \"\".concat(prefixCls, \"-image\"), hasImageElement || src && isImgExist), \"\".concat(prefixCls, \"-icon\"), !!icon), className);\n  var sizeStyle = typeof size === 'number' ? {\n    width: size,\n    height: size,\n    lineHeight: \"\".concat(size, \"px\"),\n    fontSize: icon ? size / 2 : 18\n  } : {};\n  var childrenToRender;\n  if (typeof src === 'string' && isImgExist) {\n    childrenToRender = /*#__PURE__*/React.createElement(\"img\", {\n      src: src,\n      draggable: draggable,\n      srcSet: srcSet,\n      onError: handleImgLoadError,\n      alt: alt,\n      crossOrigin: crossOrigin\n    });\n  } else if (hasImageElement) {\n    childrenToRender = src;\n  } else if (icon) {\n    childrenToRender = icon;\n  } else if (mounted || scale !== 1) {\n    var transformString = \"scale(\".concat(scale, \") translateX(-50%)\");\n    var childrenStyle = {\n      msTransform: transformString,\n      WebkitTransform: transformString,\n      transform: transformString\n    };\n    var sizeChildrenStyle = typeof size === 'number' ? {\n      lineHeight: \"\".concat(size, \"px\")\n    } : {};\n    childrenToRender = /*#__PURE__*/React.createElement(_rcResizeObserver[\"default\"], {\n      onResize: setScaleParam\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-string\"),\n      ref: avatarChildrenRef,\n      style: (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, sizeChildrenStyle), childrenStyle)\n    }, children));\n  } else {\n    childrenToRender = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-string\"),\n      style: {\n        opacity: 0\n      },\n      ref: avatarChildrenRef\n    }, children);\n  }\n  // The event is triggered twice from bubbling up the DOM tree.\n  // see https://codesandbox.io/s/kind-snow-9lidz\n  delete others.onError;\n  delete others.gap;\n  return /*#__PURE__*/React.createElement(\"span\", (0, _extends2[\"default\"])({}, others, {\n    style: (0, _extends2[\"default\"])((0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, sizeStyle), responsiveSizeStyle), others.style),\n    className: classString,\n    ref: avatarNodeMergeRef\n  }), childrenToRender);\n};\nvar Avatar = /*#__PURE__*/React.forwardRef(InternalAvatar);\nif (process.env.NODE_ENV !== 'production') {\n  Avatar.displayName = 'Avatar';\n}\nvar _default = exports[\"default\"] = Avatar;","map":null,"metadata":{},"sourceType":"script"}