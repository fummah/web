{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _rcSegmented = _interopRequireDefault(require(\"rc-segmented\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _configProvider = require(\"../config-provider\");\nvar _SizeContext = _interopRequireDefault(require(\"../config-provider/SizeContext\"));\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nfunction isSegmentedLabeledOptionWithIcon(option) {\n  return (0, _typeof2[\"default\"])(option) === 'object' && !!(option === null || option === void 0 ? void 0 : option.icon);\n}\nvar Segmented = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    block = props.block,\n    _props$options = props.options,\n    options = _props$options === void 0 ? [] : _props$options,\n    _props$size = props.size,\n    customSize = _props$size === void 0 ? 'middle' : _props$size,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"block\", \"options\", \"size\"]);\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var prefixCls = getPrefixCls('segmented', customizePrefixCls);\n  // ===================== Size =====================\n  var size = React.useContext(_SizeContext[\"default\"]);\n  var mergedSize = customSize || size;\n  // syntactic sugar to support `icon` for Segmented Item\n  var extendedOptions = React.useMemo(function () {\n    return options.map(function (option) {\n      if (isSegmentedLabeledOptionWithIcon(option)) {\n        var icon = option.icon,\n          label = option.label,\n          restOption = __rest(option, [\"icon\", \"label\"]);\n        return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, restOption), {\n          label: ( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-item-icon\")\n          }, icon), label && /*#__PURE__*/React.createElement(\"span\", null, label)))\n        });\n      }\n      return option;\n    });\n  }, [options, prefixCls]);\n  return /*#__PURE__*/React.createElement(_rcSegmented[\"default\"], (0, _extends2[\"default\"])({}, restProps, {\n    className: (0, _classnames[\"default\"])(className, (0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-block\"), block), \"\".concat(prefixCls, \"-sm\"), mergedSize === 'small'), \"\".concat(prefixCls, \"-lg\"), mergedSize === 'large')),\n    options: extendedOptions,\n    ref: ref,\n    prefixCls: prefixCls,\n    direction: direction\n  }));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Segmented.displayName = 'Segmented';\n}\nvar _default = exports[\"default\"] = Segmented;","map":null,"metadata":{},"sourceType":"script"}