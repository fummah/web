{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\aid_f\\\\source\\\\src\\\\components\\\\dashboard\\\\CRM\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tabs } from \"antd\";\nimport Widget from \"components/Widget\";\nimport TaskItem from \"./TaskItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TabPane = Tabs.TabPane;\nconst TaskList = props => {\n  _s();\n  const [taskList, setTaskList] = useState(props.taskList);\n  const onChange = data => {\n    setTaskList(taskList.map(task => {\n      if (task.id === data.id) {\n        task.completed = !data.completed;\n      }\n      return task;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    title: \"Task List\",\n    styleName: \"gx-card-tabs\",\n    extra: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"icon icon-search-new gx-pointer gx-fs-xxl gx-text-primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"All Task\",\n        children: taskList.map((task, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n          data: task,\n          onChange: onChange\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"My Task\",\n        children: taskList.map((task, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n          data: task,\n          onChange: onChange\n        }, \"2\" + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, \"2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"VM54YJ8uQR59BzbJ/PZonOMYhyo=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","Tabs","Widget","TaskItem","jsxDEV","_jsxDEV","TabPane","TaskList","props","_s","taskList","setTaskList","onChange","data","map","task","id","completed","title","styleName","extra","className","fileName","_jsxFileName","lineNumber","columnNumber","children","defaultActiveKey","tab","index","_c","$RefreshReg$"],"sources":["C:/wamp64/www/aid_f/source/src/components/dashboard/CRM/TaskList.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Tabs} from \"antd\";\r\nimport Widget from \"components/Widget\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst TaskList = (props) => {\r\n\r\n  const [taskList, setTaskList] = useState(props.taskList);\r\n\r\n\r\n  const onChange = (data) => {\r\n    setTaskList(\r\n      taskList.map(task => {\r\n        if (task.id === data.id) {\r\n          task.completed = !data.completed;\r\n        }\r\n        return task;\r\n      })\r\n    )\r\n  };\r\n\r\n  return (\r\n    <Widget title=\"Task List\" styleName=\"gx-card-tabs\"\r\n            extra={<i className=\"icon icon-search-new gx-pointer gx-fs-xxl gx-text-primary\"/>}>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"All Task\" key=\"1\">\r\n          {taskList.map((task, index) =>\r\n            <TaskItem key={index} data={task} onChange={onChange}/>)\r\n          }\r\n        </TabPane>\r\n        <TabPane tab=\"My Task\" key=\"2\">{\r\n          taskList.map((task, index) =>\r\n            <TaskItem key={\"2\" + index} data={task} onChange={onChange}/>)\r\n        }</TabPane>\r\n      </Tabs>\r\n    </Widget>\r\n  );\r\n};\r\n\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,IAAI,QAAO,MAAM;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAGL,IAAI,CAACK,OAAO;AAE5B,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACQ,KAAK,CAACE,QAAQ,CAAC;EAGxD,MAAME,QAAQ,GAAIC,IAAI,IAAK;IACzBF,WAAW,CACTD,QAAQ,CAACI,GAAG,CAACC,IAAI,IAAI;MACnB,IAAIA,IAAI,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,EAAE;QACvBD,IAAI,CAACE,SAAS,GAAG,CAACJ,IAAI,CAACI,SAAS;MAClC;MACA,OAAOF,IAAI;IACb,CAAC,CACH,CAAC;EACH,CAAC;EAED,oBACEV,OAAA,CAACH,MAAM;IAACgB,KAAK,EAAC,WAAW;IAACC,SAAS,EAAC,cAAc;IAC1CC,KAAK,eAAEf,OAAA;MAAGgB,SAAS,EAAC;IAA2D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAE;IAAAC,QAAA,eACxFrB,OAAA,CAACJ,IAAI;MAAC0B,gBAAgB,EAAC,GAAG;MAAAD,QAAA,gBACxBrB,OAAA,CAACC,OAAO;QAACsB,GAAG,EAAC,UAAU;QAAAF,QAAA,EACpBhB,QAAQ,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEc,KAAK,kBACxBxB,OAAA,CAACF,QAAQ;UAAaU,IAAI,EAAEE,IAAK;UAACH,QAAQ,EAAEA;QAAS,GAAtCiB,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkC,CAAC;MAAC,GAFhC,GAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAItB,CAAC,eACVpB,OAAA,CAACC,OAAO;QAACsB,GAAG,EAAC,SAAS;QAAAF,QAAA,EACpBhB,QAAQ,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEc,KAAK,kBACvBxB,OAAA,CAACF,QAAQ;UAAmBU,IAAI,EAAEE,IAAK;UAACH,QAAQ,EAAEA;QAAS,GAA5C,GAAG,GAAGiB,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkC,CAAC;MAAC,GAFvC,GAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAAChB,EAAA,CAhCIF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}