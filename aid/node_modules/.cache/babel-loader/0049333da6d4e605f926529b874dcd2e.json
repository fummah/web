{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\web\\\\aid\\\\src\\\\routes\\\\components\\\\dataEntry\\\\DatePicker\\\\PresettedRanges.js\";\nimport React from \"react\";\nimport { Card, DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RangePicker = DatePicker.RangePicker;\nfunction onChange(dates, dateStrings) {}\nconst PresettedRanges = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"gx-card\",\n    title: \"PresettedRanges\",\n    children: [/*#__PURE__*/_jsxDEV(RangePicker, {\n      className: \"gx-mb-3 gx-w-100\",\n      ranges: {\n        Today: [moment(), moment()],\n        'This Month': [moment(), moment().endOf('month')]\n      },\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RangePicker, {\n      className: \"gx-w-100\",\n      ranges: {\n        Today: [moment(), moment()],\n        'This Month': [moment(), moment().endOf('month')]\n      },\n      showTime: true,\n      format: \"YYYY/MM/DD HH:mm:ss\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = PresettedRanges;\nexport default PresettedRanges;\nvar _c;\n$RefreshReg$(_c, \"PresettedRanges\");","map":{"version":3,"names":["React","Card","DatePicker","moment","jsxDEV","_jsxDEV","RangePicker","onChange","dates","dateStrings","PresettedRanges","className","title","children","ranges","Today","endOf","fileName","_jsxFileName","lineNumber","columnNumber","showTime","format","_c","$RefreshReg$"],"sources":["C:/wamp64/www/web/aid/src/routes/components/dataEntry/DatePicker/PresettedRanges.js"],"sourcesContent":["import React from \"react\";\r\nimport {Card, DatePicker} from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst RangePicker = DatePicker.RangePicker;\r\n\r\nfunction onChange(dates, dateStrings) {\r\n}\r\n\r\nconst PresettedRanges = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"PresettedRanges\">\r\n      <RangePicker className=\"gx-mb-3 gx-w-100\"\r\n                   ranges={{Today: [moment(), moment()], 'This Month': [moment(), moment().endOf('month')]}}\r\n                   onChange={onChange}\r\n      />\r\n      <RangePicker className=\"gx-w-100\"\r\n                   ranges={{Today: [moment(), moment()], 'This Month': [moment(), moment().endOf('month')]}}\r\n                   showTime\r\n                   format=\"YYYY/MM/DD HH:mm:ss\"\r\n                   onChange={onChange}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PresettedRanges;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,EAAEC,UAAU,QAAO,MAAM;AACrC,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGJ,UAAU,CAACI,WAAW;AAE1C,SAASC,QAAQA,CAACC,KAAK,EAAEC,WAAW,EAAE,CACtC;AAEA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,oBACEL,OAAA,CAACJ,IAAI;IAACU,SAAS,EAAC,SAAS;IAACC,KAAK,EAAC,iBAAiB;IAAAC,QAAA,gBAC/CR,OAAA,CAACC,WAAW;MAACK,SAAS,EAAC,kBAAkB;MAC5BG,MAAM,EAAE;QAACC,KAAK,EAAE,CAACZ,MAAM,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC;QAAE,YAAY,EAAE,CAACA,MAAM,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAACa,KAAK,CAAC,OAAO,CAAC;MAAC,CAAE;MACzFT,QAAQ,EAAEA;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFf,OAAA,CAACC,WAAW;MAACK,SAAS,EAAC,UAAU;MACpBG,MAAM,EAAE;QAACC,KAAK,EAAE,CAACZ,MAAM,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC;QAAE,YAAY,EAAE,CAACA,MAAM,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAACa,KAAK,CAAC,OAAO,CAAC;MAAC,CAAE;MACzFK,QAAQ;MACRC,MAAM,EAAC,qBAAqB;MAC5Bf,QAAQ,EAAEA;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACG,EAAA,GAfIb,eAAe;AAiBrB,eAAeA,eAAe;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}