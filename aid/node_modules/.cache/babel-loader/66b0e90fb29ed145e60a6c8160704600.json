{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.ANT_MARK = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\nvar _locale = require(\"../modal/locale\");\nvar _context = _interopRequireDefault(require(\"./context\"));\nvar ANT_MARK = exports.ANT_MARK = 'internalMark';\nvar LocaleProvider = function LocaleProvider(props) {\n  var _props$locale = props.locale,\n    locale = _props$locale === void 0 ? {} : _props$locale,\n    children = props.children,\n    _ANT_MARK__ = props._ANT_MARK__;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(_ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale') : void 0;\n  }\n  React.useEffect(function () {\n    (0, _locale.changeConfirmLocale)(locale && locale.Modal);\n    return function () {\n      (0, _locale.changeConfirmLocale)();\n    };\n  }, [locale]);\n  var getMemoizedContextValue = React.useMemo(function () {\n    return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, locale), {\n      exist: true\n    });\n  }, [locale]);\n  return /*#__PURE__*/React.createElement(_context[\"default\"].Provider, {\n    value: getMemoizedContextValue\n  }, children);\n};\nvar _default = exports[\"default\"] = LocaleProvider;","map":null,"metadata":{},"sourceType":"script"}