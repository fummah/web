{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\web\\\\aid\\\\src\\\\routes\\\\components\\\\feedback\\\\Notification\\\\CustomClose.js\";\nimport React from \"react\";\nimport { Button, Card, notification } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst close = () => {\n  console.log('Notification was closed. Either the close button was clicked or duration time elapsed.');\n};\nconst openNotification = () => {\n  const key = `open${Date.now()}`;\n  const btn = /*#__PURE__*/_jsxDEV(Button, {\n    type: \"primary\",\n    size: \"small\",\n    onClick: () => notification.close(key),\n    children: \"Confirm\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n  notification.open({\n    message: 'Notification Title',\n    description: 'A function will be be called after the Notification is closed (automatically after the \"duration\" time of manually).',\n    btn,\n    key,\n    onClose: close\n  });\n};\nconst CustomClose = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Custom Close\",\n    className: \"gx-card\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: openNotification,\n      children: \"Open the notification box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomClose;\nexport default CustomClose;\nvar _c;\n$RefreshReg$(_c, \"CustomClose\");","map":{"version":3,"names":["React","Button","Card","notification","jsxDEV","_jsxDEV","close","console","log","openNotification","key","Date","now","btn","type","size","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","open","message","description","onClose","CustomClose","title","className","_c","$RefreshReg$"],"sources":["C:/wamp64/www/web/aid/src/routes/components/feedback/Notification/CustomClose.js"],"sourcesContent":["import React from \"react\";\r\nimport {Button, Card, notification} from \"antd\";\r\n\r\nconst close = () => {\r\n  console.log('Notification was closed. Either the close button was clicked or duration time elapsed.');\r\n};\r\n\r\nconst openNotification = () => {\r\n  const key = `open${Date.now()}`;\r\n  const btn = (\r\n    <Button type=\"primary\" size=\"small\" onClick={() => notification.close(key)}>\r\n      Confirm\r\n    </Button>\r\n  );\r\n  notification.open({\r\n    message: 'Notification Title',\r\n    description: 'A function will be be called after the Notification is closed (automatically after the \"duration\" time of manually).',\r\n    btn,\r\n    key,\r\n    onClose: close,\r\n  });\r\n};\r\n\r\nconst CustomClose = () => {\r\n  return (\r\n    <Card title=\"Custom Close\" className=\"gx-card\">\r\n      <Button type=\"primary\" onClick={openNotification}>\r\n        Open the notification box\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CustomClose;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAAEC,IAAI,EAAEC,YAAY,QAAO,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClBC,OAAO,CAACC,GAAG,CAAC,wFAAwF,CAAC;AACvG,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAMC,GAAG,GAAG,OAAOC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;EAC/B,MAAMC,GAAG,gBACPR,OAAA,CAACJ,MAAM;IAACa,IAAI,EAAC,SAAS;IAACC,IAAI,EAAC,OAAO;IAACC,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAACG,KAAK,CAACI,GAAG,CAAE;IAAAO,QAAA,EAAC;EAE5E;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CACT;EACDlB,YAAY,CAACmB,IAAI,CAAC;IAChBC,OAAO,EAAE,oBAAoB;IAC7BC,WAAW,EAAE,sHAAsH;IACnIX,GAAG;IACHH,GAAG;IACHe,OAAO,EAAEnB;EACX,CAAC,CAAC;AACJ,CAAC;AAED,MAAMoB,WAAW,GAAGA,CAAA,KAAM;EACxB,oBACErB,OAAA,CAACH,IAAI;IAACyB,KAAK,EAAC,cAAc;IAACC,SAAS,EAAC,SAAS;IAAAX,QAAA,eAC5CZ,OAAA,CAACJ,MAAM;MAACa,IAAI,EAAC,SAAS;MAACE,OAAO,EAAEP,gBAAiB;MAAAQ,QAAA,EAAC;IAElD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACQ,EAAA,GARIH,WAAW;AAUjB,eAAeA,WAAW;AAAC,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}