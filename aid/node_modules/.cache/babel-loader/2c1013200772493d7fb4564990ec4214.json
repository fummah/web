{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Option = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _rcMentions = _interopRequireDefault(require(\"rc-mentions\"));\nvar _ref = require(\"rc-util/lib/ref\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _configProvider = require(\"../config-provider\");\nvar _defaultRenderEmpty = _interopRequireDefault(require(\"../config-provider/defaultRenderEmpty\"));\nvar _context = require(\"../form/context\");\nvar _spin = _interopRequireDefault(require(\"../spin\"));\nvar _statusUtils = require(\"../_util/statusUtils\");\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar Option = exports.Option = _rcMentions[\"default\"].Option;\nfunction loadingFilterOption() {\n  return true;\n}\nvar InternalMentions = function InternalMentions(_a, ref) {\n  var customizePrefixCls = _a.prefixCls,\n    className = _a.className,\n    disabled = _a.disabled,\n    loading = _a.loading,\n    filterOption = _a.filterOption,\n    children = _a.children,\n    notFoundContent = _a.notFoundContent,\n    options = _a.options,\n    customStatus = _a.status,\n    restProps = __rest(_a, [\"prefixCls\", \"className\", \"disabled\", \"loading\", \"filterOption\", \"children\", \"notFoundContent\", \"options\", \"status\"]);\n  var _React$useState = React.useState(false),\n    _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n    focused = _React$useState2[0],\n    setFocused = _React$useState2[1];\n  var innerRef = React.useRef();\n  var mergedRef = (0, _ref.composeRef)(ref, innerRef);\n  // =================== Warning =====================\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!children, 'Mentions', '`Mentions.Option` is deprecated. Please use `options` instead.') : void 0;\n  }\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    renderEmpty = _React$useContext.renderEmpty,\n    direction = _React$useContext.direction;\n  var _React$useContext2 = React.useContext(_context.FormItemInputContext),\n    contextStatus = _React$useContext2.status,\n    hasFeedback = _React$useContext2.hasFeedback,\n    feedbackIcon = _React$useContext2.feedbackIcon;\n  var mergedStatus = (0, _statusUtils.getMergedStatus)(contextStatus, customStatus);\n  var onFocus = function onFocus() {\n    if (restProps.onFocus) {\n      restProps.onFocus.apply(restProps, arguments);\n    }\n    setFocused(true);\n  };\n  var onBlur = function onBlur() {\n    if (restProps.onBlur) {\n      restProps.onBlur.apply(restProps, arguments);\n    }\n    setFocused(false);\n  };\n  var getNotFoundContent = function getNotFoundContent() {\n    if (notFoundContent !== undefined) {\n      return notFoundContent;\n    }\n    return (renderEmpty || _defaultRenderEmpty[\"default\"])('Select');\n  };\n  var getOptions = function getOptions() {\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Option, {\n        value: \"ANTD_SEARCHING\",\n        disabled: true\n      }, /*#__PURE__*/React.createElement(_spin[\"default\"], {\n        size: \"small\"\n      }));\n    }\n    return children;\n  };\n  var mergedOptions = loading ? [{\n    value: 'ANTD_SEARCHING',\n    disabled: true,\n    label: /*#__PURE__*/React.createElement(_spin[\"default\"], {\n      size: \"small\"\n    })\n  }] : options;\n  var getFilterOption = function getFilterOption() {\n    if (loading) {\n      return loadingFilterOption;\n    }\n    return filterOption;\n  };\n  var prefixCls = getPrefixCls('mentions', customizePrefixCls);\n  var mergedClassName = (0, _classnames[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-disabled\"), disabled), \"\".concat(prefixCls, \"-focused\"), focused), \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), (0, _statusUtils.getStatusClassNames)(prefixCls, mergedStatus), !hasFeedback && className);\n  var mentions = /*#__PURE__*/React.createElement(_rcMentions[\"default\"], (0, _extends2[\"default\"])({\n    prefixCls: prefixCls,\n    notFoundContent: getNotFoundContent(),\n    className: mergedClassName,\n    disabled: disabled,\n    direction: direction\n  }, restProps, {\n    filterOption: getFilterOption(),\n    onFocus: onFocus,\n    onBlur: onBlur,\n    ref: mergedRef,\n    options: mergedOptions\n  }), getOptions());\n  if (hasFeedback) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-affix-wrapper\"), (0, _statusUtils.getStatusClassNames)(\"\".concat(prefixCls, \"-affix-wrapper\"), mergedStatus, hasFeedback), className)\n    }, mentions, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-suffix\")\n    }, feedbackIcon));\n  }\n  return mentions;\n};\nvar Mentions = /*#__PURE__*/React.forwardRef(InternalMentions);\nif (process.env.NODE_ENV !== 'production') {\n  Mentions.displayName = 'Mentions';\n}\nMentions.Option = Option;\nMentions.getMentions = function () {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _config$prefix = config.prefix,\n    prefix = _config$prefix === void 0 ? '@' : _config$prefix,\n    _config$split = config.split,\n    split = _config$split === void 0 ? ' ' : _config$split;\n  var prefixList = Array.isArray(prefix) ? prefix : [prefix];\n  return value.split(split).map(function () {\n    var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var hitPrefix = null;\n    prefixList.some(function (prefixStr) {\n      var startStr = str.slice(0, prefixStr.length);\n      if (startStr === prefixStr) {\n        hitPrefix = prefixStr;\n        return true;\n      }\n      return false;\n    });\n    if (hitPrefix !== null) {\n      return {\n        prefix: hitPrefix,\n        value: str.slice(hitPrefix.length)\n      };\n    }\n    return null;\n  }).filter(function (entity) {\n    return !!entity && !!entity.value;\n  });\n};\nvar _default = exports[\"default\"] = Mentions;","map":null,"metadata":{},"sourceType":"script"}