{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\aid_f\\\\source\\\\src\\\\routes\\\\components\\\\table\\\\Data\\\\GroupTable.js\";\nimport React from \"react\";\nimport { Card, Table } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  key: 'name',\n  width: 100,\n  fixed: 'left',\n  filters: [{\n    text: 'Joe',\n    value: 'Joe'\n  }, {\n    text: 'John',\n    value: 'John'\n  }],\n  onFilter: (value, record) => record.name.indexOf(value) === 0\n}, {\n  title: 'Other',\n  children: [{\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n    width: 200,\n    sorter: (a, b) => a.age - b.age\n  }, {\n    title: 'Address',\n    children: [{\n      title: 'Street',\n      dataIndex: 'street',\n      key: 'street',\n      width: 200\n    }, {\n      title: 'Block',\n      children: [{\n        title: 'Building',\n        dataIndex: 'building',\n        key: 'building',\n        width: 100\n      }, {\n        title: 'Door No.',\n        dataIndex: 'number',\n        key: 'number',\n        width: 100\n      }]\n    }]\n  }]\n}, {\n  title: 'Company',\n  children: [{\n    title: 'Company Address',\n    dataIndex: 'companyAddress',\n    key: 'companyAddress'\n  }, {\n    title: 'Company Name',\n    dataIndex: 'companyName',\n    key: 'companyName'\n  }]\n}, {\n  title: 'Gender',\n  dataIndex: 'gender',\n  key: 'gender',\n  width: 60,\n  fixed: 'right'\n}];\nconst data = [];\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: 'John Brown',\n    age: i + 1,\n    street: 'Lake Park',\n    building: 'C',\n    number: 2035,\n    companyAddress: 'Lake Street 42',\n    companyName: 'SoftLake Co',\n    gender: 'M'\n  });\n}\nconst GroupTable = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Group Table\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data,\n      bordered: true,\n      size: \"middle\",\n      scroll: {\n        x: '130%',\n        y: 240\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_c = GroupTable;\nexport default GroupTable;\nvar _c;\n$RefreshReg$(_c, \"GroupTable\");","map":{"version":3,"names":["React","Card","Table","jsxDEV","_jsxDEV","columns","title","dataIndex","key","width","fixed","filters","text","value","onFilter","record","name","indexOf","children","sorter","a","b","age","data","i","push","street","building","number","companyAddress","companyName","gender","GroupTable","dataSource","bordered","size","scroll","x","y","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/wamp64/www/aid_f/source/src/routes/components/table/Data/GroupTable.js"],"sourcesContent":["import React from \"react\";\r\nimport {Card, Table} from \"antd\";\r\n\r\nconst columns = [{\r\n  title: 'Name',\r\n  dataIndex: 'name',\r\n  key: 'name',\r\n  width: 100,\r\n  fixed: 'left',\r\n  filters: [{\r\n    text: 'Joe',\r\n    value: 'Joe',\r\n  }, {\r\n    text: 'John',\r\n    value: 'John',\r\n  }],\r\n  onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n}, {\r\n  title: 'Other',\r\n\r\n  children: [{\r\n    title: 'Age',\r\n    dataIndex: 'age',\r\n    key: 'age',\r\n    width: 200,\r\n    sorter: (a, b) => a.age - b.age,\r\n  }, {\r\n    title: 'Address',\r\n    children: [{\r\n      title: 'Street',\r\n      dataIndex: 'street',\r\n      key: 'street',\r\n      width: 200,\r\n    }, {\r\n      title: 'Block',\r\n      children: [{\r\n        title: 'Building',\r\n        dataIndex: 'building',\r\n        key: 'building',\r\n        width: 100,\r\n      }, {\r\n        title: 'Door No.',\r\n        dataIndex: 'number',\r\n        key: 'number',\r\n        width: 100,\r\n      }],\r\n    }],\r\n  }],\r\n}, {\r\n  title: 'Company',\r\n  children: [{\r\n    title: 'Company Address',\r\n    dataIndex: 'companyAddress',\r\n    key: 'companyAddress',\r\n  }, {\r\n    title: 'Company Name',\r\n    dataIndex: 'companyName',\r\n    key: 'companyName',\r\n  }],\r\n}, {\r\n  title: 'Gender',\r\n  dataIndex: 'gender',\r\n  key: 'gender',\r\n  width: 60,\r\n  fixed: 'right',\r\n}];\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 100; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: 'John Brown',\r\n    age: i + 1,\r\n    street: 'Lake Park',\r\n    building: 'C',\r\n    number: 2035,\r\n    companyAddress: 'Lake Street 42',\r\n    companyName: 'SoftLake Co',\r\n    gender: 'M',\r\n  });\r\n}\r\nconst GroupTable = () => {\r\n  return (\r\n    <Card title=\"Group Table\">\r\n      <Table\r\n        columns={columns}\r\n        dataSource={data}\r\n        bordered\r\n        size=\"middle\"\r\n        scroll={{x: '130%', y: 240}}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GroupTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}