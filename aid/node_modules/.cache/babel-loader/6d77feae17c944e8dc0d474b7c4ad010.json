{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _rcSelect = _interopRequireWildcard(require(\"rc-select\"));\nvar _omit = _interopRequireDefault(require(\"rc-util/lib/omit\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar React = _react;\nvar _configProvider = require(\"../config-provider\");\nvar _defaultRenderEmpty = _interopRequireDefault(require(\"../config-provider/defaultRenderEmpty\"));\nvar _DisabledContext = _interopRequireDefault(require(\"../config-provider/DisabledContext\"));\nvar _SizeContext = _interopRequireDefault(require(\"../config-provider/SizeContext\"));\nvar _context = require(\"../form/context\");\nvar _motion = require(\"../_util/motion\");\nvar _statusUtils = require(\"../_util/statusUtils\");\nvar _iconUtil = _interopRequireDefault(require(\"./utils/iconUtil\"));\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\nvar _Compact = require(\"../space/Compact\");\n// TODO: 4.0 - codemod should help to change `filterOption` to support node props.\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar SECRET_COMBOBOX_MODE_DO_NOT_USE = 'SECRET_COMBOBOX_MODE_DO_NOT_USE';\nvar InternalSelect = function InternalSelect(_a, ref) {\n  var customizePrefixCls = _a.prefixCls,\n    _a$bordered = _a.bordered,\n    bordered = _a$bordered === void 0 ? true : _a$bordered,\n    className = _a.className,\n    getPopupContainer = _a.getPopupContainer,\n    dropdownClassName = _a.dropdownClassName,\n    popupClassName = _a.popupClassName,\n    _a$listHeight = _a.listHeight,\n    listHeight = _a$listHeight === void 0 ? 256 : _a$listHeight,\n    placement = _a.placement,\n    _a$listItemHeight = _a.listItemHeight,\n    listItemHeight = _a$listItemHeight === void 0 ? 32 : _a$listItemHeight,\n    customizeSize = _a.size,\n    customDisabled = _a.disabled,\n    notFoundContent = _a.notFoundContent,\n    customStatus = _a.status,\n    showArrow = _a.showArrow,\n    props = __rest(_a, [\"prefixCls\", \"bordered\", \"className\", \"getPopupContainer\", \"dropdownClassName\", \"popupClassName\", \"listHeight\", \"placement\", \"listItemHeight\", \"size\", \"disabled\", \"notFoundContent\", \"status\", \"showArrow\"]);\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n    getContextPopupContainer = _React$useContext.getPopupContainer,\n    getPrefixCls = _React$useContext.getPrefixCls,\n    renderEmpty = _React$useContext.renderEmpty,\n    direction = _React$useContext.direction,\n    virtual = _React$useContext.virtual,\n    dropdownMatchSelectWidth = _React$useContext.dropdownMatchSelectWidth;\n  var size = React.useContext(_SizeContext[\"default\"]);\n  var prefixCls = getPrefixCls('select', customizePrefixCls);\n  var rootPrefixCls = getPrefixCls();\n  var _useCompactItemContex = (0, _Compact.useCompactItemContext)(prefixCls, direction),\n    compactSize = _useCompactItemContex.compactSize,\n    compactItemClassnames = _useCompactItemContex.compactItemClassnames;\n  var mode = React.useMemo(function () {\n    var m = props.mode;\n    if (m === 'combobox') {\n      return undefined;\n    }\n    if (m === SECRET_COMBOBOX_MODE_DO_NOT_USE) {\n      return 'combobox';\n    }\n    return m;\n  }, [props.mode]);\n  var isMultiple = mode === 'multiple' || mode === 'tags';\n  var mergedShowArrow = showArrow !== undefined ? showArrow : props.loading || !(isMultiple || mode === 'combobox');\n  // =================== Warning =====================\n  process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!dropdownClassName, 'Select', '`dropdownClassName` is deprecated which will be removed in next major version. Please use `popupClassName` instead.') : void 0;\n  // ===================== Form Status =====================\n  var _useContext = (0, _react.useContext)(_context.FormItemInputContext),\n    contextStatus = _useContext.status,\n    hasFeedback = _useContext.hasFeedback,\n    isFormItemInput = _useContext.isFormItemInput,\n    feedbackIcon = _useContext.feedbackIcon;\n  var mergedStatus = (0, _statusUtils.getMergedStatus)(contextStatus, customStatus);\n  // ===================== Empty =====================\n  var mergedNotFound;\n  if (notFoundContent !== undefined) {\n    mergedNotFound = notFoundContent;\n  } else if (mode === 'combobox') {\n    mergedNotFound = null;\n  } else {\n    mergedNotFound = (renderEmpty || _defaultRenderEmpty[\"default\"])('Select');\n  }\n  // ===================== Icons =====================\n  var _getIcons = (0, _iconUtil[\"default\"])((0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, props), {\n      multiple: isMultiple,\n      hasFeedback: hasFeedback,\n      feedbackIcon: feedbackIcon,\n      showArrow: mergedShowArrow,\n      prefixCls: prefixCls\n    })),\n    suffixIcon = _getIcons.suffixIcon,\n    itemIcon = _getIcons.itemIcon,\n    removeIcon = _getIcons.removeIcon,\n    clearIcon = _getIcons.clearIcon;\n  var selectProps = (0, _omit[\"default\"])(props, ['suffixIcon', 'itemIcon']);\n  var rcSelectRtlDropdownClassName = (0, _classnames[\"default\"])(popupClassName || dropdownClassName, (0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-dropdown-\").concat(direction), direction === 'rtl'));\n  var mergedSize = compactSize || customizeSize || size;\n  // ===================== Disabled =====================\n  var disabled = React.useContext(_DisabledContext[\"default\"]);\n  var mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  var mergedClassName = (0, _classnames[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-lg\"), mergedSize === 'large'), \"\".concat(prefixCls, \"-sm\"), mergedSize === 'small'), \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), \"\".concat(prefixCls, \"-borderless\"), !bordered), \"\".concat(prefixCls, \"-in-form-item\"), isFormItemInput), (0, _statusUtils.getStatusClassNames)(prefixCls, mergedStatus, hasFeedback), compactItemClassnames, className);\n  // ===================== Placement =====================\n  var getPlacement = function getPlacement() {\n    if (placement !== undefined) {\n      return placement;\n    }\n    return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n  };\n  return /*#__PURE__*/React.createElement(_rcSelect[\"default\"], (0, _extends2[\"default\"])({\n    ref: ref,\n    virtual: virtual,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth\n  }, selectProps, {\n    transitionName: (0, _motion.getTransitionName)(rootPrefixCls, (0, _motion.getTransitionDirection)(placement), props.transitionName),\n    listHeight: listHeight,\n    listItemHeight: listItemHeight,\n    mode: mode,\n    prefixCls: prefixCls,\n    placement: getPlacement(),\n    direction: direction,\n    inputIcon: suffixIcon,\n    menuItemSelectedIcon: itemIcon,\n    removeIcon: removeIcon,\n    clearIcon: clearIcon,\n    notFoundContent: mergedNotFound,\n    className: mergedClassName,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    dropdownClassName: rcSelectRtlDropdownClassName,\n    showArrow: hasFeedback || showArrow,\n    disabled: mergedDisabled\n  }));\n};\nvar Select = /*#__PURE__*/React.forwardRef(InternalSelect);\nSelect.SECRET_COMBOBOX_MODE_DO_NOT_USE = SECRET_COMBOBOX_MODE_DO_NOT_USE;\nSelect.Option = _rcSelect.Option;\nSelect.OptGroup = _rcSelect.OptGroup;\nvar _default = exports[\"default\"] = Select;","map":null,"metadata":{},"sourceType":"script"}