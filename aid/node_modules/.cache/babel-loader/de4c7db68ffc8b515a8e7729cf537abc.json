{"ast":null,"code":"import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport { fetchStickySuccess } from '../actions/Notes';\nimport { database } from '../../firebase/firebase';\nimport { GET_STICKY, NOTES_UPDATE } from '../../constants/ActionTypes';\nimport { fetchError } from \"../actions/Common\";\nconst getSticky = async () => await database.ref('notes').once('value').then(snapshot => {\n  const notess = [];\n  snapshot.forEach(rawData => {\n    notess.push(rawData.val());\n  });\n  return notess;\n}).catch(error => error);\nconst updateStickyRequest = async ({\n  notesList\n}) => {\n  await database.ref('notes').set(notesList).then(notesList => notesList).catch(notesList => notesList);\n};\nfunction* fetchStickyRequest() {\n  try {\n    const fetchedSticky = yield call(getSticky);\n    yield put(fetchStickySuccess(fetchedSticky));\n  } catch (error) {\n    yield put(fetchError(error));\n  }\n}\nexport function* fetchSticky() {\n  yield takeEvery(GET_STICKY, fetchStickyRequest);\n}\nexport function* updateSticky() {\n  yield takeEvery(NOTES_UPDATE, updateStickyRequest);\n}\nexport default function* rootSaga() {\n  yield all([fork(fetchSticky), fork(updateSticky)]);\n}","map":{"version":3,"names":["all","call","fork","put","takeEvery","fetchStickySuccess","database","GET_STICKY","NOTES_UPDATE","fetchError","getSticky","ref","once","then","snapshot","notess","forEach","rawData","push","val","catch","error","updateStickyRequest","notesList","set","fetchStickyRequest","fetchedSticky","fetchSticky","updateSticky","rootSaga"],"sources":["C:/wamp64/www/aid_f/source/src/appRedux/sagas/Notes.js"],"sourcesContent":["import {all, call, fork, put, takeEvery} from \"redux-saga/effects\";\r\nimport {fetchStickySuccess} from '../actions/Notes';\r\nimport {database} from '../../firebase/firebase';\r\nimport {GET_STICKY, NOTES_UPDATE} from '../../constants/ActionTypes';\r\nimport {fetchError} from \"../actions/Common\";\r\n\r\nconst getSticky = async () =>\r\n  await database.ref('notes').once('value')\r\n    .then((snapshot) => {\r\n      const notess = [];\r\n      snapshot.forEach((rawData) => {\r\n        notess.push(rawData.val());\r\n      });\r\n      return notess;\r\n    })\r\n    .catch(error => error);\r\n\r\n\r\nconst updateStickyRequest = async ({notesList}) => {\r\n  await  database.ref('notes').set(notesList)\r\n    .then(notesList => notesList)\r\n    .catch(notesList => notesList);\r\n};\r\n\r\nfunction* fetchStickyRequest() {\r\n  try {\r\n    const fetchedSticky = yield call(getSticky);\r\n    yield put(fetchStickySuccess(fetchedSticky));\r\n  } catch (error) {\r\n    yield put(fetchError(error));\r\n  }\r\n}\r\n\r\nexport function* fetchSticky() {\r\n  yield takeEvery(GET_STICKY, fetchStickyRequest);\r\n}\r\n\r\nexport function* updateSticky() {\r\n  yield takeEvery(NOTES_UPDATE, updateStickyRequest);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(fetchSticky),\r\n    fork(updateSticky)]);\r\n}\r\n"],"mappings":"AAAA,SAAQA,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,SAAS,QAAO,oBAAoB;AAClE,SAAQC,kBAAkB,QAAO,kBAAkB;AACnD,SAAQC,QAAQ,QAAO,yBAAyB;AAChD,SAAQC,UAAU,EAAEC,YAAY,QAAO,6BAA6B;AACpE,SAAQC,UAAU,QAAO,mBAAmB;AAE5C,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAChB,MAAMJ,QAAQ,CAACK,GAAG,CAAC,OAAO,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAK;EAClB,MAAMC,MAAM,GAAG,EAAE;EACjBD,QAAQ,CAACE,OAAO,CAAEC,OAAO,IAAK;IAC5BF,MAAM,CAACG,IAAI,CAACD,OAAO,CAACE,GAAG,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC;EACF,OAAOJ,MAAM;AACf,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAIA,KAAK,CAAC;AAG1B,MAAMC,mBAAmB,GAAG,MAAAA,CAAO;EAACC;AAAS,CAAC,KAAK;EACjD,MAAOjB,QAAQ,CAACK,GAAG,CAAC,OAAO,CAAC,CAACa,GAAG,CAACD,SAAS,CAAC,CACxCV,IAAI,CAACU,SAAS,IAAIA,SAAS,CAAC,CAC5BH,KAAK,CAACG,SAAS,IAAIA,SAAS,CAAC;AAClC,CAAC;AAED,UAAUE,kBAAkBA,CAAA,EAAG;EAC7B,IAAI;IACF,MAAMC,aAAa,GAAG,MAAMzB,IAAI,CAACS,SAAS,CAAC;IAC3C,MAAMP,GAAG,CAACE,kBAAkB,CAACqB,aAAa,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOL,KAAK,EAAE;IACd,MAAMlB,GAAG,CAACM,UAAU,CAACY,KAAK,CAAC,CAAC;EAC9B;AACF;AAEA,OAAO,UAAUM,WAAWA,CAAA,EAAG;EAC7B,MAAMvB,SAAS,CAACG,UAAU,EAAEkB,kBAAkB,CAAC;AACjD;AAEA,OAAO,UAAUG,YAAYA,CAAA,EAAG;EAC9B,MAAMxB,SAAS,CAACI,YAAY,EAAEc,mBAAmB,CAAC;AACpD;AAEA,eAAe,UAAUO,QAAQA,CAAA,EAAG;EAClC,MAAM7B,GAAG,CAAC,CAACE,IAAI,CAACyB,WAAW,CAAC,EAC1BzB,IAAI,CAAC0B,YAAY,CAAC,CAAC,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module"}