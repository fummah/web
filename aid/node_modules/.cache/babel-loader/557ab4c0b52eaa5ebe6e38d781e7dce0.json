{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _isNativeReflectConstruct2 = _interopRequireDefault(require(\"@babel/runtime/helpers/isNativeReflectConstruct\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _rcMenu = require(\"rc-menu\");\nvar _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Sider = require(\"../layout/Sider\");\nvar _tooltip = _interopRequireDefault(require(\"../tooltip\"));\nvar _reactNode = require(\"../_util/reactNode\");\nvar _MenuContext = _interopRequireDefault(require(\"./MenuContext\"));\nfunction _callSuper(t, o, e) {\n  return o = (0, _getPrototypeOf2[\"default\"])(o), (0, _possibleConstructorReturn2[\"default\"])(t, (0, _isNativeReflectConstruct2[\"default\"])() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2[\"default\"])(t).constructor) : o.apply(t, e));\n}\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar MenuItem = exports[\"default\"] = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(MenuItem, _React$Component);\n  function MenuItem() {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, MenuItem);\n    _this = _callSuper(this, MenuItem, arguments);\n    _this.renderItem = function (_ref) {\n      var siderCollapsed = _ref.siderCollapsed;\n      var _a;\n      var _this$context = _this.context,\n        prefixCls = _this$context.prefixCls,\n        firstLevel = _this$context.firstLevel,\n        inlineCollapsed = _this$context.inlineCollapsed,\n        direction = _this$context.direction,\n        disableMenuItemTitleTooltip = _this$context.disableMenuItemTitleTooltip;\n      var _this$props = _this.props,\n        className = _this$props.className,\n        children = _this$props.children;\n      var _b = _this.props,\n        title = _b.title,\n        icon = _b.icon,\n        danger = _b.danger,\n        rest = __rest(_b, [\"title\", \"icon\", \"danger\"]);\n      var tooltipTitle = title;\n      if (typeof title === 'undefined') {\n        tooltipTitle = firstLevel ? children : '';\n      } else if (title === false) {\n        tooltipTitle = '';\n      }\n      var tooltipProps = {\n        title: tooltipTitle\n      };\n      if (!siderCollapsed && !inlineCollapsed) {\n        tooltipProps.title = null;\n        // Reset `open` to fix control mode tooltip display not correct\n        // ref: https://github.com/ant-design/ant-design/issues/16742\n        tooltipProps.open = false;\n      }\n      var childrenLength = (0, _toArray[\"default\"])(children).length;\n      var returnNode = /*#__PURE__*/React.createElement(_rcMenu.Item, (0, _extends2[\"default\"])({}, rest, {\n        className: (0, _classnames[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-item-danger\"), danger), \"\".concat(prefixCls, \"-item-only-child\"), (icon ? childrenLength + 1 : childrenLength) === 1), className),\n        title: typeof title === 'string' ? title : undefined\n      }), (0, _reactNode.cloneElement)(icon, {\n        className: (0, _classnames[\"default\"])((0, _reactNode.isValidElement)(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', \"\".concat(prefixCls, \"-item-icon\"))\n      }), _this.renderItemChildren(inlineCollapsed));\n      if (!disableMenuItemTitleTooltip) {\n        returnNode = /*#__PURE__*/React.createElement(_tooltip[\"default\"], (0, _extends2[\"default\"])({}, tooltipProps, {\n          placement: direction === 'rtl' ? 'left' : 'right',\n          overlayClassName: \"\".concat(prefixCls, \"-inline-collapsed-tooltip\")\n        }), returnNode);\n      }\n      return returnNode;\n    };\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(MenuItem, [{\n    key: \"renderItemChildren\",\n    value: function renderItemChildren(inlineCollapsed) {\n      var _this$context2 = this.context,\n        prefixCls = _this$context2.prefixCls,\n        firstLevel = _this$context2.firstLevel;\n      var _this$props2 = this.props,\n        icon = _this$props2.icon,\n        children = _this$props2.children;\n      var wrapNode = /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-title-content\")\n      }, children);\n      // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n      // ref: https://github.com/ant-design/ant-design/pull/23456\n      if (!icon || (0, _reactNode.isValidElement)(children) && children.type === 'span') {\n        if (children && inlineCollapsed && firstLevel && typeof children === 'string') {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"\".concat(prefixCls, \"-inline-collapsed-noicon\")\n          }, children.charAt(0));\n        }\n      }\n      return wrapNode;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(_Sider.SiderContext.Consumer, null, this.renderItem);\n    }\n  }]);\n  return MenuItem;\n}(React.Component);\nMenuItem.contextType = _MenuContext[\"default\"];","map":null,"metadata":{},"sourceType":"script"}