{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"List\", {\n  enumerable: true,\n  get: function get() {\n    return _rcFieldForm.List;\n  }\n});\nexports[\"default\"] = void 0;\nObject.defineProperty(exports, \"useForm\", {\n  enumerable: true,\n  get: function get() {\n    return _useForm3[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"useWatch\", {\n  enumerable: true,\n  get: function get() {\n    return _rcFieldForm.useWatch;\n  }\n});\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _rcFieldForm = _interopRequireWildcard(require(\"rc-field-form\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar React = _react;\nvar _configProvider = require(\"../config-provider\");\nvar _DisabledContext = _interopRequireWildcard(require(\"../config-provider/DisabledContext\"));\nvar _SizeContext = _interopRequireWildcard(require(\"../config-provider/SizeContext\"));\nvar _context = require(\"./context\");\nvar _validateMessagesContext = _interopRequireDefault(require(\"./validateMessagesContext\"));\nvar _useForm3 = _interopRequireDefault(require(\"./hooks/useForm\"));\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar InternalForm = function InternalForm(props, ref) {\n  var contextSize = React.useContext(_SizeContext[\"default\"]);\n  var contextDisabled = React.useContext(_DisabledContext[\"default\"]);\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction,\n    contextForm = _React$useContext.form;\n  var customizePrefixCls = props.prefixCls,\n    _props$className = props.className,\n    className = _props$className === void 0 ? '' : _props$className,\n    _props$size = props.size,\n    size = _props$size === void 0 ? contextSize : _props$size,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? contextDisabled : _props$disabled,\n    form = props.form,\n    colon = props.colon,\n    labelAlign = props.labelAlign,\n    labelWrap = props.labelWrap,\n    labelCol = props.labelCol,\n    wrapperCol = props.wrapperCol,\n    hideRequiredMark = props.hideRequiredMark,\n    _props$layout = props.layout,\n    layout = _props$layout === void 0 ? 'horizontal' : _props$layout,\n    scrollToFirstError = props.scrollToFirstError,\n    requiredMark = props.requiredMark,\n    onFinishFailed = props.onFinishFailed,\n    name = props.name,\n    restFormProps = __rest(props, [\"prefixCls\", \"className\", \"size\", \"disabled\", \"form\", \"colon\", \"labelAlign\", \"labelWrap\", \"labelCol\", \"wrapperCol\", \"hideRequiredMark\", \"layout\", \"scrollToFirstError\", \"requiredMark\", \"onFinishFailed\", \"name\"]);\n  var contextValidateMessages = React.useContext(_validateMessagesContext[\"default\"]);\n  var mergedRequiredMark = (0, _react.useMemo)(function () {\n    if (requiredMark !== undefined) {\n      return requiredMark;\n    }\n    if (contextForm && contextForm.requiredMark !== undefined) {\n      return contextForm.requiredMark;\n    }\n    if (hideRequiredMark) {\n      return false;\n    }\n    return true;\n  }, [hideRequiredMark, requiredMark, contextForm]);\n  var mergedColon = colon !== null && colon !== void 0 ? colon : contextForm === null || contextForm === void 0 ? void 0 : contextForm.colon;\n  var prefixCls = getPrefixCls('form', customizePrefixCls);\n  var formClassName = (0, _classnames[\"default\"])(prefixCls, (0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-\").concat(layout), true), \"\".concat(prefixCls, \"-hide-required-mark\"), mergedRequiredMark === false), \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), \"\".concat(prefixCls, \"-\").concat(size), size), className);\n  var _useForm = (0, _useForm3[\"default\"])(form),\n    _useForm2 = (0, _slicedToArray2[\"default\"])(_useForm, 1),\n    wrapForm = _useForm2[0];\n  var __INTERNAL__ = wrapForm.__INTERNAL__;\n  __INTERNAL__.name = name;\n  var formContextValue = (0, _react.useMemo)(function () {\n    return {\n      name: name,\n      labelAlign: labelAlign,\n      labelCol: labelCol,\n      labelWrap: labelWrap,\n      wrapperCol: wrapperCol,\n      vertical: layout === 'vertical',\n      colon: mergedColon,\n      requiredMark: mergedRequiredMark,\n      itemRef: __INTERNAL__.itemRef,\n      form: wrapForm\n    };\n  }, [name, labelAlign, labelCol, wrapperCol, layout, mergedColon, mergedRequiredMark, wrapForm]);\n  React.useImperativeHandle(ref, function () {\n    return wrapForm;\n  });\n  var onInternalFinishFailed = function onInternalFinishFailed(errorInfo) {\n    onFinishFailed === null || onFinishFailed === void 0 ? void 0 : onFinishFailed(errorInfo);\n    var defaultScrollToFirstError = {\n      block: 'nearest'\n    };\n    if (scrollToFirstError && errorInfo.errorFields.length) {\n      if ((0, _typeof2[\"default\"])(scrollToFirstError) === 'object') {\n        defaultScrollToFirstError = scrollToFirstError;\n      }\n      wrapForm.scrollToField(errorInfo.errorFields[0].name, defaultScrollToFirstError);\n    }\n  };\n  return /*#__PURE__*/React.createElement(_DisabledContext.DisabledContextProvider, {\n    disabled: disabled\n  }, /*#__PURE__*/React.createElement(_SizeContext.SizeContextProvider, {\n    size: size\n  }, /*#__PURE__*/React.createElement(_context.FormProvider, (0, _extends2[\"default\"])({}, {\n    // This is not list in API, we pass with spread\n    validateMessages: contextValidateMessages\n  }), /*#__PURE__*/React.createElement(_context.FormContext.Provider, {\n    value: formContextValue\n  }, /*#__PURE__*/React.createElement(_rcFieldForm[\"default\"], (0, _extends2[\"default\"])({\n    id: name\n  }, restFormProps, {\n    name: name,\n    onFinishFailed: onInternalFinishFailed,\n    form: wrapForm,\n    className: formClassName\n  }))))));\n};\nvar Form = /*#__PURE__*/React.forwardRef(InternalForm);\nvar _default = exports[\"default\"] = Form;","map":null,"metadata":{},"sourceType":"script"}