{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _FileTwoTone = _interopRequireDefault(require(\"@ant-design/icons/FileTwoTone\"));\nvar _LoadingOutlined = _interopRequireDefault(require(\"@ant-design/icons/LoadingOutlined\"));\nvar _PaperClipOutlined = _interopRequireDefault(require(\"@ant-design/icons/PaperClipOutlined\"));\nvar _PictureTwoTone = _interopRequireDefault(require(\"@ant-design/icons/PictureTwoTone\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _rcMotion = _interopRequireWildcard(require(\"rc-motion\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _button = _interopRequireDefault(require(\"../../button\"));\nvar _configProvider = require(\"../../config-provider\");\nvar _useForceUpdate = _interopRequireDefault(require(\"../../_util/hooks/useForceUpdate\"));\nvar _motion = _interopRequireDefault(require(\"../../_util/motion\"));\nvar _reactNode = require(\"../../_util/reactNode\");\nvar _utils = require(\"../utils\");\nvar _ListItem = _interopRequireDefault(require(\"./ListItem\"));\nvar listItemMotion = (0, _extends2[\"default\"])({}, _motion[\"default\"]);\ndelete listItemMotion.onAppearEnd;\ndelete listItemMotion.onEnterEnd;\ndelete listItemMotion.onLeaveEnd;\nvar InternalUploadList = function InternalUploadList(props, ref) {\n  var _props$listType = props.listType,\n    listType = _props$listType === void 0 ? 'text' : _props$listType,\n    _props$previewFile = props.previewFile,\n    previewFile = _props$previewFile === void 0 ? _utils.previewImage : _props$previewFile,\n    onPreview = props.onPreview,\n    onDownload = props.onDownload,\n    onRemove = props.onRemove,\n    locale = props.locale,\n    iconRender = props.iconRender,\n    _props$isImageUrl = props.isImageUrl,\n    isImgUrl = _props$isImageUrl === void 0 ? _utils.isImageUrl : _props$isImageUrl,\n    customizePrefixCls = props.prefixCls,\n    _props$items = props.items,\n    items = _props$items === void 0 ? [] : _props$items,\n    _props$showPreviewIco = props.showPreviewIcon,\n    showPreviewIcon = _props$showPreviewIco === void 0 ? true : _props$showPreviewIco,\n    _props$showRemoveIcon = props.showRemoveIcon,\n    showRemoveIcon = _props$showRemoveIcon === void 0 ? true : _props$showRemoveIcon,\n    _props$showDownloadIc = props.showDownloadIcon,\n    showDownloadIcon = _props$showDownloadIc === void 0 ? false : _props$showDownloadIc,\n    removeIcon = props.removeIcon,\n    previewIcon = props.previewIcon,\n    downloadIcon = props.downloadIcon,\n    _props$progress = props.progress,\n    progress = _props$progress === void 0 ? {\n      strokeWidth: 2,\n      showInfo: false\n    } : _props$progress,\n    appendAction = props.appendAction,\n    _props$appendActionVi = props.appendActionVisible,\n    appendActionVisible = _props$appendActionVi === void 0 ? true : _props$appendActionVi,\n    itemRender = props.itemRender,\n    disabled = props.disabled;\n  var forceUpdate = (0, _useForceUpdate[\"default\"])();\n  var _React$useState = React.useState(false),\n    _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n    motionAppear = _React$useState2[0],\n    setMotionAppear = _React$useState2[1];\n  // ============================= Effect =============================\n  React.useEffect(function () {\n    if (listType !== 'picture' && listType !== 'picture-card') {\n      return;\n    }\n    (items || []).forEach(function (file) {\n      if (typeof document === 'undefined' || typeof window === 'undefined' || !window.FileReader || !window.File || !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) || file.thumbUrl !== undefined) {\n        return;\n      }\n      file.thumbUrl = '';\n      if (previewFile) {\n        previewFile(file.originFileObj).then(function (previewDataUrl) {\n          // Need append '' to avoid dead loop\n          file.thumbUrl = previewDataUrl || '';\n          forceUpdate();\n        });\n      }\n    });\n  }, [listType, items, previewFile]);\n  React.useEffect(function () {\n    setMotionAppear(true);\n  }, []);\n  // ============================= Events =============================\n  var onInternalPreview = function onInternalPreview(file, e) {\n    if (!onPreview) {\n      return;\n    }\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    return onPreview(file);\n  };\n  var onInternalDownload = function onInternalDownload(file) {\n    if (typeof onDownload === 'function') {\n      onDownload(file);\n    } else if (file.url) {\n      window.open(file.url);\n    }\n  };\n  var onInternalClose = function onInternalClose(file) {\n    onRemove === null || onRemove === void 0 ? void 0 : onRemove(file);\n  };\n  var internalIconRender = function internalIconRender(file) {\n    if (iconRender) {\n      return iconRender(file, listType);\n    }\n    var isLoading = file.status === 'uploading';\n    var fileIcon = isImgUrl && isImgUrl(file) ? /*#__PURE__*/React.createElement(_PictureTwoTone[\"default\"], null) : /*#__PURE__*/React.createElement(_FileTwoTone[\"default\"], null);\n    var icon = isLoading ? /*#__PURE__*/React.createElement(_LoadingOutlined[\"default\"], null) : /*#__PURE__*/React.createElement(_PaperClipOutlined[\"default\"], null);\n    if (listType === 'picture') {\n      icon = isLoading ? /*#__PURE__*/React.createElement(_LoadingOutlined[\"default\"], null) : fileIcon;\n    } else if (listType === 'picture-card') {\n      icon = isLoading ? locale.uploading : fileIcon;\n    }\n    return icon;\n  };\n  var actionIconRender = function actionIconRender(customIcon, callback, prefixCls, title) {\n    var btnProps = {\n      type: 'text',\n      size: 'small',\n      title: title,\n      disabled: disabled,\n      onClick: function onClick(e) {\n        callback();\n        if ((0, _reactNode.isValidElement)(customIcon) && customIcon.props.onClick) {\n          customIcon.props.onClick(e);\n        }\n      },\n      className: \"\".concat(prefixCls, \"-list-item-card-actions-btn\")\n    };\n    if ((0, _reactNode.isValidElement)(customIcon)) {\n      var btnIcon = (0, _reactNode.cloneElement)(customIcon, (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, customIcon.props), {\n        onClick: function onClick() {}\n      }));\n      return /*#__PURE__*/React.createElement(_button[\"default\"], (0, _extends2[\"default\"])({}, btnProps, {\n        icon: btnIcon\n      }));\n    }\n    return /*#__PURE__*/React.createElement(_button[\"default\"], (0, _extends2[\"default\"])({}, btnProps), /*#__PURE__*/React.createElement(\"span\", null, customIcon));\n  };\n  // ============================== Ref ===============================\n  // Test needs\n  React.useImperativeHandle(ref, function () {\n    return {\n      handlePreview: onInternalPreview,\n      handleDownload: onInternalDownload\n    };\n  });\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  // ============================= Render =============================\n  var prefixCls = getPrefixCls('upload', customizePrefixCls);\n  var listClassNames = (0, _classnames[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-list\"), true), \"\".concat(prefixCls, \"-list-\").concat(listType), true), \"\".concat(prefixCls, \"-list-rtl\"), direction === 'rtl'));\n  // >>> Motion config\n  var motionKeyList = (0, _toConsumableArray2[\"default\"])(items.map(function (file) {\n    return {\n      key: file.uid,\n      file: file\n    };\n  }));\n  var animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n  // const transitionName = list.length === 0 ? '' : `${prefixCls}-${animationDirection}`;\n  var motionConfig = {\n    motionDeadline: 2000,\n    motionName: \"\".concat(prefixCls, \"-\").concat(animationDirection),\n    keys: motionKeyList,\n    motionAppear: motionAppear\n  };\n  if (listType !== 'picture-card') {\n    motionConfig = (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, listItemMotion), motionConfig);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: listClassNames\n  }, /*#__PURE__*/React.createElement(_rcMotion.CSSMotionList, (0, _extends2[\"default\"])({}, motionConfig, {\n    component: false\n  }), function (_ref) {\n    var key = _ref.key,\n      file = _ref.file,\n      motionClassName = _ref.className,\n      motionStyle = _ref.style;\n    return /*#__PURE__*/React.createElement(_ListItem[\"default\"], {\n      key: key,\n      locale: locale,\n      prefixCls: prefixCls,\n      className: motionClassName,\n      style: motionStyle,\n      file: file,\n      items: items,\n      progress: progress,\n      listType: listType,\n      isImgUrl: isImgUrl,\n      showPreviewIcon: showPreviewIcon,\n      showRemoveIcon: showRemoveIcon,\n      showDownloadIcon: showDownloadIcon,\n      removeIcon: removeIcon,\n      previewIcon: previewIcon,\n      downloadIcon: downloadIcon,\n      iconRender: internalIconRender,\n      actionIconRender: actionIconRender,\n      itemRender: itemRender,\n      onPreview: onInternalPreview,\n      onDownload: onInternalDownload,\n      onClose: onInternalClose\n    });\n  }), appendAction && ( /*#__PURE__*/React.createElement(_rcMotion[\"default\"], (0, _extends2[\"default\"])({}, motionConfig, {\n    visible: appendActionVisible,\n    forceRender: true\n  }), function (_ref2) {\n    var motionClassName = _ref2.className,\n      motionStyle = _ref2.style;\n    return (0, _reactNode.cloneElement)(appendAction, function (oriProps) {\n      return {\n        className: (0, _classnames[\"default\"])(oriProps.className, motionClassName),\n        style: (0, _extends2[\"default\"])((0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, motionStyle), {\n          // prevent the element has hover css pseudo-class that may cause animation to end prematurely.\n          pointerEvents: motionClassName ? 'none' : undefined\n        }), oriProps.style)\n      };\n    });\n  })));\n};\nvar UploadList = /*#__PURE__*/React.forwardRef(InternalUploadList);\nif (process.env.NODE_ENV !== 'production') {\n  UploadList.displayName = 'UploadList';\n}\nvar _default = exports[\"default\"] = UploadList;","map":null,"metadata":{},"sourceType":"script"}