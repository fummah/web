{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\nvar _UpOutlined = _interopRequireDefault(require(\"@ant-design/icons/UpOutlined\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _rcInputNumber = _interopRequireDefault(require(\"rc-input-number\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar React = _react;\nvar _configProvider = require(\"../config-provider\");\nvar _DisabledContext = _interopRequireDefault(require(\"../config-provider/DisabledContext\"));\nvar _SizeContext = _interopRequireDefault(require(\"../config-provider/SizeContext\"));\nvar _context = require(\"../form/context\");\nvar _Compact = require(\"../space/Compact\");\nvar _reactNode = require(\"../_util/reactNode\");\nvar _statusUtils = require(\"../_util/statusUtils\");\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar InputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var size = React.useContext(_SizeContext[\"default\"]);\n  var _React$useState = React.useState(false),\n    _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n    focused = _React$useState2[0],\n    setFocus = _React$useState2[1];\n  var inputRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return inputRef.current;\n  });\n  var className = props.className,\n    customizeSize = props.size,\n    customDisabled = props.disabled,\n    customizePrefixCls = props.prefixCls,\n    addonBefore = props.addonBefore,\n    addonAfter = props.addonAfter,\n    prefix = props.prefix,\n    _props$bordered = props.bordered,\n    bordered = _props$bordered === void 0 ? true : _props$bordered,\n    readOnly = props.readOnly,\n    customStatus = props.status,\n    controls = props.controls,\n    others = __rest(props, [\"className\", \"size\", \"disabled\", \"prefixCls\", \"addonBefore\", \"addonAfter\", \"prefix\", \"bordered\", \"readOnly\", \"status\", \"controls\"]);\n  var prefixCls = getPrefixCls('input-number', customizePrefixCls);\n  var _useCompactItemContex = (0, _Compact.useCompactItemContext)(prefixCls, direction),\n    compactSize = _useCompactItemContex.compactSize,\n    compactItemClassnames = _useCompactItemContex.compactItemClassnames;\n  var upIcon = /*#__PURE__*/React.createElement(_UpOutlined[\"default\"], {\n    className: \"\".concat(prefixCls, \"-handler-up-inner\")\n  });\n  var downIcon = /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], {\n    className: \"\".concat(prefixCls, \"-handler-down-inner\")\n  });\n  var controlsTemp = typeof controls === 'boolean' ? controls : undefined;\n  if ((0, _typeof2[\"default\"])(controls) === 'object') {\n    upIcon = typeof controls.upIcon === 'undefined' ? upIcon : ( /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-handler-up-inner\")\n    }, controls.upIcon));\n    downIcon = typeof controls.downIcon === 'undefined' ? downIcon : ( /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-handler-down-inner\")\n    }, controls.downIcon));\n  }\n  var _useContext = (0, _react.useContext)(_context.FormItemInputContext),\n    hasFeedback = _useContext.hasFeedback,\n    contextStatus = _useContext.status,\n    isFormItemInput = _useContext.isFormItemInput,\n    feedbackIcon = _useContext.feedbackIcon;\n  var mergedStatus = (0, _statusUtils.getMergedStatus)(contextStatus, customStatus);\n  var mergeSize = compactSize || customizeSize || size;\n  // ===================== Disabled =====================\n  var disabled = React.useContext(_DisabledContext[\"default\"]);\n  var mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  var inputNumberClass = (0, _classnames[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-lg\"), mergeSize === 'large'), \"\".concat(prefixCls, \"-sm\"), mergeSize === 'small'), \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), \"\".concat(prefixCls, \"-borderless\"), !bordered), \"\".concat(prefixCls, \"-in-form-item\"), isFormItemInput), (0, _statusUtils.getStatusClassNames)(prefixCls, mergedStatus), compactItemClassnames, className);\n  var element = /*#__PURE__*/React.createElement(_rcInputNumber[\"default\"], (0, _extends2[\"default\"])({\n    ref: inputRef,\n    disabled: mergedDisabled,\n    className: inputNumberClass,\n    upHandler: upIcon,\n    downHandler: downIcon,\n    prefixCls: prefixCls,\n    readOnly: readOnly,\n    controls: controlsTemp\n  }, others));\n  if (prefix != null || hasFeedback) {\n    var affixWrapperCls = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-affix-wrapper\"), (0, _statusUtils.getStatusClassNames)(\"\".concat(prefixCls, \"-affix-wrapper\"), mergedStatus, hasFeedback), (0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-affix-wrapper-focused\"), focused), \"\".concat(prefixCls, \"-affix-wrapper-disabled\"), props.disabled), \"\".concat(prefixCls, \"-affix-wrapper-sm\"), size === 'small'), \"\".concat(prefixCls, \"-affix-wrapper-lg\"), size === 'large'), \"\".concat(prefixCls, \"-affix-wrapper-rtl\"), direction === 'rtl'), \"\".concat(prefixCls, \"-affix-wrapper-readonly\"), readOnly), \"\".concat(prefixCls, \"-affix-wrapper-borderless\"), !bordered), \"\".concat(className), !(addonBefore || addonAfter) && className));\n    element = /*#__PURE__*/React.createElement(\"div\", {\n      className: affixWrapperCls,\n      style: props.style,\n      onMouseUp: function onMouseUp() {\n        return inputRef.current.focus();\n      }\n    }, prefix && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-prefix\")\n    }, prefix), (0, _reactNode.cloneElement)(element, {\n      style: null,\n      value: props.value,\n      onFocus: function onFocus(event) {\n        var _a;\n        setFocus(true);\n        (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, event);\n      },\n      onBlur: function onBlur(event) {\n        var _a;\n        setFocus(false);\n        (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, event);\n      }\n    }), hasFeedback && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-suffix\")\n    }, feedbackIcon));\n  }\n  if (addonBefore != null || addonAfter != null) {\n    var wrapperClassName = \"\".concat(prefixCls, \"-group\");\n    var addonClassName = \"\".concat(wrapperClassName, \"-addon\");\n    var addonBeforeNode = addonBefore ? ( /*#__PURE__*/React.createElement(\"div\", {\n      className: addonClassName\n    }, addonBefore)) : null;\n    var addonAfterNode = addonAfter ? /*#__PURE__*/React.createElement(\"div\", {\n      className: addonClassName\n    }, addonAfter) : null;\n    var mergedWrapperClassName = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-wrapper\"), wrapperClassName, (0, _defineProperty2[\"default\"])({}, \"\".concat(wrapperClassName, \"-rtl\"), direction === 'rtl'));\n    var mergedGroupClassName = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-group-wrapper\"), (0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-group-wrapper-sm\"), size === 'small'), \"\".concat(prefixCls, \"-group-wrapper-lg\"), size === 'large'), \"\".concat(prefixCls, \"-group-wrapper-rtl\"), direction === 'rtl'), (0, _statusUtils.getStatusClassNames)(\"\".concat(prefixCls, \"-group-wrapper\"), mergedStatus, hasFeedback), className);\n    element = /*#__PURE__*/React.createElement(\"div\", {\n      className: mergedGroupClassName,\n      style: props.style\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: mergedWrapperClassName\n    }, addonBeforeNode && ( /*#__PURE__*/React.createElement(_Compact.NoCompactStyle, null, /*#__PURE__*/React.createElement(_context.NoFormStyle, {\n      status: true,\n      override: true\n    }, addonBeforeNode))), (0, _reactNode.cloneElement)(element, {\n      style: null,\n      disabled: mergedDisabled\n    }), addonAfterNode && ( /*#__PURE__*/React.createElement(_Compact.NoCompactStyle, null, /*#__PURE__*/React.createElement(_context.NoFormStyle, {\n      status: true,\n      override: true\n    }, addonAfterNode)))));\n  }\n  return element;\n});\nvar _default = exports[\"default\"] = InputNumber;","map":null,"metadata":{},"sourceType":"script"}