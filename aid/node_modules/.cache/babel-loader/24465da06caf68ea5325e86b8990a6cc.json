{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\aid_f\\\\source\\\\src\\\\routes\\\\extensions\\\\calendar\\\\cultures\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport events from \"../events\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst Cultures = () => {\n  _s();\n  const [culture, setCulture] = useState('fr');\n  let cultures = ['en', 'en-GB', 'es', 'fr', 'ar-AE'];\n  let rtl = culture === 'ar-AE';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gx-main-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gx-rbc-calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gx-mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"h3\",\n          children: \"Select a Culture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"ant-input\",\n          style: {\n            width: 200,\n            display: 'inline-block'\n          },\n          defaultValue: 'fr',\n          onChange: e => setCulture(e.target.value),\n          children: cultures.map((c, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: c,\n            children: c\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        rtl: rtl,\n        events: events\n        // culture={this.state.culture}\n        ,\n        defaultDate: new Date(2015, 3, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n};\n_s(Cultures, \"k3NRzAvV6w+klcvCZiPplwegHsM=\");\n_c = Cultures;\nexport default Cultures;\nvar _c;\n$RefreshReg$(_c, \"Cultures\");","map":{"version":3,"names":["React","useState","Calendar","momentLocalizer","moment","events","jsxDEV","_jsxDEV","localizer","Cultures","_s","culture","setCulture","cultures","rtl","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","display","defaultValue","onChange","e","target","value","map","c","idx","defaultDate","Date","_c","$RefreshReg$"],"sources":["C:/wamp64/www/aid_f/source/src/routes/extensions/calendar/cultures/index.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport events from \"../events\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst Cultures = () => {\r\n\r\n  const [culture, setCulture] = useState('fr');\r\n\r\n    let cultures = ['en', 'en-GB', 'es', 'fr', 'ar-AE'];\r\n    let rtl = culture === 'ar-AE';\r\n\r\n    return (\r\n      <div className=\"gx-main-content\">\r\n        <div className=\"gx-rbc-calendar\">\r\n          <div className=\"gx-mb-3\">\r\n            <label className=\"h3\">Select a Culture</label>\r\n            {' '}\r\n            <select\r\n              className='ant-input'\r\n              style={{width: 200, display: 'inline-block'}}\r\n              defaultValue={'fr'}\r\n              onChange={e => setCulture(e.target.value)}\r\n            >\r\n              {\r\n                cultures.map((c, idx) =>\r\n                  <option key={idx} value={c}>{c}</option>\r\n                )\r\n              }\r\n            </select>\r\n          </div>\r\n          <Calendar\r\n            localizer={localizer}\r\n            rtl={rtl}\r\n            events={events}\r\n            // culture={this.state.culture}\r\n            defaultDate={new Date(2015, 3, 1)}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default Cultures;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,QAAQ,EAAEC,eAAe,QAAO,oBAAoB;AAC5D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,SAAS,GAAGL,eAAe,CAACC,MAAM,CAAC;AAEzC,MAAMK,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1C,IAAIY,QAAQ,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC;EACnD,IAAIC,GAAG,GAAGH,OAAO,KAAK,OAAO;EAE7B,oBACEJ,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BT,OAAA;MAAKQ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BT,OAAA;QAAKQ,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBT,OAAA;UAAOQ,SAAS,EAAC,IAAI;UAAAC,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC7C,GAAG,eACJb,OAAA;UACEQ,SAAS,EAAC,WAAW;UACrBM,KAAK,EAAE;YAACC,KAAK,EAAE,GAAG;YAAEC,OAAO,EAAE;UAAc,CAAE;UAC7CC,YAAY,EAAE,IAAK;UACnBC,QAAQ,EAAEC,CAAC,IAAId,UAAU,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UAAAZ,QAAA,EAGxCH,QAAQ,CAACgB,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,kBAClBxB,OAAA;YAAkBqB,KAAK,EAAEE,CAAE;YAAAd,QAAA,EAAEc;UAAC,GAAjBC,GAAG;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuB,CACzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNb,OAAA,CAACL,QAAQ;QACPM,SAAS,EAAEA,SAAU;QACrBM,GAAG,EAAEA,GAAI;QACTT,MAAM,EAAEA;QACR;QAAA;QACA2B,WAAW,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;MAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACV,EAAA,CApCID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}