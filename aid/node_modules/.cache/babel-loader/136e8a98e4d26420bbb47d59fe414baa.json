{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\web\\\\aid\\\\src\\\\routes\\\\components\\\\dataEntry\\\\Form\\\\StoreFormData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Input, Card } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomizedForm = ({\n  onChange,\n  fields\n}) => /*#__PURE__*/_jsxDEV(Form, {\n  name: \"global_state\",\n  layout: \"inline\",\n  fields: fields,\n  onFieldsChange: (changedFields, allFields) => {\n    onChange(allFields);\n  },\n  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n    name: \"username\",\n    label: \"Username\",\n    rules: [{\n      required: true,\n      message: 'Username is required!'\n    }],\n    children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = CustomizedForm;\nconst StoreFormData = () => {\n  _s();\n  const [fields, setFields] = useState([{\n    name: ['username'],\n    value: 'Ant Design'\n  }]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"gx-card\",\n    title: \"Store Form Data\",\n    children: [/*#__PURE__*/_jsxDEV(CustomizedForm, {\n      fields: fields,\n      onChange: newFields => {\n        setFields(newFields);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"language-bash\",\n      children: JSON.stringify(fields, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreFormData, \"EHiTJGiB5PueNgysyeVtZdL4KGA=\");\n_c2 = StoreFormData;\nexport default StoreFormData;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomizedForm\");\n$RefreshReg$(_c2, \"StoreFormData\");","map":{"version":3,"names":["React","useState","Form","Input","Card","jsxDEV","_jsxDEV","CustomizedForm","onChange","fields","name","layout","onFieldsChange","changedFields","allFields","children","Item","label","rules","required","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","StoreFormData","_s","setFields","value","className","title","newFields","JSON","stringify","_c2","$RefreshReg$"],"sources":["C:/wamp64/www/web/aid/src/routes/components/dataEntry/Form/StoreFormData.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Input,Card } from 'antd';\r\n\r\nconst CustomizedForm = ({ onChange, fields }) => (\r\n  <Form\r\n    name=\"global_state\"\r\n    layout=\"inline\"\r\n    fields={fields}\r\n    onFieldsChange={(changedFields, allFields) => {\r\n      onChange(allFields);\r\n    }}\r\n  >\r\n    <Form.Item\r\n      name=\"username\"\r\n      label=\"Username\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Username is required!',\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n  </Form>\r\n);\r\n\r\nconst StoreFormData = () => {\r\n  const [fields, setFields] = useState([\r\n    {\r\n      name: ['username'],\r\n      value: 'Ant Design',\r\n    },\r\n  ]);\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Store Form Data\">\r\n      <CustomizedForm\r\n        fields={fields}\r\n        onChange={newFields => {\r\n          setFields(newFields);\r\n        }}\r\n      />\r\n      <pre className=\"language-bash\">{JSON.stringify(fields, null, 2)}</pre>\r\n    </Card>\r\n  );\r\n};\r\nexport default StoreFormData;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,KAAK,EAACC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,kBAC1CH,OAAA,CAACJ,IAAI;EACHQ,IAAI,EAAC,cAAc;EACnBC,MAAM,EAAC,QAAQ;EACfF,MAAM,EAAEA,MAAO;EACfG,cAAc,EAAEA,CAACC,aAAa,EAAEC,SAAS,KAAK;IAC5CN,QAAQ,CAACM,SAAS,CAAC;EACrB,CAAE;EAAAC,QAAA,eAEFT,OAAA,CAACJ,IAAI,CAACc,IAAI;IACRN,IAAI,EAAC,UAAU;IACfO,KAAK,EAAC,UAAU;IAChBC,KAAK,EAAE,CACL;MACEC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE;IACX,CAAC,CACD;IAAAL,QAAA,eAEFT,OAAA,CAACH,KAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACR,CACP;AAACC,EAAA,GAtBIlB,cAAc;AAwBpB,MAAMmB,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAAClB,MAAM,EAAEmB,SAAS,CAAC,GAAG3B,QAAQ,CAAC,CACnC;IACES,IAAI,EAAE,CAAC,UAAU,CAAC;IAClBmB,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EACF,oBACEvB,OAAA,CAACF,IAAI;IAAC0B,SAAS,EAAC,SAAS;IAACC,KAAK,EAAC,iBAAiB;IAAAhB,QAAA,gBAC/CT,OAAA,CAACC,cAAc;MACbE,MAAM,EAAEA,MAAO;MACfD,QAAQ,EAAEwB,SAAS,IAAI;QACrBJ,SAAS,CAACI,SAAS,CAAC;MACtB;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFlB,OAAA;MAAKwB,SAAS,EAAC,eAAe;MAAAf,QAAA,EAAEkB,IAAI,CAACC,SAAS,CAACzB,MAAM,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEX,CAAC;AAACG,EAAA,CAlBID,aAAa;AAAAS,GAAA,GAAbT,aAAa;AAmBnB,eAAeA,aAAa;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}