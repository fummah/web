{"ast":null,"code":"import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport { auth, facebookAuthProvider, githubAuthProvider, googleAuthProvider, twitterAuthProvider } from \"../../firebase/firebase\";\nimport { SIGNIN_FACEBOOK_USER, SIGNIN_GITHUB_USER, SIGNIN_GOOGLE_USER, SIGNIN_TWITTER_USER, SIGNIN_USER, SIGNOUT_USER, SIGNUP_USER } from \"constants/ActionTypes\";\nimport { showAuthMessage, userSignInSuccess, userSignOutSuccess, userSignUpSuccess } from \"../../appRedux/actions/Auth\";\nimport { userFacebookSignInSuccess, userGithubSignInSuccess, userGoogleSignInSuccess, userTwitterSignInSuccess } from \"../actions/Auth\";\nconst createUserWithEmailPasswordRequest = async (email, password) => await auth.createUserWithEmailAndPassword(email, password).then(authUser => authUser).catch(error => error);\nconst signInUserWithEmailPasswordRequest = async (email, password) => await auth.signInWithEmailAndPassword(email, password).then(authUser => authUser).catch(error => error);\nconst signOutRequest = async () => await auth.signOut().then(authUser => authUser).catch(error => error);\nconst signInUserWithGoogleRequest = async () => await auth.signInWithPopup(googleAuthProvider).then(authUser => authUser).catch(error => error);\nconst signInUserWithFacebookRequest = async () => await auth.signInWithPopup(facebookAuthProvider).then(authUser => authUser).catch(error => error);\nconst signInUserWithGithubRequest = async () => await auth.signInWithPopup(githubAuthProvider).then(authUser => authUser).catch(error => error);\nconst signInUserWithTwitterRequest = async () => await auth.signInWithPopup(twitterAuthProvider).then(authUser => authUser).catch(error => error);\nfunction* createUserWithEmailPassword({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n  try {\n    const signUpUser = yield call(createUserWithEmailPasswordRequest, email, password);\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userSignUpSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\nfunction* signInUserWithGoogle() {\n  try {\n    const signUpUser = yield call(signInUserWithGoogleRequest);\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userGoogleSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\nfunction* signInUserWithFacebook() {\n  try {\n    const signUpUser = yield call(signInUserWithFacebookRequest);\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userFacebookSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\nfunction* signInUserWithGithub() {\n  try {\n    const signUpUser = yield call(signInUserWithGithubRequest);\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userGithubSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\nfunction* signInUserWithTwitter() {\n  try {\n    const signUpUser = yield call(signInUserWithTwitterRequest);\n    if (signUpUser.message) {\n      if (signUpUser.message.length > 100) {\n        yield put(showAuthMessage('Your request has been canceled.'));\n      } else {\n        yield put(showAuthMessage(signUpUser.message));\n      }\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userTwitterSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\nfunction* signInUserWithEmailPassword({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n  try {\n    const signInUser = yield call(signInUserWithEmailPasswordRequest, email, password);\n    if (signInUser.message) {\n      yield put(showAuthMessage(signInUser.message));\n    } else {\n      localStorage.setItem('user_id', signInUser.user.uid);\n      yield put(userSignInSuccess(signInUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\nfunction* signOut() {\n  try {\n    const signOutUser = yield call(signOutRequest);\n    if (signOutUser === undefined) {\n      localStorage.removeItem('user_id');\n      yield put(userSignOutSuccess(signOutUser));\n    } else {\n      yield put(showAuthMessage(signOutUser.message));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\nexport function* createUserAccount() {\n  yield takeEvery(SIGNUP_USER, createUserWithEmailPassword);\n}\nexport function* signInWithGoogle() {\n  yield takeEvery(SIGNIN_GOOGLE_USER, signInUserWithGoogle);\n}\nexport function* signInWithFacebook() {\n  yield takeEvery(SIGNIN_FACEBOOK_USER, signInUserWithFacebook);\n}\nexport function* signInWithTwitter() {\n  yield takeEvery(SIGNIN_TWITTER_USER, signInUserWithTwitter);\n}\nexport function* signInWithGithub() {\n  yield takeEvery(SIGNIN_GITHUB_USER, signInUserWithGithub);\n}\nexport function* signInUser() {\n  yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\n}\nexport function* signOutUser() {\n  yield takeEvery(SIGNOUT_USER, signOut);\n}\nexport default function* rootSaga() {\n  yield all([fork(signInUser), fork(createUserAccount), fork(signInWithGoogle), fork(signInWithFacebook), fork(signInWithTwitter), fork(signInWithGithub), fork(signOutUser)]);\n}","map":{"version":3,"names":["all","call","fork","put","takeEvery","auth","facebookAuthProvider","githubAuthProvider","googleAuthProvider","twitterAuthProvider","SIGNIN_FACEBOOK_USER","SIGNIN_GITHUB_USER","SIGNIN_GOOGLE_USER","SIGNIN_TWITTER_USER","SIGNIN_USER","SIGNOUT_USER","SIGNUP_USER","showAuthMessage","userSignInSuccess","userSignOutSuccess","userSignUpSuccess","userFacebookSignInSuccess","userGithubSignInSuccess","userGoogleSignInSuccess","userTwitterSignInSuccess","createUserWithEmailPasswordRequest","email","password","createUserWithEmailAndPassword","then","authUser","catch","error","signInUserWithEmailPasswordRequest","signInWithEmailAndPassword","signOutRequest","signOut","signInUserWithGoogleRequest","signInWithPopup","signInUserWithFacebookRequest","signInUserWithGithubRequest","signInUserWithTwitterRequest","createUserWithEmailPassword","payload","signUpUser","message","localStorage","setItem","user","uid","signInUserWithGoogle","signInUserWithFacebook","signInUserWithGithub","signInUserWithTwitter","length","signInUserWithEmailPassword","signInUser","signOutUser","undefined","removeItem","createUserAccount","signInWithGoogle","signInWithFacebook","signInWithTwitter","signInWithGithub","rootSaga"],"sources":["C:/wamp64/www/aid_f/source/src/appRedux/sagas/Auth.js"],"sourcesContent":["import {all, call, fork, put, takeEvery} from \"redux-saga/effects\";\r\nimport {\r\n  auth,\r\n  facebookAuthProvider,\r\n  githubAuthProvider,\r\n  googleAuthProvider,\r\n  twitterAuthProvider\r\n} from \"../../firebase/firebase\";\r\nimport {\r\n  SIGNIN_FACEBOOK_USER,\r\n  SIGNIN_GITHUB_USER,\r\n  SIGNIN_GOOGLE_USER,\r\n  SIGNIN_TWITTER_USER,\r\n  SIGNIN_USER,\r\n  SIGNOUT_USER,\r\n  SIGNUP_USER\r\n} from \"constants/ActionTypes\";\r\nimport {showAuthMessage, userSignInSuccess, userSignOutSuccess, userSignUpSuccess} from \"../../appRedux/actions/Auth\";\r\nimport {\r\n  userFacebookSignInSuccess,\r\n  userGithubSignInSuccess,\r\n  userGoogleSignInSuccess,\r\n  userTwitterSignInSuccess\r\n} from \"../actions/Auth\";\r\n\r\nconst createUserWithEmailPasswordRequest = async (email, password) =>\r\n  await  auth.createUserWithEmailAndPassword(email, password)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nconst signInUserWithEmailPasswordRequest = async (email, password) =>\r\n  await  auth.signInWithEmailAndPassword(email, password)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nconst signOutRequest = async () =>\r\n  await  auth.signOut()\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\n\r\nconst signInUserWithGoogleRequest = async () =>\r\n  await  auth.signInWithPopup(googleAuthProvider)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nconst signInUserWithFacebookRequest = async () =>\r\n  await  auth.signInWithPopup(facebookAuthProvider)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nconst signInUserWithGithubRequest = async () =>\r\n  await  auth.signInWithPopup(githubAuthProvider)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nconst signInUserWithTwitterRequest = async () =>\r\n  await  auth.signInWithPopup(twitterAuthProvider)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nfunction* createUserWithEmailPassword({payload}) {\r\n  const {email, password} = payload;\r\n  try {\r\n    const signUpUser = yield call(createUserWithEmailPasswordRequest, email, password);\r\n    if (signUpUser.message) {\r\n      yield put(showAuthMessage(signUpUser.message));\r\n    } else {\r\n      localStorage.setItem('user_id', signUpUser.user.uid);\r\n      yield put(userSignUpSuccess(signUpUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\nfunction* signInUserWithGoogle() {\r\n  try {\r\n    const signUpUser = yield call(signInUserWithGoogleRequest);\r\n    if (signUpUser.message) {\r\n      yield put(showAuthMessage(signUpUser.message));\r\n    } else {\r\n      localStorage.setItem('user_id', signUpUser.user.uid);\r\n      yield put(userGoogleSignInSuccess(signUpUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\n\r\nfunction* signInUserWithFacebook() {\r\n  try {\r\n    const signUpUser = yield call(signInUserWithFacebookRequest);\r\n    if (signUpUser.message) {\r\n      yield put(showAuthMessage(signUpUser.message));\r\n    } else {\r\n      localStorage.setItem('user_id', signUpUser.user.uid);\r\n      yield put(userFacebookSignInSuccess(signUpUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\n\r\nfunction* signInUserWithGithub() {\r\n  try {\r\n    const signUpUser = yield call(signInUserWithGithubRequest);\r\n    if (signUpUser.message) {\r\n      yield put(showAuthMessage(signUpUser.message));\r\n    } else {\r\n      localStorage.setItem('user_id', signUpUser.user.uid);\r\n      yield put(userGithubSignInSuccess(signUpUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\n\r\nfunction* signInUserWithTwitter() {\r\n  try {\r\n    const signUpUser = yield call(signInUserWithTwitterRequest);\r\n    if (signUpUser.message) {\r\n      if (signUpUser.message.length > 100) {\r\n        yield put(showAuthMessage('Your request has been canceled.'));\r\n      } else {\r\n        yield put(showAuthMessage(signUpUser.message));\r\n      }\r\n    } else {\r\n      localStorage.setItem('user_id', signUpUser.user.uid);\r\n      yield put(userTwitterSignInSuccess(signUpUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\nfunction* signInUserWithEmailPassword({payload}) {\r\n  const {email, password} = payload;\r\n  try {\r\n    const signInUser = yield call(signInUserWithEmailPasswordRequest, email, password);\r\n    if (signInUser.message) {\r\n      yield put(showAuthMessage(signInUser.message));\r\n    } else {\r\n      localStorage.setItem('user_id', signInUser.user.uid);\r\n      yield put(userSignInSuccess(signInUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\nfunction* signOut() {\r\n  try {\r\n    const signOutUser = yield call(signOutRequest);\r\n    if (signOutUser === undefined) {\r\n      localStorage.removeItem('user_id');\r\n      yield put(userSignOutSuccess(signOutUser));\r\n    } else {\r\n      yield put(showAuthMessage(signOutUser.message));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\nexport function* createUserAccount() {\r\n  yield takeEvery(SIGNUP_USER, createUserWithEmailPassword);\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  yield takeEvery(SIGNIN_GOOGLE_USER, signInUserWithGoogle);\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_FACEBOOK_USER, signInUserWithFacebook);\r\n}\r\n\r\nexport function* signInWithTwitter() {\r\n  yield takeEvery(SIGNIN_TWITTER_USER, signInUserWithTwitter);\r\n}\r\n\r\nexport function* signInWithGithub() {\r\n  yield takeEvery(SIGNIN_GITHUB_USER, signInUserWithGithub);\r\n}\r\n\r\nexport function* signInUser() {\r\n  yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\r\n}\r\n\r\nexport function* signOutUser() {\r\n  yield takeEvery(SIGNOUT_USER, signOut);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(signInUser),\r\n    fork(createUserAccount),\r\n    fork(signInWithGoogle),\r\n    fork(signInWithFacebook),\r\n    fork(signInWithTwitter),\r\n    fork(signInWithGithub),\r\n    fork(signOutUser)]);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}