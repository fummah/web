{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\aid_f\\\\source\\\\src\\\\components\\\\Metrics\\\\IconWithTextCard.js\";\nimport React from \"react\";\nimport Widget from \"components/Widget/index\";\nimport { connect } from \"react-redux\";\nimport { THEME_TYPE_DARK } from \"../../constants/ThemeSetting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconWithTextCard = props => {\n  const {\n    icon,\n    title,\n    subTitle\n  } = props;\n  let {\n    iconColor\n  } = props;\n  if (props.themeType === THEME_TYPE_DARK) {\n    iconColor = \"white\";\n  }\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gx-media gx-align-items-center gx-flex-nowrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gx-mr-lg-4 gx-mr-3\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `icon icon-${icon} gx-fs-xlxl gx-text-${iconColor} gx-d-flex`,\n          style: {\n            fontSize: 45\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gx-media-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"gx-fs-xxxl gx-font-weight-medium gx-mb-1\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"gx-text-grey gx-mb-0\",\n          children: subTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = IconWithTextCard;\nconst mapStateToProps = ({\n  settings\n}) => {\n  const {\n    themeType\n  } = settings;\n  return {\n    themeType\n  };\n};\nexport default connect(mapStateToProps, null)(IconWithTextCard);\nvar _c;\n$RefreshReg$(_c, \"IconWithTextCard\");","map":{"version":3,"names":["React","Widget","connect","THEME_TYPE_DARK","jsxDEV","_jsxDEV","IconWithTextCard","props","icon","title","subTitle","iconColor","themeType","children","className","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","settings","$RefreshReg$"],"sources":["C:/wamp64/www/aid_f/source/src/components/Metrics/IconWithTextCard.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Widget from \"components/Widget/index\";\r\nimport {connect} from \"react-redux\";\r\nimport {THEME_TYPE_DARK} from \"../../constants/ThemeSetting\";\r\n\r\nconst IconWithTextCard = (props) => {\r\n  const {icon, title, subTitle} = props;\r\n  let {iconColor} = props;\r\n  if (props.themeType === THEME_TYPE_DARK) {\r\n    iconColor = \"white\";\r\n  }\r\n\r\n  return (\r\n    <Widget>\r\n      <div className=\"gx-media gx-align-items-center gx-flex-nowrap\">\r\n        <div className=\"gx-mr-lg-4 gx-mr-3\">\r\n          <i className={`icon icon-${icon} gx-fs-xlxl gx-text-${iconColor} gx-d-flex`}\r\n             style={{fontSize: 45}}/>\r\n        </div>\r\n        <div className=\"gx-media-body\">\r\n          <h1 className=\"gx-fs-xxxl gx-font-weight-medium gx-mb-1\">{title}</h1>\r\n          <p className=\"gx-text-grey gx-mb-0\">{subTitle}</p>\r\n        </div>\r\n      </div>\r\n    </Widget>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {themeType} = settings;\r\n  return {themeType}\r\n};\r\nexport default connect(mapStateToProps, null)(IconWithTextCard);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAAQC,OAAO,QAAO,aAAa;AACnC,SAAQC,eAAe,QAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAClC,MAAM;IAACC,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGH,KAAK;EACrC,IAAI;IAACI;EAAS,CAAC,GAAGJ,KAAK;EACvB,IAAIA,KAAK,CAACK,SAAS,KAAKT,eAAe,EAAE;IACvCQ,SAAS,GAAG,OAAO;EACrB;EAEA,oBACEN,OAAA,CAACJ,MAAM;IAAAY,QAAA,eACLR,OAAA;MAAKS,SAAS,EAAC,+CAA+C;MAAAD,QAAA,gBAC5DR,OAAA;QAAKS,SAAS,EAAC,oBAAoB;QAAAD,QAAA,eACjCR,OAAA;UAAGS,SAAS,EAAE,aAAaN,IAAI,uBAAuBG,SAAS,YAAa;UACzEI,KAAK,EAAE;YAACC,QAAQ,EAAE;UAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACNf,OAAA;QAAKS,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC5BR,OAAA;UAAIS,SAAS,EAAC,0CAA0C;UAAAD,QAAA,EAAEJ;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrEf,OAAA;UAAGS,SAAS,EAAC,sBAAsB;UAAAD,QAAA,EAAEH;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACC,EAAA,GArBIf,gBAAgB;AAuBtB,MAAMgB,eAAe,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EACtC,MAAM;IAACX;EAAS,CAAC,GAAGW,QAAQ;EAC5B,OAAO;IAACX;EAAS,CAAC;AACpB,CAAC;AACD,eAAeV,OAAO,CAACoB,eAAe,EAAE,IAAI,CAAC,CAAChB,gBAAgB,CAAC;AAAC,IAAAe,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}