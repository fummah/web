{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\web\\\\aid\\\\src\\\\routes\\\\extensions\\\\charts\\\\recharts\\\\area\\\\Components\\\\PercentAreaChart.js\";\nimport React from \"react\";\nimport { Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  month: '2015.01',\n  a: 4000,\n  b: 2400,\n  c: 2400\n}, {\n  month: '2015.02',\n  a: 3000,\n  b: 1398,\n  c: 2210\n}, {\n  month: '2015.03',\n  a: 2000,\n  b: 9800,\n  c: 2290\n}, {\n  month: '2015.04',\n  a: 2780,\n  b: 3908,\n  c: 2000\n}, {\n  month: '2015.05',\n  a: 1890,\n  b: 4800,\n  c: 2181\n}, {\n  month: '2015.06',\n  a: 2390,\n  b: 3800,\n  c: 2500\n}, {\n  month: '2015.07',\n  a: 3490,\n  b: 4300,\n  c: 2100\n}];\nconst getPercent = (value, total) => {\n  const ratio = total > 0 ? value / total : 0;\n  return toPercent(ratio, 2);\n};\nconst toPercent = (decimal, fixed = 0) => {\n  return `${(decimal * 100).toFixed(fixed)}%`;\n};\nconst renderTooltipContent = o => {\n  const {\n    payload,\n    label\n  } = o;\n  const total = payload.reduce((result, entry) => result + entry.value, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customized-tooltip-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"total\",\n      children: `${label} (Total: ${total})`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: payload.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          color: entry.color\n        },\n        children: `${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`\n      }, `item-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\nconst PercentAreaChart = () => /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n  width: \"100%\",\n  height: 200,\n  children: /*#__PURE__*/_jsxDEV(AreaChart, {\n    data: data,\n    stackOffset: \"expand\",\n    margin: {\n      top: 10,\n      right: 0,\n      left: -15,\n      bottom: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      tickFormatter: toPercent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      content: renderTooltipContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Area, {\n      type: \"monotone\",\n      dataKey: \"a\",\n      stackId: \"1\",\n      fillOpacity: 1,\n      stroke: \"#003366\",\n      fill: \"#003366\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Area, {\n      type: \"monotone\",\n      dataKey: \"b\",\n      stackId: \"1\",\n      fillOpacity: 1,\n      stroke: \"#59AA2B\",\n      fill: \"#59AA2B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Area, {\n      type: \"monotone\",\n      dataKey: \"c\",\n      stackId: \"1\",\n      fillOpacity: 1,\n      stroke: \"#FE9E15\",\n      fill: \"#FE9E15\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this);\n_c = PercentAreaChart;\nexport default PercentAreaChart;\nvar _c;\n$RefreshReg$(_c, \"PercentAreaChart\");","map":{"version":3,"names":["React","Area","AreaChart","CartesianGrid","ResponsiveContainer","Tooltip","XAxis","YAxis","jsxDEV","_jsxDEV","data","month","a","b","c","getPercent","value","total","ratio","toPercent","decimal","fixed","toFixed","renderTooltipContent","o","payload","label","reduce","result","entry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","color","name","PercentAreaChart","width","height","stackOffset","margin","top","right","left","bottom","dataKey","tickFormatter","strokeDasharray","content","type","stackId","fillOpacity","stroke","fill","_c","$RefreshReg$"],"sources":["C:/wamp64/www/web/aid/src/routes/extensions/charts/recharts/area/Components/PercentAreaChart.js"],"sourcesContent":["import React from \"react\";\r\nimport {Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\n\r\nconst data = [\r\n  {month: '2015.01', a: 4000, b: 2400, c: 2400},\r\n  {month: '2015.02', a: 3000, b: 1398, c: 2210},\r\n  {month: '2015.03', a: 2000, b: 9800, c: 2290},\r\n  {month: '2015.04', a: 2780, b: 3908, c: 2000},\r\n  {month: '2015.05', a: 1890, b: 4800, c: 2181},\r\n  {month: '2015.06', a: 2390, b: 3800, c: 2500},\r\n  {month: '2015.07', a: 3490, b: 4300, c: 2100},\r\n];\r\n\r\nconst getPercent = (value, total) => {\r\n  const ratio = total > 0 ? value / total : 0;\r\n\r\n  return toPercent(ratio, 2);\r\n};\r\n\r\nconst toPercent = (decimal, fixed = 0) => {\r\n  return `${(decimal * 100).toFixed(fixed)}%`;\r\n};\r\nconst renderTooltipContent = (o) => {\r\n  const {payload, label} = o;\r\n  const total = payload.reduce((result, entry) => (result + entry.value), 0);\r\n\r\n  return (\r\n    <div className=\"customized-tooltip-content\">\r\n      <p className=\"total\">{`${label} (Total: ${total})`}</p>\r\n      <ul className=\"list\">\r\n        {\r\n          payload.map((entry, index) => (\r\n            <li key={`item-${index}`} style={{color: entry.color}}>\r\n              {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nconst PercentAreaChart = () => (\r\n  <ResponsiveContainer width=\"100%\" height={200}>\r\n    <AreaChart data={data} stackOffset=\"expand\"\r\n               margin={{top: 10, right: 0, left: -15, bottom: 0}}>\r\n      <XAxis dataKey=\"month\"/>\r\n      <YAxis tickFormatter={toPercent}/>\r\n      <CartesianGrid strokeDasharray=\"3 3\"/>\r\n      <Tooltip content={renderTooltipContent}/>\r\n      <Area type='monotone' dataKey='a' stackId=\"1\" fillOpacity={1} stroke='#003366' fill='#003366'/>\r\n      <Area type='monotone' dataKey='b' stackId=\"1\" fillOpacity={1} stroke='#59AA2B' fill='#59AA2B'/>\r\n      <Area type='monotone' dataKey='c' stackId=\"1\" fillOpacity={1} stroke='#FE9E15' fill='#FE9E15'/>\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default PercentAreaChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}