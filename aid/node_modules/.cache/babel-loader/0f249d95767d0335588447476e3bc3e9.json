{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\aid_f\\\\source\\\\src\\\\routes\\\\extensions\\\\charts\\\\amchart\\\\pie\\\\Components\\\\PieChartWithBrokenDownSlices.js\";\nimport React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChartWithBrokenDownSlices = () => {\n  let selected;\n  const types = [{\n    type: \"Fossil Energy\",\n    percent: 70,\n    color: \"#ff9e01\",\n    subs: [{\n      type: \"Oil\",\n      percent: 15\n    }, {\n      type: \"Coal\",\n      percent: 35\n    }, {\n      type: \"Nuclear\",\n      percent: 20\n    }]\n  }, {\n    type: \"Green Energy\",\n    percent: 30,\n    color: \"#b0de09\",\n    subs: [{\n      type: \"Hydro\",\n      percent: 15\n    }, {\n      type: \"Wind\",\n      percent: 10\n    }, {\n      type: \"Other\",\n      percent: 5\n    }]\n  }];\n  function generateChartData() {\n    let chartData = [];\n    for (let i = 0; i < types.length; i++) {\n      if (i === selected) {\n        for (let x = 0; x < types[i].subs.length; x++) {\n          chartData.push({\n            type: types[i].subs[x].type,\n            percent: types[i].subs[x].percent,\n            color: types[i].color,\n            pulled: true\n          });\n        }\n      } else {\n        chartData.push({\n          type: types[i].type,\n          percent: types[i].percent,\n          color: types[i].color,\n          id: i\n        });\n      }\n    }\n    return chartData;\n  }\n  const config = {\n    \"type\": \"pie\",\n    \"theme\": \"light\",\n    \"dataProvider\": generateChartData(),\n    \"labelText\": \"[[title]]: [[value]]\",\n    \"balloonText\": \"[[title]]: [[value]]\",\n    \"titleField\": \"type\",\n    \"valueField\": \"percent\",\n    \"outlineColor\": \"#FFFFFF\",\n    \"outlineAlpha\": 0.8,\n    \"outlineThickness\": 2,\n    \"colorField\": \"color\",\n    \"pulledField\": \"pulled\",\n    \"titles\": [{\n      \"text\": \"Click a slice to see the details\"\n    }],\n    \"listeners\": [{\n      \"event\": \"clickSlice\",\n      \"method\": function (event) {\n        var chart = event.chart;\n        if (event.dataItem.dataContext.id !== undefined) {\n          selected = event.dataItem.dataContext.id;\n        } else {\n          selected = undefined;\n        }\n        chart.dataProvider = generateChartData();\n        chart.validateData();\n      }\n    }],\n    \"export\": {\n      \"enabled\": true\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AmCharts.React, {\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      },\n      options: config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_c = PieChartWithBrokenDownSlices;\nexport default PieChartWithBrokenDownSlices;\nvar _c;\n$RefreshReg$(_c, \"PieChartWithBrokenDownSlices\");","map":{"version":3,"names":["React","AmCharts","jsxDEV","_jsxDEV","PieChartWithBrokenDownSlices","selected","types","type","percent","color","subs","generateChartData","chartData","i","length","x","push","pulled","id","config","method","event","chart","dataItem","dataContext","undefined","dataProvider","validateData","className","children","style","width","height","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/wamp64/www/aid_f/source/src/routes/extensions/charts/amchart/pie/Components/PieChartWithBrokenDownSlices.js"],"sourcesContent":["import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst PieChartWithBrokenDownSlices = () => {\r\n\r\n  let selected;\r\n\r\n  const types = [{\r\n    type: \"Fossil Energy\",\r\n    percent: 70,\r\n    color: \"#ff9e01\",\r\n    subs: [{\r\n      type: \"Oil\",\r\n      percent: 15\r\n    }, {\r\n      type: \"Coal\",\r\n      percent: 35\r\n    }, {\r\n      type: \"Nuclear\",\r\n      percent: 20\r\n    }]\r\n  }, {\r\n    type: \"Green Energy\",\r\n    percent: 30,\r\n    color: \"#b0de09\",\r\n    subs: [{\r\n      type: \"Hydro\",\r\n      percent: 15\r\n    }, {\r\n      type: \"Wind\",\r\n      percent: 10\r\n    }, {\r\n      type: \"Other\",\r\n      percent: 5\r\n    }]\r\n  }];\r\n\r\n  function generateChartData() {\r\n    let chartData = [];\r\n    for (let i = 0; i < types.length; i++) {\r\n      if (i === selected) {\r\n        for (let x = 0; x < types[i].subs.length; x++) {\r\n          chartData.push({\r\n            type: types[i].subs[x].type,\r\n            percent: types[i].subs[x].percent,\r\n            color: types[i].color,\r\n            pulled: true\r\n          });\r\n        }\r\n      } else {\r\n        chartData.push({\r\n          type: types[i].type,\r\n          percent: types[i].percent,\r\n          color: types[i].color,\r\n          id: i\r\n        });\r\n      }\r\n    }\r\n    return chartData;\r\n  }\r\n\r\n  const config = {\r\n    \"type\": \"pie\",\r\n    \"theme\": \"light\",\r\n\r\n    \"dataProvider\": generateChartData(),\r\n    \"labelText\": \"[[title]]: [[value]]\",\r\n    \"balloonText\": \"[[title]]: [[value]]\",\r\n    \"titleField\": \"type\",\r\n    \"valueField\": \"percent\",\r\n    \"outlineColor\": \"#FFFFFF\",\r\n    \"outlineAlpha\": 0.8,\r\n    \"outlineThickness\": 2,\r\n    \"colorField\": \"color\",\r\n    \"pulledField\": \"pulled\",\r\n    \"titles\": [{\r\n      \"text\": \"Click a slice to see the details\"\r\n    }],\r\n    \"listeners\": [{\r\n      \"event\": \"clickSlice\",\r\n      \"method\": function (event) {\r\n        var chart = event.chart;\r\n        if (event.dataItem.dataContext.id !== undefined) {\r\n          selected = event.dataItem.dataContext.id;\r\n        } else {\r\n          selected = undefined;\r\n        }\r\n        chart.dataProvider = generateChartData();\r\n        chart.validateData();\r\n      }\r\n    }],\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PieChartWithBrokenDownSlices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}