{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = confirm;\nexports.modalGlobalConfig = modalGlobalConfig;\nexports.withConfirm = withConfirm;\nexports.withError = withError;\nexports.withInfo = withInfo;\nexports.withSuccess = withSuccess;\nexports.withWarn = withWarn;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _CheckCircleOutlined = _interopRequireDefault(require(\"@ant-design/icons/CheckCircleOutlined\"));\nvar _CloseCircleOutlined = _interopRequireDefault(require(\"@ant-design/icons/CloseCircleOutlined\"));\nvar _ExclamationCircleOutlined = _interopRequireDefault(require(\"@ant-design/icons/ExclamationCircleOutlined\"));\nvar _InfoCircleOutlined = _interopRequireDefault(require(\"@ant-design/icons/InfoCircleOutlined\"));\nvar _render = require(\"rc-util/lib/React/render\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _configProvider = require(\"../config-provider\");\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\nvar _ConfirmDialog = _interopRequireDefault(require(\"./ConfirmDialog\"));\nvar _destroyFns = _interopRequireDefault(require(\"./destroyFns\"));\nvar _locale = require(\"./locale\");\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar defaultRootPrefixCls = '';\nfunction getRootPrefixCls() {\n  return defaultRootPrefixCls;\n}\nfunction confirm(config) {\n  var container = document.createDocumentFragment();\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  var currentConfig = (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, config), {\n    close: close,\n    open: true\n  });\n  var timeoutId;\n  function destroy() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var triggerCancel = args.some(function (param) {\n      return param && param.triggerCancel;\n    });\n    if (config.onCancel && triggerCancel) {\n      config.onCancel.apply(config, [function () {}].concat((0, _toConsumableArray2[\"default\"])(args.slice(1))));\n    }\n    for (var i = 0; i < _destroyFns[\"default\"].length; i++) {\n      var fn = _destroyFns[\"default\"][i];\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      if (fn === close) {\n        _destroyFns[\"default\"].splice(i, 1);\n        break;\n      }\n    }\n    (0, _render.unmount)(container);\n  }\n  function render(_a) {\n    var okText = _a.okText,\n      cancelText = _a.cancelText,\n      customizePrefixCls = _a.prefixCls,\n      props = __rest(_a, [\"okText\", \"cancelText\", \"prefixCls\"]);\n    clearTimeout(timeoutId);\n    /**\n     * https://github.com/ant-design/ant-design/issues/23623\n     *\n     * Sync render blocks React event. Let's make this async.\n     */\n    timeoutId = setTimeout(function () {\n      var runtimeLocale = (0, _locale.getConfirmLocale)();\n      var _globalConfig = (0, _configProvider.globalConfig)(),\n        getPrefixCls = _globalConfig.getPrefixCls,\n        getIconPrefixCls = _globalConfig.getIconPrefixCls;\n      // because Modal.config \b set rootPrefixCls, which is different from other components\n      var rootPrefixCls = getPrefixCls(undefined, getRootPrefixCls());\n      var prefixCls = customizePrefixCls || \"\".concat(rootPrefixCls, \"-modal\");\n      var iconPrefixCls = getIconPrefixCls();\n      (0, _render.render)( /*#__PURE__*/React.createElement(_ConfirmDialog[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        prefixCls: prefixCls,\n        rootPrefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        okText: okText || (props.okCancel ? runtimeLocale.okText : runtimeLocale.justOkText),\n        cancelText: cancelText || runtimeLocale.cancelText\n      })), container);\n    });\n  }\n  function close() {\n    var _this = this;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    currentConfig = (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, currentConfig), {\n      open: false,\n      afterClose: function afterClose() {\n        if (typeof config.afterClose === 'function') {\n          config.afterClose();\n        }\n        destroy.apply(_this, args);\n      }\n    });\n    // Legacy support\n    if (currentConfig.visible) {\n      delete currentConfig.visible;\n    }\n    render(currentConfig);\n  }\n  function update(configUpdate) {\n    if (typeof configUpdate === 'function') {\n      currentConfig = configUpdate(currentConfig);\n    } else {\n      currentConfig = (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, currentConfig), configUpdate);\n    }\n    render(currentConfig);\n  }\n  render(currentConfig);\n  _destroyFns[\"default\"].push(close);\n  return {\n    destroy: close,\n    update: update\n  };\n}\nfunction withWarn(props) {\n  return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({\n    icon: /*#__PURE__*/React.createElement(_ExclamationCircleOutlined[\"default\"], null),\n    okCancel: false\n  }, props), {\n    type: 'warning'\n  });\n}\nfunction withInfo(props) {\n  return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({\n    icon: /*#__PURE__*/React.createElement(_InfoCircleOutlined[\"default\"], null),\n    okCancel: false\n  }, props), {\n    type: 'info'\n  });\n}\nfunction withSuccess(props) {\n  return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({\n    icon: /*#__PURE__*/React.createElement(_CheckCircleOutlined[\"default\"], null),\n    okCancel: false\n  }, props), {\n    type: 'success'\n  });\n}\nfunction withError(props) {\n  return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({\n    icon: /*#__PURE__*/React.createElement(_CloseCircleOutlined[\"default\"], null),\n    okCancel: false\n  }, props), {\n    type: 'error'\n  });\n}\nfunction withConfirm(props) {\n  return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({\n    icon: /*#__PURE__*/React.createElement(_ExclamationCircleOutlined[\"default\"], null),\n    okCancel: true\n  }, props), {\n    type: 'confirm'\n  });\n}\nfunction modalGlobalConfig(_ref) {\n  var rootPrefixCls = _ref.rootPrefixCls;\n  process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(false, 'Modal', 'Modal.config is deprecated. Please use ConfigProvider.config instead.') : void 0;\n  defaultRootPrefixCls = rootPrefixCls;\n}","map":null,"metadata":{},"sourceType":"script"}