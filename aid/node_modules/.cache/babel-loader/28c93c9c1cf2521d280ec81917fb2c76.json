{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\aid_f\\\\source\\\\src\\\\routes\\\\extensions\\\\charts\\\\amchart\\\\line\\\\Components\\\\MultipleValueAxes.js\";\nimport React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultipleValueAxes = () => {\n  const chartData = generateChartData();\n  const config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"legend\": {\n      \"useGraphSettings\": true\n    },\n    \"dataProvider\": chartData,\n    \"synchronizeGrid\": true,\n    \"valueAxes\": [{\n      \"id\": \"v1\",\n      \"axisColor\": \"#FF6600\",\n      \"axisThickness\": 2,\n      \"axisAlpha\": 1,\n      \"position\": \"left\"\n    }, {\n      \"id\": \"v2\",\n      \"axisColor\": \"#FCD202\",\n      \"axisThickness\": 2,\n      \"axisAlpha\": 1,\n      \"position\": \"right\"\n    }, {\n      \"id\": \"v3\",\n      \"axisColor\": \"#B0DE09\",\n      \"axisThickness\": 2,\n      \"gridAlpha\": 0,\n      \"offset\": 50,\n      \"axisAlpha\": 1,\n      \"position\": \"left\"\n    }],\n    \"graphs\": [{\n      \"valueAxis\": \"v1\",\n      \"lineColor\": \"#FF6600\",\n      \"bullet\": \"round\",\n      \"bulletBorderThickness\": 1,\n      \"hideBulletsCount\": 30,\n      \"title\": \"red line\",\n      \"valueField\": \"visits\",\n      \"fillAlphas\": 0\n    }, {\n      \"valueAxis\": \"v2\",\n      \"lineColor\": \"#FCD202\",\n      \"bullet\": \"square\",\n      \"bulletBorderThickness\": 1,\n      \"hideBulletsCount\": 30,\n      \"title\": \"yellow line\",\n      \"valueField\": \"hits\",\n      \"fillAlphas\": 0\n    }, {\n      \"valueAxis\": \"v3\",\n      \"lineColor\": \"#B0DE09\",\n      \"bullet\": \"triangleUp\",\n      \"bulletBorderThickness\": 1,\n      \"hideBulletsCount\": 30,\n      \"title\": \"green line\",\n      \"valueField\": \"views\",\n      \"fillAlphas\": 0\n    }],\n    \"chartScrollbar\": {},\n    \"chartCursor\": {\n      \"cursorPosition\": \"mouse\"\n    },\n    \"categoryField\": \"date\",\n    \"categoryAxis\": {\n      \"parseDates\": true,\n      \"axisColor\": \"#DADADA\",\n      \"minorGridEnabled\": true\n    },\n    \"export\": {\n      \"enabled\": true,\n      \"position\": \"bottom-right\"\n    }\n  };\n\n  // generate some random data, quite different range\n  function generateChartData() {\n    let chartData = [];\n    const firstDate = new Date();\n    firstDate.setDate(firstDate.getDate() - 100);\n    let visits = 1600;\n    let hits = 2900;\n    let views = 8700;\n    for (let i = 0; i < 100; i++) {\n      // we create date objects here. In your data, you can have date strings\n      // and then set format of your dates using chart.dataDateFormat property,\n      // however when possible, use date objects, as this will speed up chart rendering.\n      const newDate = new Date(firstDate);\n      newDate.setDate(newDate.getDate() + i);\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n      hits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n      views += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n      chartData.push({\n        date: newDate,\n        visits: visits,\n        hits: hits,\n        views: views\n      });\n    }\n    return chartData;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AmCharts.React, {\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      },\n      options: config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_c = MultipleValueAxes;\nexport default MultipleValueAxes;\nvar _c;\n$RefreshReg$(_c, \"MultipleValueAxes\");","map":{"version":3,"names":["React","AmCharts","jsxDEV","_jsxDEV","MultipleValueAxes","chartData","generateChartData","config","firstDate","Date","setDate","getDate","visits","hits","views","i","newDate","Math","round","random","push","date","className","children","style","width","height","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/wamp64/www/aid_f/source/src/routes/extensions/charts/amchart/line/Components/MultipleValueAxes.js"],"sourcesContent":["import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst MultipleValueAxes = () => {\r\n\r\n  const chartData = generateChartData();\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"legend\": {\r\n      \"useGraphSettings\": true\r\n    },\r\n    \"dataProvider\": chartData,\r\n    \"synchronizeGrid\": true,\r\n    \"valueAxes\": [{\r\n      \"id\": \"v1\",\r\n      \"axisColor\": \"#FF6600\",\r\n      \"axisThickness\": 2,\r\n      \"axisAlpha\": 1,\r\n      \"position\": \"left\"\r\n    }, {\r\n      \"id\": \"v2\",\r\n      \"axisColor\": \"#FCD202\",\r\n      \"axisThickness\": 2,\r\n      \"axisAlpha\": 1,\r\n      \"position\": \"right\"\r\n    }, {\r\n      \"id\": \"v3\",\r\n      \"axisColor\": \"#B0DE09\",\r\n      \"axisThickness\": 2,\r\n      \"gridAlpha\": 0,\r\n      \"offset\": 50,\r\n      \"axisAlpha\": 1,\r\n      \"position\": \"left\"\r\n    }],\r\n    \"graphs\": [{\r\n      \"valueAxis\": \"v1\",\r\n      \"lineColor\": \"#FF6600\",\r\n      \"bullet\": \"round\",\r\n      \"bulletBorderThickness\": 1,\r\n      \"hideBulletsCount\": 30,\r\n      \"title\": \"red line\",\r\n      \"valueField\": \"visits\",\r\n      \"fillAlphas\": 0\r\n    }, {\r\n      \"valueAxis\": \"v2\",\r\n      \"lineColor\": \"#FCD202\",\r\n      \"bullet\": \"square\",\r\n      \"bulletBorderThickness\": 1,\r\n      \"hideBulletsCount\": 30,\r\n      \"title\": \"yellow line\",\r\n      \"valueField\": \"hits\",\r\n      \"fillAlphas\": 0\r\n    }, {\r\n      \"valueAxis\": \"v3\",\r\n      \"lineColor\": \"#B0DE09\",\r\n      \"bullet\": \"triangleUp\",\r\n      \"bulletBorderThickness\": 1,\r\n      \"hideBulletsCount\": 30,\r\n      \"title\": \"green line\",\r\n      \"valueField\": \"views\",\r\n      \"fillAlphas\": 0\r\n    }],\r\n    \"chartScrollbar\": {},\r\n    \"chartCursor\": {\r\n      \"cursorPosition\": \"mouse\"\r\n    },\r\n    \"categoryField\": \"date\",\r\n    \"categoryAxis\": {\r\n      \"parseDates\": true,\r\n      \"axisColor\": \"#DADADA\",\r\n      \"minorGridEnabled\": true\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true,\r\n      \"position\": \"bottom-right\"\r\n    }\r\n  };\r\n\r\n\r\n// generate some random data, quite different range\r\n  function generateChartData() {\r\n    let chartData = [];\r\n    const firstDate = new Date();\r\n    firstDate.setDate(firstDate.getDate() - 100);\r\n\r\n    let visits = 1600;\r\n    let hits = 2900;\r\n    let views = 8700;\r\n\r\n\r\n    for (let i = 0; i < 100; i++) {\r\n      // we create date objects here. In your data, you can have date strings\r\n      // and then set format of your dates using chart.dataDateFormat property,\r\n      // however when possible, use date objects, as this will speed up chart rendering.\r\n      const newDate = new Date(firstDate);\r\n      newDate.setDate(newDate.getDate() + i);\r\n\r\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n      hits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n      views += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n\r\n      chartData.push({\r\n        date: newDate,\r\n        visits: visits,\r\n        hits: hits,\r\n        views: views\r\n      });\r\n    }\r\n    return chartData;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MultipleValueAxes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}